Think of vendor credit like a gift card you can spend on a specific bill. Two limits always apply at the same time:

how much of that bill is still unpaid (remaining due), and

how much money is left on your gift card (available credit).

You’re only allowed to apply the smaller of those two.
Formally: max you can apply = min(remaining_due, credit_balance)
where remaining_due = total_amount − paid_amount − advance_payment_applied.

Here are concrete, everyday-style examples:

A) Credit is big, bill is small → blocked by remaining due

Invoice total = 1,200

Already paid = 500

Already applied credit = 0

Remaining due = 700

Available vendor credit = 1,000

You try to apply 800 credit. Even though your credit wallet has 1,000, the bill only needs 700. We block it with “Cannot apply credit beyond remaining due.”
(Apply ≤700 and it’s fine.)

B) Bill is big, credit is small → blocked by credit balance

Invoice total = 1,200

Already paid = 500

Remaining due = 700

Available vendor credit = 500

You try to apply 600 credit. The bill can absorb 700, but you only have 500 credit. We block it with “Insufficient vendor credit.”
(Apply ≤500 and it’s fine.)

C) Bill already fully covered → any application is blocked

Invoice total = 1,200

Paid + previously applied credit = 1,200

Remaining due = 0

Available credit = 300

You try to apply any credit. We block it with “Cannot apply credit beyond remaining due.”
(The invoice is done; save the 300 for another invoice.)

D) Splitting across invoices

You have 900 credit and two open invoices:

Invoice #1 remaining due = 600

Invoice #2 remaining due = 500

You can’t dump all 900 on #1. You must apply ≤600 to #1, and then ≤300 remains to use on #2 (since 900 − 600 = 300). If you try 700 on #1, you’ll hit the remaining due guard.

Why the error message varies

We check both limits. Whichever fails first decides the message:

If you’ve got plenty of credit but exceed the invoice’s remaining due → “Cannot apply credit beyond remaining due.”

If the invoice has room but you don’t have enough credit → “Insufficient vendor credit.”

That’s all the guard is doing—enforcing the common-sense rule that you can’t apply more credit than (a) you have, or (b) the invoice actually needs.

You said:
can you explain credit here? 
Available vendor credit = 1,000
ChatGPT said:
Thought for 6s

Sure — “available vendor credit = 1,000” means you currently have ₨1,000 of store-credit with that vendor that you can use to reduce future/vendor invoices instead of paying cash.

Think of it like a gift card balance the vendor owes you. It’s tracked in the vendor_advances ledger:

Credits added (positive rows):

goods you returned → return credit (source_type='return_credit')

money you prepaid/overpaid → deposit (source_type='deposit')

Credits used (negative rows):

when you apply credit to a specific purchase → source_type='applied_to_purchase' (stored as a negative amount)

Your available vendor credit is simply the running balance:

available_credit
= sum( all vendor_advances.amount )
= (return_credits + deposits) – (credit already applied to purchases)

Mini example

Ledger for Vendor X:

Date	Source Type	Amount
2025-01-05	return_credit	+600
2025-01-06	deposit	+400
2025-01-09	applied_to_purchase	-0

Balance = +1,000 → that’s your “available vendor credit”.

When you later apply 700 to an invoice:

| 2025-01-12 | applied_to_purchase | −700 |

New available credit = 1,000 − 700 = 300.

Key points:

This credit doesn’t reduce a specific invoice until you apply it to that invoice.

You also can’t apply more credit than either (a) your available credit or (b) the invoice’s remaining due — whichever is smaller.