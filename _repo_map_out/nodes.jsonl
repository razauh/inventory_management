{"id": "mod:__init__.py", "kind": "module", "name": "", "path": "__init__.py", "summary": "Module .", "tags": null, "range": null, "parent": null}
{"id": "mod:config.py", "kind": "module", "name": "config", "path": "config.py", "summary": "Module config.", "tags": null, "range": null, "parent": null}
{"id": "pkg:pathlib", "kind": "pkg", "name": "pathlib", "path": null, "summary": "External package 'pathlib' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:constants", "kind": "pkg", "name": "constants", "path": null, "summary": "External package 'constants' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:resolve", "kind": "pkg", "name": "resolve", "path": null, "summary": "External package 'resolve' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Path", "kind": "pkg", "name": "Path", "path": null, "summary": "External package 'Path' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DATA_PATH", "kind": "pkg", "name": "DATA_PATH", "path": null, "summary": "External package 'DATA_PATH' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:constants.py", "kind": "module", "name": "constants", "path": "constants.py", "summary": "Module constants.", "tags": null, "range": null, "parent": null}
{"id": "mod:database/__init__.py", "kind": "module", "name": "database", "path": "database/__init__.py", "summary": "Module database.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/__init__.py:_ensure_version_table", "kind": "function", "name": "_ensure_version_table", "path": "database/__init__.py", "summary": "Function _ensure_version_table.", "tags": null, "range": {"lines": [13, 27], "bytes": [290, 804]}, "parent": "mod:database/__init__.py"}
{"id": "sym:database/__init__.py:get_connection", "kind": "function", "name": "get_connection", "path": "database/__init__.py", "summary": "Returns a sqlite3.Connection with:   - WAL mode   - foreign_keys ON   - row_factory = sqlite3.Row (so rows behave like dicts and tuples) Ensures schema & seed data are applied idempotently.", "tags": null, "range": {"lines": [30, 54], "bytes": [806, 1588]}, "parent": "mod:database/__init__.py"}
{"id": "pkg:sqlite3", "kind": "pkg", "name": "sqlite3", "path": null, "summary": "External package 'sqlite3' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:__future__", "kind": "pkg", "name": "__future__", "path": null, "summary": "External package '__future__' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:config", "kind": "pkg", "name": "config", "path": null, "summary": "External package 'config' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:schema", "kind": "pkg", "name": "schema", "path": null, "summary": "External package 'schema' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:seeders", "kind": "pkg", "name": "seeders", "path": null, "summary": "External package 'seeders' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:conn", "kind": "pkg", "name": "conn", "path": null, "summary": "External package 'conn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fetchone", "kind": "pkg", "name": "fetchone", "path": null, "summary": "External package 'fetchone' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DB_PATH", "kind": "pkg", "name": "DB_PATH", "path": null, "summary": "External package 'DB_PATH' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:schema_module", "kind": "pkg", "name": "schema_module", "path": null, "summary": "External package 'schema_module' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:seed_default_data", "kind": "pkg", "name": "seed_default_data", "path": null, "summary": "External package 'seed_default_data' (stub).", "tags": null, "range": null, "parent": null}
{"id": "db:sql", "kind": "db", "name": "sql", "path": null, "summary": "SQL access (inferred).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/migrations/__init__.py", "kind": "module", "name": "database.migrations", "path": "database/migrations/__init__.py", "summary": "Module database.migrations.", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/__init__.py", "kind": "module", "name": "database.repositories", "path": "database/repositories/__init__.py", "summary": "Repository layer public API.  Usage:     from database.repositories import (         # Customers         CustomersRepo, Customer, CustomersDomainError,         # Expenses         ExpensesRepo, Expense, ExpenseCategory, ExpensesDomainError,         # Customer advances (customer credit)         CustomerAdvancesRepo, get…", "tags": null, "range": null, "parent": null}
{"id": "pkg:customers_repo", "kind": "pkg", "name": "customers_repo", "path": null, "summary": "External package 'customers_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:expenses_repo", "kind": "pkg", "name": "expenses_repo", "path": null, "summary": "External package 'expenses_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:customer_advances_repo", "kind": "pkg", "name": "customer_advances_repo", "path": null, "summary": "External package 'customer_advances_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:inventory_repo", "kind": "pkg", "name": "inventory_repo", "path": null, "summary": "External package 'inventory_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:products_repo", "kind": "pkg", "name": "products_repo", "path": null, "summary": "External package 'products_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:purchase_payments_repo", "kind": "pkg", "name": "purchase_payments_repo", "path": null, "summary": "External package 'purchase_payments_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:purchases_repo", "kind": "pkg", "name": "purchases_repo", "path": null, "summary": "External package 'purchases_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sale_payments_repo", "kind": "pkg", "name": "sale_payments_repo", "path": null, "summary": "External package 'sale_payments_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sales_repo", "kind": "pkg", "name": "sales_repo", "path": null, "summary": "External package 'sales_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vendor_advances_repo", "kind": "pkg", "name": "vendor_advances_repo", "path": null, "summary": "External package 'vendor_advances_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vendor_bank_accounts_repo", "kind": "pkg", "name": "vendor_bank_accounts_repo", "path": null, "summary": "External package 'vendor_bank_accounts_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vendors_repo", "kind": "pkg", "name": "vendors_repo", "path": null, "summary": "External package 'vendors_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/customer_advances_repo.py", "kind": "module", "name": "database.repositories.customer_advances_repo", "path": "database/repositories/customer_advances_repo.py", "summary": "Module database.repositories.customer_advances_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo", "kind": "class", "name": "CustomerAdvancesRepo", "path": "database/repositories/customer_advances_repo.py", "summary": "Helpers for the customer_advances ledger.  Conventions:   • Deposits and return credits ADD credit (positive amounts).   • Applications to a sale CONSUME credit (written as negative amounts).   • DB trigger (e.g., trg_advances_no_overdraw) prevents overall overdraw.   • v_customer_advance_balance view provides current…", "tags": null, "range": {"lines": [9, 260], "bytes": [156, 9585]}, "parent": "mod:database/repositories/customer_advances_repo.py"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.__init__", "kind": "function", "name": "CustomerAdvancesRepo.__init__", "path": "database/repositories/customer_advances_repo.py", "summary": "Method CustomerAdvancesRepo.__init__.", "tags": null, "range": {"lines": [25, 26], "bytes": [667, 748]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo._connect", "kind": "function", "name": "CustomerAdvancesRepo._connect", "path": "database/repositories/customer_advances_repo.py", "summary": "Method CustomerAdvancesRepo._connect.", "tags": null, "range": {"lines": [30, 34], "bytes": [828, 1024]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo._clamp_non_negative", "kind": "function", "name": "CustomerAdvancesRepo._clamp_non_negative", "path": "database/repositories/customer_advances_repo.py", "summary": "Method CustomerAdvancesRepo._clamp_non_negative.", "tags": null, "range": {"lines": [37, 38], "bytes": [1043, 1126]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.grant_credit", "kind": "function", "name": "CustomerAdvancesRepo.grant_credit", "path": "database/repositories/customer_advances_repo.py", "summary": "Grant customer credit via a direct deposit (positive amount). Returns the new tx_id.", "tags": null, "range": {"lines": [44, 76], "bytes": [1360, 2574]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.add_return_credit", "kind": "function", "name": "CustomerAdvancesRepo.add_return_credit", "path": "database/repositories/customer_advances_repo.py", "summary": "Add customer credit resulting from a return (positive amount). Optionally tags the entry with the originating sale_id in source_id. Returns the new tx_id.", "tags": null, "range": {"lines": [78, 113], "bytes": [2575, 3976]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.apply_credit_to_sale", "kind": "function", "name": "CustomerAdvancesRepo.apply_credit_to_sale", "path": "database/repositories/customer_advances_repo.py", "summary": "Apply existing customer credit to a sale (consumes credit). Writes a NEGATIVE amount. Final over-application prevention is enforced by DB triggers.  Soft checks (for clearer messages before the DB enforces):   - amount must be positive.   - sale must exist, be doc_type='sale', and belong to the customer.   - will not …", "tags": null, "range": {"lines": [115, 194], "bytes": [3977, 7526]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.get_balance", "kind": "function", "name": "CustomerAdvancesRepo.get_balance", "path": "database/repositories/customer_advances_repo.py", "summary": "Fetch the current credit balance for a customer from v_customer_advance_balance. Returns 0.0 when no rows exist.", "tags": null, "range": {"lines": [196, 206], "bytes": [7527, 8035]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.list_ledger", "kind": "function", "name": "CustomerAdvancesRepo.list_ledger", "path": "database/repositories/customer_advances_repo.py", "summary": "Method CustomerAdvancesRepo.list_ledger.", "tags": null, "range": {"lines": [209, 220], "bytes": [8079, 8489]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.add_deposit", "kind": "function", "name": "CustomerAdvancesRepo.add_deposit", "path": "database/repositories/customer_advances_repo.py", "summary": "Deprecated wrapper. Use grant_credit().", "tags": null, "range": {"lines": [224, 240], "bytes": [8577, 9046]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo.apply_to_sale", "kind": "function", "name": "CustomerAdvancesRepo.apply_to_sale", "path": "database/repositories/customer_advances_repo.py", "summary": "Deprecated wrapper. Use apply_credit_to_sale().", "tags": null, "range": {"lines": [242, 260], "bytes": [9047, 9585]}, "parent": "sym:database/repositories/customer_advances_repo.py:CustomerAdvancesRepo"}
{"id": "sym:database/repositories/customer_advances_repo.py:get_customer_advances_repo", "kind": "function", "name": "get_customer_advances_repo", "path": "database/repositories/customer_advances_repo.py", "summary": "Function get_customer_advances_repo.", "tags": null, "range": {"lines": [264, 265], "bytes": [9618, 9736]}, "parent": "mod:database/repositories/customer_advances_repo.py"}
{"id": "pkg:typing", "kind": "pkg", "name": "typing", "path": null, "summary": "External package 'typing' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:str", "kind": "pkg", "name": "str", "path": null, "summary": "External package 'str' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:con", "kind": "pkg", "name": "con", "path": null, "summary": "External package 'con' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:float", "kind": "pkg", "name": "float", "path": null, "summary": "External package 'float' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ValueError", "kind": "pkg", "name": "ValueError", "path": null, "summary": "External package 'ValueError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:int", "kind": "pkg", "name": "int", "path": null, "summary": "External package 'int' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:abs", "kind": "pkg", "name": "abs", "path": null, "summary": "External package 'abs' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cur", "kind": "pkg", "name": "cur", "path": null, "summary": "External package 'cur' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerAdvancesRepo", "kind": "pkg", "name": "CustomerAdvancesRepo", "path": null, "summary": "External package 'CustomerAdvancesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/customers_repo.py", "kind": "module", "name": "database.repositories.customers_repo", "path": "database/repositories/customers_repo.py", "summary": "Module database.repositories.customers_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/customers_repo.py:DomainError", "kind": "class", "name": "DomainError", "path": "database/repositories/customers_repo.py", "summary": "Class DomainError.", "tags": null, "range": {"lines": [7, 8], "bytes": [166, 205]}, "parent": "mod:database/repositories/customers_repo.py"}
{"id": "sym:database/repositories/customers_repo.py:Customer", "kind": "class", "name": "Customer", "path": "database/repositories/customers_repo.py", "summary": "Class Customer.", "tags": null, "range": {"lines": [12, 16], "bytes": [218, 322]}, "parent": "mod:database/repositories/customers_repo.py"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo", "kind": "class", "name": "CustomersRepo", "path": "database/repositories/customers_repo.py", "summary": "Class CustomersRepo.", "tags": null, "range": {"lines": [19, 145], "bytes": [324, 5037]}, "parent": "mod:database/repositories/customers_repo.py"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.__init__", "kind": "function", "name": "CustomersRepo.__init__", "path": "database/repositories/customers_repo.py", "summary": "Method CustomersRepo.__init__.", "tags": null, "range": {"lines": [20, 23], "bytes": [345, 506]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo._normalize_text", "kind": "function", "name": "CustomersRepo._normalize_text", "path": "database/repositories/customers_repo.py", "summary": "Method CustomersRepo._normalize_text.", "tags": null, "range": {"lines": [28, 32], "bytes": [604, 812]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo._ensure_non_empty", "kind": "function", "name": "CustomersRepo._ensure_non_empty", "path": "database/repositories/customers_repo.py", "summary": "Method CustomersRepo._ensure_non_empty.", "tags": null, "range": {"lines": [35, 37], "bytes": [831, 1017]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.list_customers", "kind": "function", "name": "CustomersRepo.list_customers", "path": "database/repositories/customers_repo.py", "summary": "Returns customers. By default, only active rows (is_active=1). Set active_only=False to include inactive as well.", "tags": null, "range": {"lines": [41, 59], "bytes": [1097, 1869]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.search", "kind": "function", "name": "CustomersRepo.search", "path": "database/repositories/customers_repo.py", "summary": "Server-side search over id/name/contact/address. Matches using LIKE on:   - CAST(customer_id AS TEXT)   - name   - contact_info   - address", "tags": null, "range": {"lines": [61, 96], "bytes": [1870, 3247]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.get", "kind": "function", "name": "CustomersRepo.get", "path": "database/repositories/customers_repo.py", "summary": "Method CustomersRepo.get.", "tags": null, "range": {"lines": [98, 104], "bytes": [3248, 3547]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.create", "kind": "function", "name": "CustomersRepo.create", "path": "database/repositories/customers_repo.py", "summary": "Insert a new customer. Soft validation mirrors form checks.", "tags": null, "range": {"lines": [108, 126], "bytes": [3627, 4325]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "sym:database/repositories/customers_repo.py:CustomersRepo.update", "kind": "function", "name": "CustomersRepo.update", "path": "database/repositories/customers_repo.py", "summary": "Update core fields for a customer. Soft validation mirrors form checks.", "tags": null, "range": {"lines": [128, 145], "bytes": [4326, 5037]}, "parent": "sym:database/repositories/customers_repo.py:CustomersRepo"}
{"id": "pkg:dataclasses", "kind": "pkg", "name": "dataclasses", "path": null, "summary": "External package 'dataclasses' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:s", "kind": "pkg", "name": "s", "path": null, "summary": "External package 's' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:value", "kind": "pkg", "name": "value", "path": null, "summary": "External package 'value' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DomainError", "kind": "pkg", "name": "DomainError", "path": null, "summary": "External package 'DomainError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fetchall", "kind": "pkg", "name": "fetchall", "path": null, "summary": "External package 'fetchall' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:self", "kind": "pkg", "name": "self", "path": null, "summary": "External package 'self' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Customer", "kind": "pkg", "name": "Customer", "path": null, "summary": "External package 'Customer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dict", "kind": "pkg", "name": "dict", "path": null, "summary": "External package 'dict' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:term", "kind": "pkg", "name": "term", "path": null, "summary": "External package 'term' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/dashboard_repo.py", "kind": "module", "name": "database.repositories.dashboard_repo", "path": "database/repositories/dashboard_repo.py", "summary": "Module database.repositories.dashboard_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo", "kind": "class", "name": "DashboardRepo", "path": "database/repositories/dashboard_repo.py", "summary": "Thin query layer for the Dashboard.  All methods are read-only and compatible with schema.py. Each method returns either a float or a list[dict].  Performance note: - Date columns are compared directly (e.g., col >= ? AND col <= ?) to keep   SQLite eligible to use indexes on those columns. Ensure dates are stored   as…", "tags": null, "range": {"lines": [15, 475], "bytes": [293, 17869]}, "parent": "mod:database/repositories/dashboard_repo.py"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.__init__", "kind": "function", "name": "DashboardRepo.__init__", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.__init__.", "tags": null, "range": {"lines": [37, 40], "bytes": [1221, 1427]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.total_sales", "kind": "function", "name": "DashboardRepo.total_sales", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.total_sales.", "tags": null, "range": {"lines": [44, 51], "bytes": [1507, 1851]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.cogs_for_sales", "kind": "function", "name": "DashboardRepo.cogs_for_sales", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.cogs_for_sales.", "tags": null, "range": {"lines": [53, 62], "bytes": [1852, 2316]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.expenses_total", "kind": "function", "name": "DashboardRepo.expenses_total", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.expenses_total.", "tags": null, "range": {"lines": [64, 70], "bytes": [2317, 2623]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.gross_profit", "kind": "function", "name": "DashboardRepo.gross_profit", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.gross_profit.", "tags": null, "range": {"lines": [72, 75], "bytes": [2624, 2827]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.net_profit", "kind": "function", "name": "DashboardRepo.net_profit", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.net_profit.", "tags": null, "range": {"lines": [77, 81], "bytes": [2828, 3091]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.receipts_cleared", "kind": "function", "name": "DashboardRepo.receipts_cleared", "path": "database/repositories/dashboard_repo.py", "summary": "Incoming receipts that actually CLEARED in the window. Uses cleared_date and clearing_state='cleared'. (This is a bank-cleared metric; it intentionally excludes customer-credit applications.)", "tags": null, "range": {"lines": [85, 97], "bytes": [3171, 3792]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.vendor_payments_cleared", "kind": "function", "name": "DashboardRepo.vendor_payments_cleared", "path": "database/repositories/dashboard_repo.py", "summary": "Outgoing payments to vendors that CLEARED in the window. Positive amounts = outflow; negative = refunds (inflow). Returns the signed net (out - refunds). (Purchase side is already cleared-only in triggers for paid rollups.)", "tags": null, "range": {"lines": [99, 112], "bytes": [3793, 4465]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.bank_movements_by_account", "kind": "function", "name": "DashboardRepo.bank_movements_by_account", "path": "database/repositories/dashboard_repo.py", "summary": "Sums in/out by company bank account using v_bank_ledger_ext. Note: Cash payments have bank_account_id NULL and are excluded.", "tags": null, "range": {"lines": [114, 148], "bytes": [4466, 5749]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.open_receivables", "kind": "function", "name": "DashboardRepo.open_receivables", "path": "database/repositories/dashboard_repo.py", "summary": "Remaining = total_amount - (paid_amount + advance_payment_applied). Only real sales (doc_type = 'sale'); only positive remaining.", "tags": null, "range": {"lines": [152, 172], "bytes": [5829, 6583]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.open_payables", "kind": "function", "name": "DashboardRepo.open_payables", "path": "database/repositories/dashboard_repo.py", "summary": "Remaining for purchases = total_amount - (paid_amount + advance_payment_applied). Only positive remaining. (For purchases, paid_amount is already a cleared-only rollup via triggers.)", "tags": null, "range": {"lines": [174, 194], "bytes": [6584, 7360]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.low_stock_count", "kind": "function", "name": "DashboardRepo.low_stock_count", "path": "database/repositories/dashboard_repo.py", "summary": "Products with on-hand < min_stock_level. v_stock_on_hand may not have a row; treat missing qty as 0.", "tags": null, "range": {"lines": [196, 211], "bytes": [7361, 7969]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.low_stock_rows", "kind": "function", "name": "DashboardRepo.low_stock_rows", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo.low_stock_rows.", "tags": null, "range": {"lines": [213, 236], "bytes": [7970, 8992]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.top_products", "kind": "function", "name": "DashboardRepo.top_products", "path": "database/repositories/dashboard_repo.py", "summary": "Top products by revenue within date range (sales only). qty_base computed via product_uoms factor_to_base (same logic as sale_item_cogs). revenue = quantity * (unit_price - item_discount).", "tags": null, "range": {"lines": [240, 283], "bytes": [9073, 10869]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.top_customers", "kind": "function", "name": "DashboardRepo.top_customers", "path": "database/repositories/dashboard_repo.py", "summary": "Top customers by revenue over an explicit date range (app-locale provided). Replace any prior MTD variant that used the DB clock.", "tags": null, "range": {"lines": [285, 313], "bytes": [10870, 11962]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.quotations_expiring", "kind": "function", "name": "DashboardRepo.quotations_expiring", "path": "database/repositories/dashboard_repo.py", "summary": "Quotations whose expiry_date is within [date_from, date_to] (inclusive). Caller must pass app-locale bounds (e.g., today → today+N).", "tags": null, "range": {"lines": [315, 343], "bytes": [11963, 13054]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.sales_payments_breakdown", "kind": "function", "name": "DashboardRepo.sales_payments_breakdown", "path": "database/repositories/dashboard_repo.py", "summary": "Sum sales payments by method and clearing_state over posting date range. (Use cleared_date only for 'cleared totals' KPI; this is a pipeline view.) Note: This is *payments only*; customer-credit applications are reflected in 'paid_total' via advance_payment_applied, not in this breakdown table.", "tags": null, "range": {"lines": [347, 374], "bytes": [13134, 14229]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.purchase_payments_breakdown", "kind": "function", "name": "DashboardRepo.purchase_payments_breakdown", "path": "database/repositories/dashboard_repo.py", "summary": "Sum purchase payments by method and clearing_state over posting date range. Positive amounts are outflows; negatives are refunds/inflows.", "tags": null, "range": {"lines": [376, 401], "bytes": [14230, 15158]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.sales_paid_total", "kind": "function", "name": "DashboardRepo.sales_paid_total", "path": "database/repositories/dashboard_repo.py", "summary": "Sum of (paid_amount + advance_payment_applied) for sales whose *invoice date* is within [date_from, date_to]. This treats 'paid total' by sale header date.", "tags": null, "range": {"lines": [405, 419], "bytes": [15239, 15899]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo.purchases_paid_total", "kind": "function", "name": "DashboardRepo.purchases_paid_total", "path": "database/repositories/dashboard_repo.py", "summary": "Sum of (paid_amount + advance_payment_applied) for purchases whose *header date* is within [date_from, date_to]. Note: paid_amount on purchases is cleared-only.", "tags": null, "range": {"lines": [421, 434], "bytes": [15900, 16535]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo._scalar", "kind": "function", "name": "DashboardRepo._scalar", "path": "database/repositories/dashboard_repo.py", "summary": "Execute a scalar query. Prefer returning by named alias (default 'v'). Falls back to the single column or index 0 for robustness.", "tags": null, "range": {"lines": [438, 471], "bytes": [16616, 17684]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:DashboardRepo._rows", "kind": "function", "name": "DashboardRepo._rows", "path": "database/repositories/dashboard_repo.py", "summary": "Method DashboardRepo._rows.", "tags": null, "range": {"lines": [473, 475], "bytes": [17685, 17869]}, "parent": "sym:database/repositories/dashboard_repo.py:DashboardRepo"}
{"id": "sym:database/repositories/dashboard_repo.py:_to_float", "kind": "function", "name": "_to_float", "path": "database/repositories/dashboard_repo.py", "summary": "Function _to_float.", "tags": null, "range": {"lines": [8, 12], "bytes": [168, 291]}, "parent": "mod:database/repositories/dashboard_repo.py"}
{"id": "pkg:out", "kind": "pkg", "name": "out", "path": null, "summary": "External package 'out' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:isinstance", "kind": "pkg", "name": "isinstance", "path": null, "summary": "External package 'isinstance' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:row", "kind": "pkg", "name": "row", "path": null, "summary": "External package 'row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:len", "kind": "pkg", "name": "len", "path": null, "summary": "External package 'len' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/expenses_repo.py", "kind": "module", "name": "database.repositories.expenses_repo", "path": "database/repositories/expenses_repo.py", "summary": "Module database.repositories.expenses_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/expenses_repo.py:DomainError", "kind": "class", "name": "DomainError", "path": "database/repositories/expenses_repo.py", "summary": "Domain-level error raised for validation issues.", "tags": null, "range": {"lines": [40, 42], "bytes": [1350, 1448]}, "parent": "mod:database/repositories/expenses_repo.py"}
{"id": "sym:database/repositories/expenses_repo.py:ExpenseCategory", "kind": "class", "name": "ExpenseCategory", "path": "database/repositories/expenses_repo.py", "summary": "Class ExpenseCategory.", "tags": null, "range": {"lines": [46, 48], "bytes": [1461, 1526]}, "parent": "mod:database/repositories/expenses_repo.py"}
{"id": "sym:database/repositories/expenses_repo.py:Expense", "kind": "class", "name": "Expense", "path": "database/repositories/expenses_repo.py", "summary": "Class Expense.", "tags": null, "range": {"lines": [52, 58], "bytes": [1539, 1692]}, "parent": "mod:database/repositories/expenses_repo.py"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo", "kind": "class", "name": "ExpensesRepo", "path": "database/repositories/expenses_repo.py", "summary": "Repository for CRUD operations on expense categories and expenses.  The repository accepts a `sqlite3.Connection` in its constructor and persists changes immediately (auto-commit behaviour) after write operations.  It exposes high-level methods for listing, searching, creating, updating and deleting both categories an…", "tags": null, "range": {"lines": [61, 379], "bytes": [1694, 13245]}, "parent": "mod:database/repositories/expenses_repo.py"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.__init__", "kind": "function", "name": "ExpensesRepo.__init__", "path": "database/repositories/expenses_repo.py", "summary": "Method ExpensesRepo.__init__.", "tags": null, "range": {"lines": [72, 75], "bytes": [2158, 2319]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.list_categories", "kind": "function", "name": "ExpensesRepo.list_categories", "path": "database/repositories/expenses_repo.py", "summary": "Return all expense categories ordered by name.", "tags": null, "range": {"lines": [81, 86], "bytes": [2493, 2800]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.create_category", "kind": "function", "name": "ExpensesRepo.create_category", "path": "database/repositories/expenses_repo.py", "summary": "Insert a new expense category.  Raises DomainError if the name is blank.  If the name already exists a UNIQUE constraint violation will be raised by SQLite. Returns the new category_id.", "tags": null, "range": {"lines": [88, 103], "bytes": [2801, 3395]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.update_category", "kind": "function", "name": "ExpensesRepo.update_category", "path": "database/repositories/expenses_repo.py", "summary": "Update the name of an existing category.", "tags": null, "range": {"lines": [105, 114], "bytes": [3396, 3816]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.delete_category", "kind": "function", "name": "ExpensesRepo.delete_category", "path": "database/repositories/expenses_repo.py", "summary": "Remove a category. Translate FK violations into a domain error.", "tags": null, "range": {"lines": [116, 128], "bytes": [3817, 4375]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.list_expenses", "kind": "function", "name": "ExpensesRepo.list_expenses", "path": "database/repositories/expenses_repo.py", "summary": "List expenses, optionally filtering by category_id.  Returns a list of dictionaries with keys:   expense_id, description, amount, date, category_id, category_name Sorted by descending date then descending expense_id.", "tags": null, "range": {"lines": [134, 172], "bytes": [4548, 6111]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.search_expenses", "kind": "function", "name": "ExpensesRepo.search_expenses", "path": "database/repositories/expenses_repo.py", "summary": "Search expenses by description, optional date and category.  Performs a LIKE search on description.  Date filter uses DATE() to compare calendar days.  Category filter matches on exact ID. Returns matching rows ordered by date descending then expense_id.", "tags": null, "range": {"lines": [174, 212], "bytes": [6112, 7573]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.search_expenses_adv", "kind": "function", "name": "ExpensesRepo.search_expenses_adv", "path": "database/repositories/expenses_repo.py", "summary": "Advanced search by description, date range, category, and amount range.  - query: LIKE match on description (case-insensitive per collation) - date_from/date_to: inclusive range on calendar days using DATE() - category_id: exact match on category id - amount_min/amount_max: inclusive numeric range (cast to REAL)  Retu…", "tags": null, "range": {"lines": [214, 275], "bytes": [7574, 9741]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.create_expense", "kind": "function", "name": "ExpensesRepo.create_expense", "path": "database/repositories/expenses_repo.py", "summary": "Insert a new expense.  `description` must be non-empty and `amount` must be non-negative. `date` should be a valid ISO date string (enforced by SQLite only on DATE() functions).  `category_id` may be None. Returns the newly inserted expense_id.", "tags": null, "range": {"lines": [277, 302], "bytes": [9742, 10724]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.update_expense", "kind": "function", "name": "ExpensesRepo.update_expense", "path": "database/repositories/expenses_repo.py", "summary": "Update an existing expense.  Same validation rules as `create_expense` apply.", "tags": null, "range": {"lines": [304, 330], "bytes": [10725, 11586]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.delete_expense", "kind": "function", "name": "ExpensesRepo.delete_expense", "path": "database/repositories/expenses_repo.py", "summary": "Delete an expense by ID.", "tags": null, "range": {"lines": [332, 338], "bytes": [11587, 11829]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.get_expense", "kind": "function", "name": "ExpensesRepo.get_expense", "path": "database/repositories/expenses_repo.py", "summary": "Fetch a single expense by ID.  Returns None if not found.", "tags": null, "range": {"lines": [340, 358], "bytes": [11830, 12498]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "sym:database/repositories/expenses_repo.py:ExpensesRepo.total_by_category", "kind": "function", "name": "ExpensesRepo.total_by_category", "path": "database/repositories/expenses_repo.py", "summary": "Compute the total amount spent in each category.  Includes categories with no expenses (total = 0.0).  Returns a list ordered by category name with keys: category_id, category_name, total_amount.", "tags": null, "range": {"lines": [360, 379], "bytes": [12499, 13245]}, "parent": "sym:database/repositories/expenses_repo.py:ExpensesRepo"}
{"id": "pkg:ExpenseCategory", "kind": "pkg", "name": "ExpenseCategory", "path": null, "summary": "External package 'ExpenseCategory' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:name", "kind": "pkg", "name": "name", "path": null, "summary": "External package 'name' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:where", "kind": "pkg", "name": "where", "path": null, "summary": "External package 'where' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:params", "kind": "pkg", "name": "params", "path": null, "summary": "External package 'params' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:query", "kind": "pkg", "name": "query", "path": null, "summary": "External package 'query' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:join", "kind": "pkg", "name": "join", "path": null, "summary": "External package 'join' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tuple", "kind": "pkg", "name": "tuple", "path": null, "summary": "External package 'tuple' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:description", "kind": "pkg", "name": "description", "path": null, "summary": "External package 'description' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/inventory_repo.py", "kind": "module", "name": "database.repositories.inventory_repo", "path": "database/repositories/inventory_repo.py", "summary": "Module database.repositories.inventory_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/inventory_repo.py:DomainError", "kind": "class", "name": "DomainError", "path": "database/repositories/inventory_repo.py", "summary": "Domain-level error suitable for surfacing to the UI.", "tags": null, "range": {"lines": [20, 22], "bytes": [605, 707]}, "parent": "mod:database/repositories/inventory_repo.py"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo", "kind": "class", "name": "InventoryRepo", "path": "database/repositories/inventory_repo.py", "summary": "Class InventoryRepo.", "tags": null, "range": {"lines": [25, 266], "bytes": [709, 10358]}, "parent": "mod:database/repositories/inventory_repo.py"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.__init__", "kind": "function", "name": "InventoryRepo.__init__", "path": "database/repositories/inventory_repo.py", "summary": "Method InventoryRepo.__init__.", "tags": null, "range": {"lines": [26, 32], "bytes": [730, 958]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.list_products_for_select", "kind": "function", "name": "InventoryRepo.list_products_for_select", "path": "database/repositories/inventory_repo.py", "summary": "Return [(product_id, name), ...] ordered by name for populating combos.", "tags": null, "range": {"lines": [37, 44], "bytes": [1149, 1504]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.recent_transactions", "kind": "function", "name": "InventoryRepo.recent_transactions", "path": "database/repositories/inventory_repo.py", "summary": "Return most recent inventory transactions limited by `limit`. Aliases match TransactionsTableModel headers:    ID | Date | Type | Product | Qty | UoM | Notes Ordered by t.date DESC, transaction_id DESC.  IMPORTANT: Column aliases are chosen to match the *model*:   transaction_id, date, transaction_type, product, quant…", "tags": null, "range": {"lines": [49, 76], "bytes": [1724, 3071]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.find_transactions", "kind": "function", "name": "InventoryRepo.find_transactions", "path": "database/repositories/inventory_repo.py", "summary": "Find transactions by optional date range and/or product id with a limit. Aliases match TransactionsTableModel headers:    ID | Date | Type | Product | Qty | UoM | Notes  Ordering: t.date DESC, t.transaction_id DESC Only applies WHERE fragments when corresponding filters are provided.  IMPORTANT: Column aliases are cho…", "tags": null, "range": {"lines": [81, 137], "bytes": [3276, 5435]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.stock_on_hand", "kind": "function", "name": "InventoryRepo.stock_on_hand", "path": "database/repositories/inventory_repo.py", "summary": "Return a snapshot for a single product from v_stock_on_hand.  Expected (ideal) view columns:   product_id, product_name, uom_name, on_hand_qty, unit_value, total_value  If `unit_value` or `total_value` are missing from the view, this method fills what it can and computes total_value = on_hand_qty * unit_value when bot…", "tags": null, "range": {"lines": [142, 189], "bytes": [5645, 7660]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo.add_adjustment", "kind": "function", "name": "InventoryRepo.add_adjustment", "path": "database/repositories/inventory_repo.py", "summary": "Insert an 'adjustment' row into inventory_transactions.  Matches real table columns (from PRAGMA table_info):   transaction_id, product_id, quantity, uom_id, transaction_type,   reference_table, reference_id, reference_item_id,   date, posted_at, txn_seq, notes, created_by", "tags": null, "range": {"lines": [194, 238], "bytes": [7825, 9523]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo._row_to_dict", "kind": "function", "name": "InventoryRepo._row_to_dict", "path": "database/repositories/inventory_repo.py", "summary": "Method InventoryRepo._row_to_dict.", "tags": null, "range": {"lines": [244, 245], "bytes": [9704, 9823]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo._to_float", "kind": "function", "name": "InventoryRepo._to_float", "path": "database/repositories/inventory_repo.py", "summary": "Method InventoryRepo._to_float.", "tags": null, "range": {"lines": [248, 254], "bytes": [9842, 10020]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "sym:database/repositories/inventory_repo.py:InventoryRepo._normalize_limit", "kind": "function", "name": "InventoryRepo._normalize_limit", "path": "database/repositories/inventory_repo.py", "summary": "Guard the limit to a safe set (50/100/500) to match UI choices. Default to 100 if unrecognized.", "tags": null, "range": {"lines": [257, 266], "bytes": [10039, 10358]}, "parent": "sym:database/repositories/inventory_repo.py:InventoryRepo"}
{"id": "pkg:d", "kind": "pkg", "name": "d", "path": null, "summary": "External package 'd' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/login_repo.py", "kind": "module", "name": "database.repositories.login_repo", "path": "database/repositories/login_repo.py", "summary": "Module database.repositories.login_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/login_repo.py:LoginRepo", "kind": "class", "name": "LoginRepo", "path": "database/repositories/login_repo.py", "summary": "Thin data-access layer for login/auth.  Matches your current schema:   users(user_id, username, password_hash, full_name, email, role,         is_active, created_date, last_login, failed_attempts, locked_until)  Also writes to audit_logs for attempt logging.  Notes on security/operations:   - This repo does NOT verify…", "tags": null, "range": {"lines": [8, 176], "bytes": [140, 6730]}, "parent": "mod:database/repositories/login_repo.py"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo.__init__", "kind": "function", "name": "LoginRepo.__init__", "path": "database/repositories/login_repo.py", "summary": "Method LoginRepo.__init__.", "tags": null, "range": {"lines": [32, 34], "bytes": [1215, 1342]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo._norm_username", "kind": "function", "name": "LoginRepo._norm_username", "path": "database/repositories/login_repo.py", "summary": "Method LoginRepo._norm_username.", "tags": null, "range": {"lines": [39, 42], "bytes": [1438, 1656]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo.get_user_by_username", "kind": "function", "name": "LoginRepo.get_user_by_username", "path": "database/repositories/login_repo.py", "summary": "Return the full user as a plain dict (caller decides what to use). Only columns that exist in your schema are selected.", "tags": null, "range": {"lines": [46, 68], "bytes": [1734, 2431]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo.increment_failed_attempts", "kind": "function", "name": "LoginRepo.increment_failed_attempts", "path": "database/repositories/login_repo.py", "summary": "Atomically bump failed_attempts; if threshold reached, set locked_until.  Args:     user_id: Target user.     max_attempts: Threshold for locking (min 1; defaults to 3 if < 1).     lock_minutes: Window length in minutes (min 1; defaults to 15 if < 1)                   when using DB-clock-based locking.     lock_until_…", "tags": null, "range": {"lines": [72, 132], "bytes": [2509, 5031]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo.reset_failed_attempts_and_touch_login", "kind": "function", "name": "LoginRepo.reset_failed_attempts_and_touch_login", "path": "database/repositories/login_repo.py", "summary": "On successful login: zero failed_attempts, set last_login=now, clear locked_until. (No prev_login column in schema; not updating it.)", "tags": null, "range": {"lines": [134, 147], "bytes": [5032, 5547]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "sym:database/repositories/login_repo.py:LoginRepo.insert_auth_log", "kind": "function", "name": "LoginRepo.insert_auth_log", "path": "database/repositories/login_repo.py", "summary": "Record the attempt in audit_logs. We’ll try to resolve user_id by username; if not found (e.g., unknown user), store NULL for user_id.  NOTE: Callers should ensure password verification uses a strong KDF       before marking an attempt as successful.", "tags": null, "range": {"lines": [149, 176], "bytes": [5548, 6730]}, "parent": "sym:database/repositories/login_repo.py:LoginRepo"}
{"id": "pkg:strip", "kind": "pkg", "name": "strip", "path": null, "summary": "External package 'strip' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/products_repo.py", "kind": "module", "name": "database.repositories.products_repo", "path": "database/repositories/products_repo.py", "summary": "Module database.repositories.products_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/products_repo.py:DomainError", "kind": "class", "name": "DomainError", "path": "database/repositories/products_repo.py", "summary": "Domain-level error the controller/UI can surface (toast/snackbar).", "tags": null, "range": {"lines": [8, 10], "bytes": [191, 307]}, "parent": "mod:database/repositories/products_repo.py"}
{"id": "sym:database/repositories/products_repo.py:Product", "kind": "class", "name": "Product", "path": "database/repositories/products_repo.py", "summary": "Class Product.", "tags": null, "range": {"lines": [14, 19], "bytes": [320, 456]}, "parent": "mod:database/repositories/products_repo.py"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo", "kind": "class", "name": "ProductsRepo", "path": "database/repositories/products_repo.py", "summary": "Class ProductsRepo.", "tags": null, "range": {"lines": [22, 301], "bytes": [458, 11547]}, "parent": "mod:database/repositories/products_repo.py"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.__init__", "kind": "function", "name": "ProductsRepo.__init__", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.__init__.", "tags": null, "range": {"lines": [23, 26], "bytes": [478, 687]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo._immediate_tx", "kind": "function", "name": "ProductsRepo._immediate_tx", "path": "database/repositories/products_repo.py", "summary": "Start an IMMEDIATE transaction (write lock once first write happens), commit on success, rollback on error.", "tags": null, "range": {"lines": [31, 45], "bytes": [783, 1216]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.list_products", "kind": "function", "name": "ProductsRepo.list_products", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.list_products.", "tags": null, "range": {"lines": [49, 55], "bytes": [1291, 1589]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.get", "kind": "function", "name": "ProductsRepo.get", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.get.", "tags": null, "range": {"lines": [57, 63], "bytes": [1590, 1899]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.create", "kind": "function", "name": "ProductsRepo.create", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.create.", "tags": null, "range": {"lines": [65, 78], "bytes": [1900, 2371]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.update", "kind": "function", "name": "ProductsRepo.update", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.update.", "tags": null, "range": {"lines": [80, 94], "bytes": [2372, 2861]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo._product_is_referenced", "kind": "function", "name": "ProductsRepo._product_is_referenced", "path": "database/repositories/products_repo.py", "summary": "Check common referencing tables that do NOT have ON DELETE CASCADE. If any reference exists, deletion would either fail or orphan business data.", "tags": null, "range": {"lines": [96, 110], "bytes": [2862, 3596]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.deactivate", "kind": "function", "name": "ProductsRepo.deactivate", "path": "database/repositories/products_repo.py", "summary": "Soft-delete if the schema has products.is_active. If the column is not present, raise a clear DomainError so the caller can advise to run migrations.", "tags": null, "range": {"lines": [112, 130], "bytes": [3597, 4604]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.delete", "kind": "function", "name": "ProductsRepo.delete", "path": "database/repositories/products_repo.py", "summary": "Safer delete: disallow if referenced anywhere important to avoid orphans. Prefer using deactivate() if your schema includes products.is_active.", "tags": null, "range": {"lines": [132, 143], "bytes": [4605, 5204]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.list_uoms", "kind": "function", "name": "ProductsRepo.list_uoms", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.list_uoms.", "tags": null, "range": {"lines": [147, 151], "bytes": [5290, 5489]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.add_uom", "kind": "function", "name": "ProductsRepo.add_uom", "path": "database/repositories/products_repo.py", "summary": "Concurrency-safe attach-or-return existing UoM by name. - Attempts INSERT (unique on unit_name recommended). - Uses SELECT changes() to see if a row was inserted. - If not inserted (already existed), fetch its id.", "tags": null, "range": {"lines": [153, 178], "bytes": [5490, 6863]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.product_uoms", "kind": "function", "name": "ProductsRepo.product_uoms", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.product_uoms.", "tags": null, "range": {"lines": [180, 193], "bytes": [6864, 7406]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.list_product_uoms", "kind": "function", "name": "ProductsRepo.list_product_uoms", "path": "database/repositories/products_repo.py", "summary": "Expose all UoMs for a product with factors (base-first).", "tags": null, "range": {"lines": [195, 210], "bytes": [7407, 8023]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.get_base_uom", "kind": "function", "name": "ProductsRepo.get_base_uom", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.get_base_uom.", "tags": null, "range": {"lines": [212, 223], "bytes": [8024, 8436]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.set_base_uom", "kind": "function", "name": "ProductsRepo.set_base_uom", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.set_base_uom.", "tags": null, "range": {"lines": [225, 236], "bytes": [8437, 8987]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.add_alt_uom", "kind": "function", "name": "ProductsRepo.add_alt_uom", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.add_alt_uom.", "tags": null, "range": {"lines": [238, 249], "bytes": [8988, 9542]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.remove_alt_uom", "kind": "function", "name": "ProductsRepo.remove_alt_uom", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.remove_alt_uom.", "tags": null, "range": {"lines": [251, 253], "bytes": [9543, 9737]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.uom_by_id", "kind": "function", "name": "ProductsRepo.uom_by_id", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.uom_by_id.", "tags": null, "range": {"lines": [255, 259], "bytes": [9738, 9965]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.latest_prices_base", "kind": "function", "name": "ProductsRepo.latest_prices_base", "path": "database/repositories/products_repo.py", "summary": "Returns per-unit prices in BASE UoM: {\"cost\": purchase_price, \"sale\": sale_price, \"date\": <str|None>} taken from the most recent purchase item for this product. If none, zeros. Assumes purchases.date is stored as ISO 'YYYY-MM-DD'.", "tags": null, "range": {"lines": [263, 294], "bytes": [10041, 11277]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "sym:database/repositories/products_repo.py:ProductsRepo.on_hand_base", "kind": "function", "name": "ProductsRepo.on_hand_base", "path": "database/repositories/products_repo.py", "summary": "Method ProductsRepo.on_hand_base.", "tags": null, "range": {"lines": [296, 301], "bytes": [11278, 11547]}, "parent": "sym:database/repositories/products_repo.py:ProductsRepo"}
{"id": "pkg:contextlib", "kind": "pkg", "name": "contextlib", "path": null, "summary": "External package 'contextlib' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Product", "kind": "pkg", "name": "Product", "path": null, "summary": "External package 'Product' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/purchase_payments_repo.py", "kind": "module", "name": "database.repositories.purchase_payments_repo", "path": "database/repositories/purchase_payments_repo.py", "summary": "Module database.repositories.purchase_payments_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo", "kind": "class", "name": "PurchasePaymentsRepo", "path": "database/repositories/purchase_payments_repo.py", "summary": "Class PurchasePaymentsRepo.", "tags": null, "range": {"lines": [6, 226], "bytes": [80, 7201]}, "parent": "mod:database/repositories/purchase_payments_repo.py"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.__init__", "kind": "function", "name": "PurchasePaymentsRepo.__init__", "path": "database/repositories/purchase_payments_repo.py", "summary": "Method PurchasePaymentsRepo.__init__.", "tags": null, "range": {"lines": [7, 10], "bytes": [108, 269]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.record_payment", "kind": "function", "name": "PurchasePaymentsRepo.record_payment", "path": "database/repositories/purchase_payments_repo.py", "summary": "Insert one row into purchase_payments.  Notes:   - amount > 0 => payment to vendor; amount < 0 => refund from vendor.   - Business rule (cleared-only policy):       Only rows with clearing_state='cleared' contribute to purchases.paid_amount       and payment_status via DB triggers. Rows in 'posted', 'pending', or 'bou…", "tags": null, "range": {"lines": [12, 83], "bytes": [270, 2639]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.update_clearing_state", "kind": "function", "name": "PurchasePaymentsRepo.update_clearing_state", "path": "database/repositories/purchase_payments_repo.py", "summary": "Update clearing status for a payment (no commit).", "tags": null, "range": {"lines": [85, 111], "bytes": [2640, 3430]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.list_payments", "kind": "function", "name": "PurchasePaymentsRepo.list_payments", "path": "database/repositories/purchase_payments_repo.py", "summary": "List all cash movements (payments and refunds) for a purchase.  Returns sqlite rows ordered by date then payment_id.", "tags": null, "range": {"lines": [113, 141], "bytes": [3431, 4261]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.list_payments_for_vendor", "kind": "function", "name": "PurchasePaymentsRepo.list_payments_for_vendor", "path": "database/repositories/purchase_payments_repo.py", "summary": "Join purchase_payments -> purchases to list all cash movements for a vendor. Fields:   payment_id, date, amount, method, instrument_type, instrument_no,   bank_account_id, vendor_bank_account_id, clearing_state, ref_no, notes, purchase_id Ordering: DATE(pp.date) ASC, pp.payment_id ASC  Statement mapping (handled by ca…", "tags": null, "range": {"lines": [145, 193], "bytes": [4340, 6089]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.list_payments_for_purchase", "kind": "function", "name": "PurchasePaymentsRepo.list_payments_for_purchase", "path": "database/repositories/purchase_payments_repo.py", "summary": "Alias of list_payments(purchase_id) for statement drilldowns.", "tags": null, "range": {"lines": [195, 199], "bytes": [6090, 6305]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo.list_pending_instruments", "kind": "function", "name": "PurchasePaymentsRepo.list_pending_instruments", "path": "database/repositories/purchase_payments_repo.py", "summary": "Optional: list rows with clearing_state='pending' for that vendor (via join to purchases). Useful for reconciliation reports.", "tags": null, "range": {"lines": [201, 226], "bytes": [6306, 7201]}, "parent": "sym:database/repositories/purchase_payments_repo.py:PurchasePaymentsRepo"}
{"id": "pkg:sets", "kind": "pkg", "name": "sets", "path": null, "summary": "External package 'sets' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sql_parts", "kind": "pkg", "name": "sql_parts", "path": null, "summary": "External package 'sql_parts' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/purchases_repo.py", "kind": "module", "name": "database.repositories.purchases_repo", "path": "database/repositories/purchases_repo.py", "summary": "Module database.repositories.purchases_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/purchases_repo.py:PurchaseHeader", "kind": "class", "name": "PurchaseHeader", "path": "database/repositories/purchases_repo.py", "summary": "Class PurchaseHeader.", "tags": null, "range": {"lines": [12, 22], "bytes": [312, 569]}, "parent": "mod:database/repositories/purchases_repo.py"}
{"id": "sym:database/repositories/purchases_repo.py:PurchaseItem", "kind": "class", "name": "PurchaseItem", "path": "database/repositories/purchases_repo.py", "summary": "Class PurchaseItem.", "tags": null, "range": {"lines": [26, 34], "bytes": [582, 776]}, "parent": "mod:database/repositories/purchases_repo.py"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo", "kind": "class", "name": "PurchasesRepo", "path": "database/repositories/purchases_repo.py", "summary": "Class PurchasesRepo.", "tags": null, "range": {"lines": [37, 559], "bytes": [778, 22757]}, "parent": "mod:database/repositories/purchases_repo.py"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.__init__", "kind": "function", "name": "PurchasesRepo.__init__", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.__init__.", "tags": null, "range": {"lines": [38, 41], "bytes": [799, 960]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.list_purchases", "kind": "function", "name": "PurchasesRepo.list_purchases", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.list_purchases.", "tags": null, "range": {"lines": [44, 56], "bytes": [995, 1633]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.get_header", "kind": "function", "name": "PurchasesRepo.get_header", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.get_header.", "tags": null, "range": {"lines": [58, 59], "bytes": [1634, 1784]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.list_items", "kind": "function", "name": "PurchasesRepo.list_items", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.list_items.", "tags": null, "range": {"lines": [61, 74], "bytes": [1785, 2462]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.get_returnable_for_items", "kind": "function", "name": "PurchasesRepo.get_returnable_for_items", "path": "database/repositories/purchases_repo.py", "summary": "For each purchase_items row in a purchase, return:   purchased_qty, returned_qty, remaining_returnable", "tags": null, "range": {"lines": [76, 114], "bytes": [2463, 3976]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo._insert_header", "kind": "function", "name": "PurchasesRepo._insert_header", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo._insert_header.", "tags": null, "range": {"lines": [117, 129], "bytes": [4023, 4598]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo._insert_item", "kind": "function", "name": "PurchasesRepo._insert_item", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo._insert_item.", "tags": null, "range": {"lines": [131, 140], "bytes": [4599, 5061]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo._insert_inventory_purchase", "kind": "function", "name": "PurchasesRepo._insert_inventory_purchase", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo._insert_inventory_purchase.", "tags": null, "range": {"lines": [142, 156], "bytes": [5062, 5746]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.create_purchase", "kind": "function", "name": "PurchasesRepo.create_purchase", "path": "database/repositories/purchases_repo.py", "summary": "- Recalculate totals (per-unit discount), minus order_discount. - Insert header with payment_status='unpaid', paid_amount=0, advance_payment_applied=0. - Insert purchase_items. - Insert inventory_transactions rows (transaction_type='purchase') with sequential txn_seq (10, 20, ...). - No commit here; caller controls th…", "tags": null, "range": {"lines": [159, 225], "bytes": [5791, 8737]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.update_purchase", "kind": "function", "name": "PurchasesRepo.update_purchase", "path": "database/repositories/purchases_repo.py", "summary": "Modify behavior:   - Recompute totals from provided items.   - Update header fields (vendor_id, date, order_discount, notes, total_amount).   - Delete ONLY inventory_transactions for this purchase with transaction_type='purchase'.   - Delete and re-insert purchase_items.   - Re-insert corresponding inventory_transacti…", "tags": null, "range": {"lines": [227, 311], "bytes": [8738, 12199]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.record_return", "kind": "function", "name": "PurchasesRepo.record_return", "path": "database/repositories/purchases_repo.py", "summary": "Enhanced returns (no implicit commit):   - Validates qty_return per line: qty_return <= (purchased - returned_so_far).   - Inserts inventory_transactions with transaction_type='purchase_return' using a high txn_seq bucket     (100, 110, ... for that date).   - Computes monetary return value via purchase_return_valuati…", "tags": null, "range": {"lines": [314, 467], "bytes": [12236, 18993]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo._delete_purchase_content", "kind": "function", "name": "PurchasesRepo._delete_purchase_content", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo._delete_purchase_content.", "tags": null, "range": {"lines": [470, 476], "bytes": [19034, 19378]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.delete_purchase", "kind": "function", "name": "PurchasesRepo.delete_purchase", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.delete_purchase.", "tags": null, "range": {"lines": [478, 481], "bytes": [19379, 19600]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.list_purchases_by_vendor", "kind": "function", "name": "PurchasesRepo.list_purchases_by_vendor", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.list_purchases_by_vendor.", "tags": null, "range": {"lines": [484, 512], "bytes": [19664, 20696]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.get_purchase_totals_for_vendor", "kind": "function", "name": "PurchasesRepo.get_purchase_totals_for_vendor", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.get_purchase_totals_for_vendor.", "tags": null, "range": {"lines": [514, 542], "bytes": [20697, 22045]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "sym:database/repositories/purchases_repo.py:PurchasesRepo.list_return_values_by_purchase", "kind": "function", "name": "PurchasesRepo.list_return_values_by_purchase", "path": "database/repositories/purchases_repo.py", "summary": "Method PurchasesRepo.list_return_values_by_purchase.", "tags": null, "range": {"lines": [544, 559], "bytes": [22046, 22757]}, "parent": "sym:database/repositories/purchases_repo.py:PurchasesRepo"}
{"id": "pkg:database", "kind": "pkg", "name": "database", "path": null, "summary": "External package 'database' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:max", "kind": "pkg", "name": "max", "path": null, "summary": "External package 'max' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:list", "kind": "pkg", "name": "list", "path": null, "summary": "External package 'list' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:requested_per_item", "kind": "pkg", "name": "requested_per_item", "path": null, "summary": "External package 'requested_per_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:inserted_txn_ids", "kind": "pkg", "name": "inserted_txn_ids", "path": null, "summary": "External package 'inserted_txn_ids' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lower", "kind": "pkg", "name": "lower", "path": null, "summary": "External package 'lower' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:settlement", "kind": "pkg", "name": "settlement", "path": null, "summary": "External package 'settlement' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchasePaymentsRepo", "kind": "pkg", "name": "PurchasePaymentsRepo", "path": null, "summary": "External package 'PurchasePaymentsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:payments", "kind": "pkg", "name": "payments", "path": null, "summary": "External package 'payments' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorAdvancesRepo", "kind": "pkg", "name": "VendorAdvancesRepo", "path": null, "summary": "External package 'VendorAdvancesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vadv", "kind": "pkg", "name": "vadv", "path": null, "summary": "External package 'vadv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sql", "kind": "pkg", "name": "sql", "path": null, "summary": "External package 'sql' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/reporting_repo.py", "kind": "module", "name": "database.repositories.reporting_repo", "path": "database/repositories/reporting_repo.py", "summary": "Module database.repositories.reporting_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo", "kind": "class", "name": "ReportingRepo", "path": "database/repositories/reporting_repo.py", "summary": "Read-only queries for Reporting tabs, aligned with schema.py.  Uses only objects your schema defines:   - Tables: sales, sale_items, customers, products,             sale_payments, customer_advances,             purchases, purchase_payments, vendor_advances,             expenses, expense_categories,             invent…", "tags": null, "range": {"lines": [8, 1001], "bytes": [154, 36652]}, "parent": "mod:database/repositories/reporting_repo.py"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.__init__", "kind": "function", "name": "ReportingRepo.__init__", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.__init__.", "tags": null, "range": {"lines": [29, 31], "bytes": [1084, 1211]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.vendor_headers_as_of", "kind": "function", "name": "ReportingRepo.vendor_headers_as_of", "path": "database/repositories/reporting_repo.py", "summary": "Purchase headers for remaining due calc as of a cutoff (inclusive). remaining = total_amount - paid_amount - advance_payment_applied", "tags": null, "range": {"lines": [37, 54], "bytes": [1444, 2225]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.vendor_credit_as_of", "kind": "function", "name": "ReportingRepo.vendor_credit_as_of", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.vendor_credit_as_of.", "tags": null, "range": {"lines": [56, 64], "bytes": [2226, 2640]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.customer_headers_as_of", "kind": "function", "name": "ReportingRepo.customer_headers_as_of", "path": "database/repositories/reporting_repo.py", "summary": "Sales headers (doc_type='sale') for remaining due calc as of cutoff.", "tags": null, "range": {"lines": [66, 83], "bytes": [2641, 3384]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.customer_credit_as_of", "kind": "function", "name": "ReportingRepo.customer_credit_as_of", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.customer_credit_as_of.", "tags": null, "range": {"lines": [85, 93], "bytes": [3385, 3809]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.expense_summary_by_category", "kind": "function", "name": "ReportingRepo.expense_summary_by_category", "path": "database/repositories/reporting_repo.py", "summary": "Totals per category in [date_from, date_to]. expense_categories(category_id, name) expenses(expense_id, date, amount, category_id, ...)", "tags": null, "range": {"lines": [99, 127], "bytes": [4042, 5146]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.expense_lines", "kind": "function", "name": "ReportingRepo.expense_lines", "path": "database/repositories/reporting_repo.py", "summary": "Raw expense lines for the period and optional category.", "tags": null, "range": {"lines": [129, 155], "bytes": [5147, 6159]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.stock_on_hand_current", "kind": "function", "name": "ReportingRepo.stock_on_hand_current", "path": "database/repositories/reporting_repo.py", "summary": "Current snapshot from v_stock_on_hand. View columns (per schema): product_id, qty_in_base, unit_value, total_value, valuation_date We also join products to provide product_name and alias qty_in_base -> qty_base to match the UI layer.", "tags": null, "range": {"lines": [161, 180], "bytes": [6392, 7130]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.stock_on_hand_as_of", "kind": "function", "name": "ReportingRepo.stock_on_hand_as_of", "path": "database/repositories/reporting_repo.py", "summary": "Latest valuation row per product where valuation_date <= as_of. stock_valuation_history columns: product_id, valuation_date, quantity, unit_value, total_value", "tags": null, "range": {"lines": [182, 207], "bytes": [7131, 8144]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.inventory_transactions", "kind": "function", "name": "ReportingRepo.inventory_transactions", "path": "database/repositories/reporting_repo.py", "summary": "Return transactions with base-qty conversion. Columns returned (UI expects): date, product_id, type, qty_base, ref_table, ref_id, notes", "tags": null, "range": {"lines": [209, 237], "bytes": [8145, 9339]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.valuation_history", "kind": "function", "name": "ReportingRepo.valuation_history", "path": "database/repositories/reporting_repo.py", "summary": "Latest N valuation rows for a product.", "tags": null, "range": {"lines": [239, 255], "bytes": [9340, 9952]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.revenue_total", "kind": "function", "name": "ReportingRepo.revenue_total", "path": "database/repositories/reporting_repo.py", "summary": "Revenue over period by sales.date; doc_type='sale' only. Prefer header total_amount but fall back to sale_detailed_totals if present.", "tags": null, "range": {"lines": [261, 278], "bytes": [10185, 10941]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.cogs_total", "kind": "function", "name": "ReportingRepo.cogs_total", "path": "database/repositories/reporting_repo.py", "summary": "Use sale_item_cogs view (moving-average at sale date; doc_type='sale' only).", "tags": null, "range": {"lines": [280, 292], "bytes": [10942, 11502]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.expenses_by_category", "kind": "function", "name": "ReportingRepo.expenses_by_category", "path": "database/repositories/reporting_repo.py", "summary": "Detailed expense totals by category for P&L middle block. Returns category_id, category_name, total_amount (names match UI).", "tags": null, "range": {"lines": [294, 311], "bytes": [11503, 12299]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.sale_collections_by_day", "kind": "function", "name": "ReportingRepo.sale_collections_by_day", "path": "database/repositories/reporting_repo.py", "summary": "Cash collections grouped by cleared_date from sale_payments (clearing_state='cleared').", "tags": null, "range": {"lines": [313, 328], "bytes": [12300, 12930]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.purchase_disbursements_by_day", "kind": "function", "name": "ReportingRepo.purchase_disbursements_by_day", "path": "database/repositories/reporting_repo.py", "summary": "Cash disbursements grouped by cleared_date from purchase_payments (clearing_state='cleared').", "tags": null, "range": {"lines": [330, 345], "bytes": [12931, 13577]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo._statuses_where", "kind": "function", "name": "ReportingRepo._statuses_where", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo._statuses_where.", "tags": null, "range": {"lines": [353, 357], "bytes": [13865, 14122]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo._customer_where", "kind": "function", "name": "ReportingRepo._customer_where", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo._customer_where.", "tags": null, "range": {"lines": [360, 363], "bytes": [14141, 14336]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo._product_exists_where", "kind": "function", "name": "ReportingRepo._product_exists_where", "path": "database/repositories/reporting_repo.py", "summary": "Restrict to sales that have at least one line for the given product.", "tags": null, "range": {"lines": [366, 375], "bytes": [14355, 14761]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo._category_exists_where", "kind": "function", "name": "ReportingRepo._category_exists_where", "path": "database/repositories/reporting_repo.py", "summary": "Restrict to sales that have at least one line whose product.category matches exactly.", "tags": null, "range": {"lines": [378, 388], "bytes": [14780, 15283]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.get_product_categories", "kind": "function", "name": "ReportingRepo.get_product_categories", "path": "database/repositories/reporting_repo.py", "summary": "Distinct non-empty categories from products. Returns rows with a single column 'category'.", "tags": null, "range": {"lines": [392, 404], "bytes": [15317, 15769]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.sales_by_period", "kind": "function", "name": "ReportingRepo.sales_by_period", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.sales_by_period.", "tags": null, "range": {"lines": [408, 454], "bytes": [15826, 17189]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.sales_by_customer", "kind": "function", "name": "ReportingRepo.sales_by_customer", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.sales_by_customer.", "tags": null, "range": {"lines": [458, 517], "bytes": [17225, 19393]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.sales_by_product", "kind": "function", "name": "ReportingRepo.sales_by_product", "path": "database/repositories/reporting_repo.py", "summary": "Revenue at product-level from line items:   line_revenue = quantity * (unit_price - item_discount) qty_base via product_uoms.factor_to_base COGS via sale_item_cogs (already at product granularity)", "tags": null, "range": {"lines": [521, 609], "bytes": [19428, 22941]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.sales_by_category", "kind": "function", "name": "ReportingRepo.sales_by_category", "path": "database/repositories/reporting_repo.py", "summary": "Use products.category free-text.", "tags": null, "range": {"lines": [613, 697], "bytes": [22977, 26265]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.margin_by_period", "kind": "function", "name": "ReportingRepo.margin_by_period", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.margin_by_period.", "tags": null, "range": {"lines": [701, 767], "bytes": [26323, 28458]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.margin_by_customer", "kind": "function", "name": "ReportingRepo.margin_by_customer", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.margin_by_customer.", "tags": null, "range": {"lines": [771, 782], "bytes": [28495, 29038]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.margin_by_product", "kind": "function", "name": "ReportingRepo.margin_by_product", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.margin_by_product.", "tags": null, "range": {"lines": [786, 796], "bytes": [29074, 29539]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.margin_by_category", "kind": "function", "name": "ReportingRepo.margin_by_category", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.margin_by_category.", "tags": null, "range": {"lines": [800, 809], "bytes": [29576, 29942]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.top_customers", "kind": "function", "name": "ReportingRepo.top_customers", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.top_customers.", "tags": null, "range": {"lines": [813, 840], "bytes": [29974, 30858]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.top_products", "kind": "function", "name": "ReportingRepo.top_products", "path": "database/repositories/reporting_repo.py", "summary": "Rank by revenue from line items; also return qty_base.", "tags": null, "range": {"lines": [844, 877], "bytes": [30889, 32124]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.returns_summary", "kind": "function", "name": "ReportingRepo.returns_summary", "path": "database/repositories/reporting_repo.py", "summary": "Basic returns indicators using available schema:   - refunds_sum: SUM of negative sale_payments.amount between dates (any clearing_state)   - returns_qty_base: SUM base-qty of inventory_transactions with type='sale_return' between dates", "tags": null, "range": {"lines": [881, 914], "bytes": [32158, 33920]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.status_breakdown", "kind": "function", "name": "ReportingRepo.status_breakdown", "path": "database/repositories/reporting_repo.py", "summary": "Method ReportingRepo.status_breakdown.", "tags": null, "range": {"lines": [918, 951], "bytes": [33955, 34956]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "sym:database/repositories/reporting_repo.py:ReportingRepo.drilldown_sales", "kind": "function", "name": "ReportingRepo.drilldown_sales", "path": "database/repositories/reporting_repo.py", "summary": "Return header-level rows filtered by the same criteria, with customer name and amounts. Remaining = total - paid - advance.", "tags": null, "range": {"lines": [955, 1001], "bytes": [34991, 36652]}, "parent": "sym:database/repositories/reporting_repo.py:ReportingRepo"}
{"id": "pkg:get", "kind": "pkg", "name": "get", "path": null, "summary": "External package 'get' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:replace", "kind": "pkg", "name": "replace", "path": null, "summary": "External package 'replace' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:params_cogs", "kind": "pkg", "name": "params_cogs", "path": null, "summary": "External package 'params_cogs' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/sale_payments_repo.py", "kind": "module", "name": "database.repositories.sale_payments_repo", "path": "database/repositories/sale_payments_repo.py", "summary": "Module database.repositories.sale_payments_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo", "kind": "class", "name": "SalePaymentsRepo", "path": "database/repositories/sale_payments_repo.py", "summary": "Repository for customer receipts/refunds (rows in sale_payments).  Rules enforced here (mirrors DB-side policy):   • No payments against quotations (DB trigger enforces).   • Bank methods (Bank Transfer / Cheque / Cash Deposit) are INCOMING-ONLY (amount > 0),     require a company bank account, and require a specific …", "tags": null, "range": {"lines": [8, 323], "bytes": [106, 13025]}, "parent": "mod:database/repositories/sale_payments_repo.py"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.__init__", "kind": "function", "name": "SalePaymentsRepo.__init__", "path": "database/repositories/sale_payments_repo.py", "summary": "Method SalePaymentsRepo.__init__.", "tags": null, "range": {"lines": [59, 60], "bytes": [2113, 2194]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo._connect", "kind": "function", "name": "SalePaymentsRepo._connect", "path": "database/repositories/sale_payments_repo.py", "summary": "Method SalePaymentsRepo._connect.", "tags": null, "range": {"lines": [64, 68], "bytes": [2274, 2468]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo._normalize_and_validate", "kind": "function", "name": "SalePaymentsRepo._normalize_and_validate", "path": "database/repositories/sale_payments_repo.py", "summary": "Returns normalized (method, amount, bank_account_id, instrument_type, instrument_no) or raises ValueError with a user-facing message.", "tags": null, "range": {"lines": [72, 158], "bytes": [2548, 6365]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.record_payment", "kind": "function", "name": "SalePaymentsRepo.record_payment", "path": "database/repositories/sale_payments_repo.py", "summary": "Inserts a row into sale_payments and returns payment_id.  Notes:   • Negative 'amount' is allowed ONLY for method='Cash' (cash refunds).   • DB triggers roll up paid_amount/payment_status on the sales header.", "tags": null, "range": {"lines": [162, 237], "bytes": [6445, 9828]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.update_clearing_state", "kind": "function", "name": "SalePaymentsRepo.update_clearing_state", "path": "database/repositories/sale_payments_repo.py", "summary": "Update the clearing_state (posted/pending/cleared/bounced) and optional dates. (Sales rollup does not depend on clearing state, but we keep lifecycle semantics.)", "tags": null, "range": {"lines": [239, 278], "bytes": [9829, 11520]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.list_by_sale", "kind": "function", "name": "SalePaymentsRepo.list_by_sale", "path": "database/repositories/sale_payments_repo.py", "summary": "Return all payments for a given sale_id (chronological).", "tags": null, "range": {"lines": [280, 294], "bytes": [11521, 12007]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.list_by_customer", "kind": "function", "name": "SalePaymentsRepo.list_by_customer", "path": "database/repositories/sale_payments_repo.py", "summary": "Return all payments for all SALES belonging to a given customer. (Payments against quotations are disallowed by DB triggers, so this yields sales only.)", "tags": null, "range": {"lines": [296, 312], "bytes": [12008, 12685]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo.get", "kind": "function", "name": "SalePaymentsRepo.get", "path": "database/repositories/sale_payments_repo.py", "summary": "Fetch a single payment by id.", "tags": null, "range": {"lines": [314, 323], "bytes": [12686, 13025]}, "parent": "sym:database/repositories/sale_payments_repo.py:SalePaymentsRepo"}
{"id": "sym:database/repositories/sale_payments_repo.py:get_sale_payments_repo", "kind": "function", "name": "get_sale_payments_repo", "path": "database/repositories/sale_payments_repo.py", "summary": "Function get_sale_payments_repo.", "tags": null, "range": {"lines": [327, 328], "bytes": [13059, 13165]}, "parent": "mod:database/repositories/sale_payments_repo.py"}
{"id": "pkg:sorted", "kind": "pkg", "name": "sorted", "path": null, "summary": "External package 'sorted' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SalePaymentsRepo", "kind": "pkg", "name": "SalePaymentsRepo", "path": null, "summary": "External package 'SalePaymentsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/sales_repo.py", "kind": "module", "name": "database.repositories.sales_repo", "path": "database/repositories/sales_repo.py", "summary": "Module database.repositories.sales_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/sales_repo.py:SaleHeader", "kind": "class", "name": "SaleHeader", "path": "database/repositories/sales_repo.py", "summary": "Class SaleHeader.", "tags": null, "range": {"lines": [8, 20], "bytes": [135, 451]}, "parent": "mod:database/repositories/sales_repo.py"}
{"id": "sym:database/repositories/sales_repo.py:SaleItem", "kind": "class", "name": "SaleItem", "path": "database/repositories/sales_repo.py", "summary": "Class SaleItem.", "tags": null, "range": {"lines": [24, 31], "bytes": [464, 624]}, "parent": "mod:database/repositories/sales_repo.py"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo", "kind": "class", "name": "SalesRepo", "path": "database/repositories/sales_repo.py", "summary": "Sales + Quotations repository.  Key behavior:   - SALES are rows with sales.doc_type='sale' and carry inventory postings.   - QUOTATIONS are rows with sales.doc_type='quotation'; they have items but NO inventory,     and must keep (payment_status='unpaid', paid_amount=0, advance_payment_applied=0).   - Payments roll-u…", "tags": null, "range": {"lines": [34, 619], "bytes": [626, 23208]}, "parent": "mod:database/repositories/sales_repo.py"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.__init__", "kind": "function", "name": "SalesRepo.__init__", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.__init__.", "tags": null, "range": {"lines": [46, 49], "bytes": [1142, 1303]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.list_sales", "kind": "function", "name": "SalesRepo.list_sales", "path": "database/repositories/sales_repo.py", "summary": "List only real SALES (doc_type='sale').", "tags": null, "range": {"lines": [54, 69], "bytes": [1477, 2137]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.search_sales", "kind": "function", "name": "SalesRepo.search_sales", "path": "database/repositories/sales_repo.py", "summary": "Search within SALES by default. Pass doc_type='quotation' to search quotations.", "tags": null, "range": {"lines": [71, 105], "bytes": [2138, 3278]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.get_header", "kind": "function", "name": "SalesRepo.get_header", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.get_header.", "tags": null, "range": {"lines": [107, 108], "bytes": [3279, 3421]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.list_items", "kind": "function", "name": "SalesRepo.list_items", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.list_items.", "tags": null, "range": {"lines": [110, 122], "bytes": [3422, 4028]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.list_quotations", "kind": "function", "name": "SalesRepo.list_quotations", "path": "database/repositories/sales_repo.py", "summary": "List only QUOTATIONS (doc_type='quotation').", "tags": null, "range": {"lines": [127, 142], "bytes": [4207, 4837]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo._insert_header", "kind": "function", "name": "SalesRepo._insert_header", "path": "database/repositories/sales_repo.py", "summary": "Insert a SALE header (doc_type defaults to 'sale' in schema).", "tags": null, "range": {"lines": [147, 175], "bytes": [5012, 5930]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo._insert_item", "kind": "function", "name": "SalesRepo._insert_item", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo._insert_item.", "tags": null, "range": {"lines": [177, 186], "bytes": [5931, 6341]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo._insert_inventory_sale", "kind": "function", "name": "SalesRepo._insert_inventory_sale", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo._insert_inventory_sale.", "tags": null, "range": {"lines": [188, 210], "bytes": [6342, 7032]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo._delete_sale_content", "kind": "function", "name": "SalesRepo._delete_sale_content", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo._delete_sale_content.", "tags": null, "range": {"lines": [212, 217], "bytes": [7033, 7311]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.create_sale", "kind": "function", "name": "SalesRepo.create_sale", "path": "database/repositories/sales_repo.py", "summary": "Create a SALE (doc_type='sale') and post inventory for each item. Payments must be recorded via SalePaymentsRepo (not header math).", "tags": null, "range": {"lines": [222, 241], "bytes": [7504, 8324]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.update_sale", "kind": "function", "name": "SalesRepo.update_sale", "path": "database/repositories/sales_repo.py", "summary": "Update a SALE (doc_type must be 'sale'). Rebuild items & inventory.", "tags": null, "range": {"lines": [243, 298], "bytes": [8325, 10596]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.delete_sale", "kind": "function", "name": "SalesRepo.delete_sale", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.delete_sale.", "tags": null, "range": {"lines": [300, 303], "bytes": [10597, 10776]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.create_quotation", "kind": "function", "name": "SalesRepo.create_quotation", "path": "database/repositories/sales_repo.py", "summary": "Create a QUOTATION: insert sales row with doc_type='quotation', quotation_status, zeroed payment fields, and items — NO inventory postings.", "tags": null, "range": {"lines": [308, 350], "bytes": [10979, 12758]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.update_quotation", "kind": "function", "name": "SalesRepo.update_quotation", "path": "database/repositories/sales_repo.py", "summary": "Update a QUOTATION: rebuild items; keep doc_type='quotation'; enforce payment fields to zero/unpaid.", "tags": null, "range": {"lines": [352, 406], "bytes": [12759, 14967]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.convert_quotation_to_sale", "kind": "function", "name": "SalesRepo.convert_quotation_to_sale", "path": "database/repositories/sales_repo.py", "summary": "Create a SALE from an existing QUOTATION:   - Insert new sales row (doc_type='sale', source_type='quotation', source_id=qo_id)   - Copy items from quotation to new sale   - Post inventory for each new sale item   - Mark quotation as converted (quotation_status='accepted')", "tags": null, "range": {"lines": [411, 521], "bytes": [15160, 19352]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.record_return", "kind": "function", "name": "SalesRepo.record_return", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.record_return.", "tags": null, "range": {"lines": [526, 556], "bytes": [19531, 20589]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.sale_return_totals", "kind": "function", "name": "SalesRepo.sale_return_totals", "path": "database/repositories/sales_repo.py", "summary": "Method SalesRepo.sale_return_totals.", "tags": null, "range": {"lines": [558, 577], "bytes": [20590, 21399]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.apply_payment", "kind": "function", "name": "SalesRepo.apply_payment", "path": "database/repositories/sales_repo.py", "summary": "Deprecated: Do not use. Use SalePaymentsRepo.record_payment(...) to insert receipts. Header roll-up is maintained by DB triggers on sale_payments.", "tags": null, "range": {"lines": [582, 590], "bytes": [21594, 21984]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.apply_refund", "kind": "function", "name": "SalesRepo.apply_refund", "path": "database/repositories/sales_repo.py", "summary": "Deprecated: Do not use. Cash refunds via returns should be represented by the agreed flow (e.g., adjust via business rules + payments model when enabled).", "tags": null, "range": {"lines": [592, 600], "bytes": [21985, 22373]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "sym:database/repositories/sales_repo.py:SalesRepo.get_sale_totals", "kind": "function", "name": "SalesRepo.get_sale_totals", "path": "database/repositories/sales_repo.py", "summary": "Returns subtotal_before_order_discount and calculated_total_amount from the 'sale_detailed_totals' view for correct proration.", "tags": null, "range": {"lines": [605, 619], "bytes": [22579, 23208]}, "parent": "sym:database/repositories/sales_repo.py:SalesRepo"}
{"id": "pkg:NotImplementedError", "kind": "pkg", "name": "NotImplementedError", "path": null, "summary": "External package 'NotImplementedError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/vendor_advances_repo.py", "kind": "module", "name": "database.repositories.vendor_advances_repo", "path": "database/repositories/vendor_advances_repo.py", "summary": "Module database.repositories.vendor_advances_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesError", "kind": "class", "name": "VendorAdvancesError", "path": "database/repositories/vendor_advances_repo.py", "summary": "Base class for vendor advances domain errors.", "tags": null, "range": {"lines": [9, 10], "bytes": [169, 263]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:OverapplyVendorAdvanceError", "kind": "class", "name": "OverapplyVendorAdvanceError", "path": "database/repositories/vendor_advances_repo.py", "summary": "Attempted to apply more credit than a purchase's remaining due.", "tags": null, "range": {"lines": [13, 14], "bytes": [265, 395]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:InsufficientVendorCreditError", "kind": "class", "name": "InsufficientVendorCreditError", "path": "database/repositories/vendor_advances_repo.py", "summary": "Attempted to apply more credit than the vendor has available.", "tags": null, "range": {"lines": [17, 18], "bytes": [397, 527]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:InvalidPurchaseReferenceError", "kind": "class", "name": "InvalidPurchaseReferenceError", "path": "database/repositories/vendor_advances_repo.py", "summary": "Provided purchase_id does not exist (or is not usable).", "tags": null, "range": {"lines": [21, 22], "bytes": [529, 653]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:ConstraintViolationError", "kind": "class", "name": "ConstraintViolationError", "path": "database/repositories/vendor_advances_repo.py", "summary": "Fallback for other constraint violations; wraps the original SQLite error.", "tags": null, "range": {"lines": [25, 29], "bytes": [655, 940]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:ConstraintViolationError.__init__", "kind": "function", "name": "ConstraintViolationError.__init__", "path": "database/repositories/vendor_advances_repo.py", "summary": "Method ConstraintViolationError.__init__.", "tags": null, "range": {"lines": [27, 29], "bytes": [793, 940]}, "parent": "sym:database/repositories/vendor_advances_repo.py:ConstraintViolationError"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo", "kind": "class", "name": "VendorAdvancesRepo", "path": "database/repositories/vendor_advances_repo.py", "summary": "Class VendorAdvancesRepo.", "tags": null, "range": {"lines": [32, 373], "bytes": [942, 13638]}, "parent": "mod:database/repositories/vendor_advances_repo.py"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.__init__", "kind": "function", "name": "VendorAdvancesRepo.__init__", "path": "database/repositories/vendor_advances_repo.py", "summary": "Method VendorAdvancesRepo.__init__.", "tags": null, "range": {"lines": [33, 38], "bytes": [968, 1212]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.apply_credit_to_purchase", "kind": "function", "name": "VendorAdvancesRepo.apply_credit_to_purchase", "path": "database/repositories/vendor_advances_repo.py", "summary": "Apply existing vendor credit to a purchase: stored as NEGATIVE amount with source_type='applied_to_purchase'. Triggers enforce no overdraw and roll up purchases.advance_payment_applied. No commit here.  Raises:     ValueError                        : if amount <= 0     InvalidPurchaseReferenceError     : if purchase_i…", "tags": null, "range": {"lines": [41, 105], "bytes": [1289, 4030]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.grant_credit", "kind": "function", "name": "VendorAdvancesRepo.grant_credit", "path": "database/repositories/vendor_advances_repo.py", "summary": "Grant vendor credit (+amount).  Default behavior (no source_type passed) records a manual credit/deposit:     source_type = 'deposit' This represents a credit not tied to a stock return.  For credits created by a purchase return flow, pass:     source_type = 'return_credit' (Those are typically invoked by the returns …", "tags": null, "range": {"lines": [108, 161], "bytes": [4086, 6085]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.grant_deposit", "kind": "function", "name": "VendorAdvancesRepo.grant_deposit", "path": "database/repositories/vendor_advances_repo.py", "summary": "Shorthand for a manual credit/deposit (source_type='deposit').", "tags": null, "range": {"lines": [164, 183], "bytes": [6138, 6687]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.get_balance", "kind": "function", "name": "VendorAdvancesRepo.get_balance", "path": "database/repositories/vendor_advances_repo.py", "summary": "Current credit balance from view v_vendor_advance_balance. +ve = you hold credit from the vendor; 0 = none. (Negative shouldn't occur under triggers.)", "tags": null, "range": {"lines": [186, 198], "bytes": [6725, 7260]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.balance", "kind": "function", "name": "VendorAdvancesRepo.balance", "path": "database/repositories/vendor_advances_repo.py", "summary": "Method VendorAdvancesRepo.balance.", "tags": null, "range": {"lines": [201, 202], "bytes": [7282, 7373]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.get_opening_balance", "kind": "function", "name": "VendorAdvancesRepo.get_opening_balance", "path": "database/repositories/vendor_advances_repo.py", "summary": "Opening balance BEFORE a given date: SUM(amount) WHERE tx_date < DATE(as_of). Useful for statements with a date range.", "tags": null, "range": {"lines": [204, 217], "bytes": [7374, 7922]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.list_ledger", "kind": "function", "name": "VendorAdvancesRepo.list_ledger", "path": "database/repositories/vendor_advances_repo.py", "summary": "Full ledger for a vendor, filtered by date range if provided. Ordered ASC by (tx_date, tx_id).  Also accepts a tuple/list for date_from as (from, to) when date_to is None, for backward compatibility with callers that pass a single tuple. Return fields: tx_id, tx_date, amount, source_type, source_id, notes, created_by.…", "tags": null, "range": {"lines": [220, 267], "bytes": [7971, 9841]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.list_credit_applications_for_purchase", "kind": "function", "name": "VendorAdvancesRepo.list_credit_applications_for_purchase", "path": "database/repositories/vendor_advances_repo.py", "summary": "All applications of vendor credit against a particular purchase. Rows from vendor_advances where source_type='applied_to_purchase' AND source_id=purchase_id.", "tags": null, "range": {"lines": [269, 291], "bytes": [9842, 10681]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo.list_credit_notes", "kind": "function", "name": "VendorAdvancesRepo.list_credit_notes", "path": "database/repositories/vendor_advances_repo.py", "summary": "All credit-note entries (source_type='return_credit') for a vendor, optional date range. (Manual deposits are not included here.)", "tags": null, "range": {"lines": [293, 328], "bytes": [10682, 11835]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo._get_purchase_remaining_due", "kind": "function", "name": "VendorAdvancesRepo._get_purchase_remaining_due", "path": "database/repositories/vendor_advances_repo.py", "summary": "Returns remaining due for the purchase as:     total_amount - paid_amount - advance_payment_applied or None if the purchase is missing.", "tags": null, "range": {"lines": [333, 354], "bytes": [11929, 12791]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo._raise_mapped_error", "kind": "function", "name": "VendorAdvancesRepo._raise_mapped_error", "path": "database/repositories/vendor_advances_repo.py", "summary": "Translate known SQLite trigger messages to domain errors. Always raises; never returns.", "tags": null, "range": {"lines": [356, 373], "bytes": [12792, 13638]}, "parent": "sym:database/repositories/vendor_advances_repo.py:VendorAdvancesRepo"}
{"id": "pkg:super", "kind": "pkg", "name": "super", "path": null, "summary": "External package 'super' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InvalidPurchaseReferenceError", "kind": "pkg", "name": "InvalidPurchaseReferenceError", "path": null, "summary": "External package 'InvalidPurchaseReferenceError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InsufficientVendorCreditError", "kind": "pkg", "name": "InsufficientVendorCreditError", "path": null, "summary": "External package 'InsufficientVendorCreditError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:OverapplyVendorAdvanceError", "kind": "pkg", "name": "OverapplyVendorAdvanceError", "path": null, "summary": "External package 'OverapplyVendorAdvanceError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:AssertionError", "kind": "pkg", "name": "AssertionError", "path": null, "summary": "External package 'AssertionError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:msg", "kind": "pkg", "name": "msg", "path": null, "summary": "External package 'msg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ConstraintViolationError", "kind": "pkg", "name": "ConstraintViolationError", "path": null, "summary": "External package 'ConstraintViolationError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/vendor_bank_accounts_repo.py", "kind": "module", "name": "database.repositories.vendor_bank_accounts_repo", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Module database.repositories.vendor_bank_accounts_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo", "kind": "class", "name": "VendorBankAccountsRepo", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Repository for vendor_bank_accounts.  Table (per schema):     vendor_bank_account_id INTEGER PRIMARY KEY AUTOINCREMENT,     vendor_id              INTEGER NOT NULL,     label                  TEXT NOT NULL,     bank_name              TEXT,     account_no             TEXT,     iban                   TEXT,     routing_n…", "tags": null, "range": {"lines": [6, 196], "bytes": [101, 7608]}, "parent": "mod:database/repositories/vendor_bank_accounts_repo.py"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.__init__", "kind": "function", "name": "VendorBankAccountsRepo.__init__", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Method VendorBankAccountsRepo.__init__.", "tags": null, "range": {"lines": [26, 29], "bytes": [825, 986]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.list", "kind": "function", "name": "VendorBankAccountsRepo.list", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "List bank accounts for a vendor. By default, only active accounts. Ordered with primaries first, then by creation/id for stable results.", "tags": null, "range": {"lines": [34, 72], "bytes": [1063, 2544]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.list_accounts", "kind": "function", "name": "VendorBankAccountsRepo.list_accounts", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Method VendorBankAccountsRepo.list_accounts.", "tags": null, "range": {"lines": [75, 76], "bytes": [2619, 2753]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.create", "kind": "function", "name": "VendorBankAccountsRepo.create", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Create a bank account for the vendor.  Expected keys in `data`:     label (required), bank_name, account_no, iban, routing_no,     is_primary (optional bool/int), is_active (optional bool/int; defaults 1)  NOTE: This method performs a direct insert and does NOT normalize primaries.       Use set_primary(...) or force_…", "tags": null, "range": {"lines": [81, 113], "bytes": [2840, 4332]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.update", "kind": "function", "name": "VendorBankAccountsRepo.update", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Update fields for an existing vendor bank account.  Updatable keys:     label, bank_name, account_no, iban, routing_no, is_primary, is_active  RAW update: this method does NOT normalize primaries or unset others. If you set is_primary=1 while another account for the same vendor is already primary, the partial UNIQUE i…", "tags": null, "range": {"lines": [115, 149], "bytes": [4333, 5893]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.deactivate", "kind": "function", "name": "VendorBankAccountsRepo.deactivate", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Mark an account inactive (is_active = 0). No deletion here. Returns number of affected rows.", "tags": null, "range": {"lines": [154, 163], "bytes": [5985, 6365]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.set_primary", "kind": "function", "name": "VendorBankAccountsRepo.set_primary", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Strict/naive setter: attempts to set this account as primary. If another account is already primary, the DB's partial unique index will raise sqlite3.IntegrityError. Callers who want to flip should use force_set_primary(...).", "tags": null, "range": {"lines": [165, 180], "bytes": [6366, 6991]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo.force_set_primary", "kind": "function", "name": "VendorBankAccountsRepo.force_set_primary", "path": "database/repositories/vendor_bank_accounts_repo.py", "summary": "Flip helper for UI: unset all, then set one. This will never raise due to the unique index.", "tags": null, "range": {"lines": [182, 196], "bytes": [6992, 7608]}, "parent": "sym:database/repositories/vendor_bank_accounts_repo.py:VendorBankAccountsRepo"}
{"id": "pkg:data", "kind": "pkg", "name": "data", "path": null, "summary": "External package 'data' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:update_data", "kind": "pkg", "name": "update_data", "path": null, "summary": "External package 'update_data' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/repositories/vendors_repo.py", "kind": "module", "name": "database.repositories.vendors_repo", "path": "database/repositories/vendors_repo.py", "summary": "Module database.repositories.vendors_repo.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/repositories/vendors_repo.py:Vendor", "kind": "class", "name": "Vendor", "path": "database/repositories/vendors_repo.py", "summary": "Class Vendor.", "tags": null, "range": {"lines": [5, 9], "bytes": [61, 161]}, "parent": "mod:database/repositories/vendors_repo.py"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo", "kind": "class", "name": "VendorsRepo", "path": "database/repositories/vendors_repo.py", "summary": "Class VendorsRepo.", "tags": null, "range": {"lines": [11, 47], "bytes": [162, 1606]}, "parent": "mod:database/repositories/vendors_repo.py"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.__init__", "kind": "function", "name": "VendorsRepo.__init__", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.__init__.", "tags": null, "range": {"lines": [12, 15], "bytes": [181, 342]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.list_vendors", "kind": "function", "name": "VendorsRepo.list_vendors", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.list_vendors.", "tags": null, "range": {"lines": [17, 21], "bytes": [343, 588]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.get", "kind": "function", "name": "VendorsRepo.get", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.get.", "tags": null, "range": {"lines": [23, 28], "bytes": [589, 858]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.create", "kind": "function", "name": "VendorsRepo.create", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.create.", "tags": null, "range": {"lines": [30, 36], "bytes": [859, 1166]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.update", "kind": "function", "name": "VendorsRepo.update", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.update.", "tags": null, "range": {"lines": [38, 43], "bytes": [1167, 1459]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "sym:database/repositories/vendors_repo.py:VendorsRepo.delete", "kind": "function", "name": "VendorsRepo.delete", "path": "database/repositories/vendors_repo.py", "summary": "Method VendorsRepo.delete.", "tags": null, "range": {"lines": [45, 47], "bytes": [1460, 1606]}, "parent": "sym:database/repositories/vendors_repo.py:VendorsRepo"}
{"id": "pkg:Vendor", "kind": "pkg", "name": "Vendor", "path": null, "summary": "External package 'Vendor' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/schema.py", "kind": "module", "name": "database.schema", "path": "database/schema.py", "summary": "Module database.schema.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/schema.py:_ensure_customer_is_active", "kind": "function", "name": "_ensure_customer_is_active", "path": "database/schema.py", "summary": "Safe migration for older DBs that created `customers` before `is_active` existed. Adds the column if missing. No-op if already present.", "tags": null, "range": {"lines": [1978, 1989], "bytes": [77060, 77596]}, "parent": "mod:database/schema.py"}
{"id": "sym:database/schema.py:init_schema", "kind": "function", "name": "init_schema", "path": "database/schema.py", "summary": "Function init_schema.", "tags": null, "range": {"lines": [1991, 2002], "bytes": [77597, 78117]}, "parent": "mod:database/schema.py"}
{"id": "pkg:sys", "kind": "pkg", "name": "sys", "path": null, "summary": "External package 'sys' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:db_path", "kind": "pkg", "name": "db_path", "path": null, "summary": "External package 'db_path' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:print", "kind": "pkg", "name": "print", "path": null, "summary": "External package 'print' (stub).", "tags": null, "range": null, "parent": null}
{"id": "feat:MAIN:database/schema.py", "kind": "feature", "name": "MAIN:database/schema.py", "path": null, "summary": "Script entrypoint for database/schema.py.", "tags": ["script"], "range": null, "parent": null}
{"id": "mod:database/seeders/__init__.py", "kind": "module", "name": "database.seeders", "path": "database/seeders/__init__.py", "summary": "Module database.seeders.", "tags": null, "range": null, "parent": null}
{"id": "mod:database/seeders/bulk_seed.py", "kind": "module", "name": "database.seeders.bulk_seed", "path": "database/seeders/bulk_seed.py", "summary": "Bulk seeding script for the provided schema.py (PySide6 + SQLite).  This matches column names and constraints EXACTLY as defined in your schema: - TEXT PKs for purchases.purchase_id / sales.sale_id - Header totals: total_amount, order_discount (numeric), payment_status, paid_amount, advance_payment_applied - Line disc…", "tags": null, "range": null, "parent": null}
{"id": "sym:database/seeders/bulk_seed.py:set_pragmas", "kind": "function", "name": "set_pragmas", "path": "database/seeders/bulk_seed.py", "summary": "Function set_pragmas.", "tags": null, "range": {"lines": [127, 131], "bytes": [4328, 4494]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:random_date_within", "kind": "function", "name": "random_date_within", "path": "database/seeders/bulk_seed.py", "summary": "Function random_date_within.", "tags": null, "range": {"lines": [133, 136], "bytes": [4495, 4757]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:money", "kind": "function", "name": "money", "path": "database/seeders/bulk_seed.py", "summary": "Function money.", "tags": null, "range": {"lines": [138, 139], "bytes": [4758, 4822]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:sha256_text", "kind": "function", "name": "sha256_text", "path": "database/seeders/bulk_seed.py", "summary": "Function sha256_text.", "tags": null, "range": {"lines": [141, 143], "bytes": [4823, 4931]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:ensure_tables", "kind": "function", "name": "ensure_tables", "path": "database/seeders/bulk_seed.py", "summary": "Function ensure_tables.", "tags": null, "range": {"lines": [145, 163], "bytes": [4932, 5670]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_company", "kind": "function", "name": "seed_company", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_company.", "tags": null, "range": {"lines": [169, 185], "bytes": [5763, 6436]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_users", "kind": "function", "name": "seed_users", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_users.", "tags": null, "range": {"lines": [187, 198], "bytes": [6437, 6951]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_uoms", "kind": "function", "name": "seed_uoms", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_uoms.", "tags": null, "range": {"lines": [200, 205], "bytes": [6952, 7268]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_products", "kind": "function", "name": "seed_products", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_products.", "tags": null, "range": {"lines": [207, 221], "bytes": [7269, 7978]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_product_uoms", "kind": "function", "name": "seed_product_uoms", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_product_uoms.", "tags": null, "range": {"lines": [223, 250], "bytes": [7979, 9163]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:fetch_ids", "kind": "function", "name": "fetch_ids", "path": "database/seeders/bulk_seed.py", "summary": "Function fetch_ids.", "tags": null, "range": {"lines": [252, 254], "bytes": [9164, 9329]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_parties_and_banks", "kind": "function", "name": "seed_parties_and_banks", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_parties_and_banks.", "tags": null, "range": {"lines": [256, 302], "bytes": [9330, 11596]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:build_uom_maps", "kind": "function", "name": "build_uom_maps", "path": "database/seeders/bulk_seed.py", "summary": "Function build_uom_maps.", "tags": null, "range": {"lines": [304, 314], "bytes": [11597, 11942]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:price_qty_for_purchase", "kind": "function", "name": "price_qty_for_purchase", "path": "database/seeders/bulk_seed.py", "summary": "Function price_qty_for_purchase.", "tags": null, "range": {"lines": [316, 324], "bytes": [11943, 12407]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:price_qty_for_sale", "kind": "function", "name": "price_qty_for_sale", "path": "database/seeders/bulk_seed.py", "summary": "Function price_qty_for_sale.", "tags": null, "range": {"lines": [326, 331], "bytes": [12408, 12686]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:allocate_order_header_discounts", "kind": "function", "name": "allocate_order_header_discounts", "path": "database/seeders/bulk_seed.py", "summary": "Function allocate_order_header_discounts.", "tags": null, "range": {"lines": [333, 368], "bytes": [12687, 14012]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:spread", "kind": "function", "name": "spread", "path": "database/seeders/bulk_seed.py", "summary": "Function spread.", "tags": null, "range": {"lines": [373, 378], "bytes": [14214, 14450]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:allocate_line_discount_pool", "kind": "function", "name": "allocate_line_discount_pool", "path": "database/seeders/bulk_seed.py", "summary": "Function allocate_line_discount_pool.", "tags": null, "range": {"lines": [370, 382], "bytes": [14013, 14621]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_purchases", "kind": "function", "name": "seed_purchases", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_purchases.", "tags": null, "range": {"lines": [384, 464], "bytes": [14622, 17901]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_sales", "kind": "function", "name": "seed_sales", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_sales.", "tags": null, "range": {"lines": [466, 565], "bytes": [17902, 21922]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:method_compatible_instrument", "kind": "function", "name": "method_compatible_instrument", "path": "database/seeders/bulk_seed.py", "summary": "Function method_compatible_instrument.", "tags": null, "range": {"lines": [569, 580], "bytes": [21980, 22388]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_purchase_payments", "kind": "function", "name": "seed_purchase_payments", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_purchase_payments.", "tags": null, "range": {"lines": [582, 646], "bytes": [22389, 26119]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:pick_vendor_for_purchase", "kind": "function", "name": "pick_vendor_for_purchase", "path": "database/seeders/bulk_seed.py", "summary": "Function pick_vendor_for_purchase.", "tags": null, "range": {"lines": [596, 598], "bytes": [22892, 23066]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:remaining_due", "kind": "function", "name": "remaining_due", "path": "database/seeders/bulk_seed.py", "summary": "Function remaining_due.", "tags": null, "range": {"lines": [600, 607], "bytes": [23067, 23534]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_sale_payments", "kind": "function", "name": "seed_sale_payments", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_sale_payments.", "tags": null, "range": {"lines": [648, 671], "bytes": [26120, 27596]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_advances", "kind": "function", "name": "seed_advances", "path": "database/seeders/bulk_seed.py", "summary": "Insert vendor/customer advances in a trigger-safe way: - For applied rows, pick documents that belong to the same party. - Read remaining due LIVE just before the insert. - Clamp negative amounts to min(available_balance, remaining_due - 0.01). - Insert rows one-by-one (stream), committing periodically.", "tags": null, "range": {"lines": [675, 825], "bytes": [27669, 34180]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:sale_remaining_due", "kind": "function", "name": "sale_remaining_due", "path": "database/seeders/bulk_seed.py", "summary": "Function sale_remaining_due.", "tags": null, "range": {"lines": [697, 702], "bytes": [28680, 28997]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:purchase_remaining_due", "kind": "function", "name": "purchase_remaining_due", "path": "database/seeders/bulk_seed.py", "summary": "Function purchase_remaining_due.", "tags": null, "range": {"lines": [704, 709], "bytes": [28998, 29327]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_expenses", "kind": "function", "name": "seed_expenses", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_expenses.", "tags": null, "range": {"lines": [827, 842], "bytes": [34181, 34980]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:seed_logs", "kind": "function", "name": "seed_logs", "path": "database/seeders/bulk_seed.py", "summary": "Function seed_logs.", "tags": null, "range": {"lines": [844, 879], "bytes": [34981, 36758]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "sym:database/seeders/bulk_seed.py:main", "kind": "function", "name": "main", "path": "database/seeders/bulk_seed.py", "summary": "Function main.", "tags": null, "range": {"lines": [885, 941], "bytes": [36841, 39288]}, "parent": "mod:database/seeders/bulk_seed.py"}
{"id": "pkg:argparse", "kind": "pkg", "name": "argparse", "path": null, "summary": "External package 'argparse' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:random", "kind": "pkg", "name": "random", "path": null, "summary": "External package 'random' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:math", "kind": "pkg", "name": "math", "path": null, "summary": "External package 'math' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:itertools", "kind": "pkg", "name": "itertools", "path": null, "summary": "External package 'itertools' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hashlib", "kind": "pkg", "name": "hashlib", "path": null, "summary": "External package 'hashlib' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:datetime", "kind": "pkg", "name": "datetime", "path": null, "summary": "External package 'datetime' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:collections", "kind": "pkg", "name": "collections", "path": null, "summary": "External package 'collections' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:items", "kind": "pkg", "name": "items", "path": null, "summary": "External package 'items' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:timedelta", "kind": "pkg", "name": "timedelta", "path": null, "summary": "External package 'timedelta' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rng", "kind": "pkg", "name": "rng", "path": null, "summary": "External package 'rng' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dt", "kind": "pkg", "name": "dt", "path": null, "summary": "External package 'dt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:round", "kind": "pkg", "name": "round", "path": null, "summary": "External package 'round' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hexdigest", "kind": "pkg", "name": "hexdigest", "path": null, "summary": "External package 'hexdigest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SystemExit", "kind": "pkg", "name": "SystemExit", "path": null, "summary": "External package 'SystemExit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:range", "kind": "pkg", "name": "range", "path": null, "summary": "External package 'range' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rows", "kind": "pkg", "name": "rows", "path": null, "summary": "External package 'rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:uom_ids", "kind": "pkg", "name": "uom_ids", "path": null, "summary": "External package 'uom_ids' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:enumerate", "kind": "pkg", "name": "enumerate", "path": null, "summary": "External package 'enumerate' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:products", "kind": "pkg", "name": "products", "path": null, "summary": "External package 'products' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:base_rows", "kind": "pkg", "name": "base_rows", "path": null, "summary": "External package 'base_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:alt_rows", "kind": "pkg", "name": "alt_rows", "path": null, "summary": "External package 'alt_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vrows", "kind": "pkg", "name": "vrows", "path": null, "summary": "External package 'vrows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:crows", "kind": "pkg", "name": "crows", "path": null, "summary": "External package 'crows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:brows", "kind": "pkg", "name": "brows", "path": null, "summary": "External package 'brows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vb_rows", "kind": "pkg", "name": "vb_rows", "path": null, "summary": "External package 'vb_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sample", "kind": "pkg", "name": "sample", "path": null, "summary": "External package 'sample' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:defaultdict", "kind": "pkg", "name": "defaultdict", "path": null, "summary": "External package 'defaultdict' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:append", "kind": "pkg", "name": "append", "path": null, "summary": "External package 'append' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sum", "kind": "pkg", "name": "sum", "path": null, "summary": "External package 'sum' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:level_mix", "kind": "pkg", "name": "level_mix", "path": null, "summary": "External package 'level_mix' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:assigns", "kind": "pkg", "name": "assigns", "path": null, "summary": "External package 'assigns' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:item_rows", "kind": "pkg", "name": "item_rows", "path": null, "summary": "External package 'item_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:min", "kind": "pkg", "name": "min", "path": null, "summary": "External package 'min' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:purchase_ids", "kind": "pkg", "name": "purchase_ids", "path": null, "summary": "External package 'purchase_ids' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:set", "kind": "pkg", "name": "set", "path": null, "summary": "External package 'set' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sale_ids", "kind": "pkg", "name": "sale_ids", "path": null, "summary": "External package 'sale_ids' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vendor_bank_by_vendor", "kind": "pkg", "name": "vendor_bank_by_vendor", "path": null, "summary": "External package 'vendor_bank_by_vendor' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v_to_pos", "kind": "pkg", "name": "v_to_pos", "path": null, "summary": "External package 'v_to_pos' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:c_to_sos", "kind": "pkg", "name": "c_to_sos", "path": null, "summary": "External package 'c_to_sos' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ts", "kind": "pkg", "name": "ts", "path": null, "summary": "External package 'ts' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sev", "kind": "pkg", "name": "sev", "path": null, "summary": "External package 'sev' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:erows", "kind": "pkg", "name": "erows", "path": null, "summary": "External package 'erows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:parser", "kind": "pkg", "name": "parser", "path": null, "summary": "External package 'parser' (stub).", "tags": null, "range": null, "parent": null}
{"id": "feat:MAIN:database/seeders/bulk_seed.py", "kind": "feature", "name": "MAIN:database/seeders/bulk_seed.py", "path": null, "summary": "Script entrypoint for database/seeders/bulk_seed.py.", "tags": ["script"], "range": null, "parent": null}
{"id": "mod:database/seeders/default_data.py", "kind": "module", "name": "database.seeders.default_data", "path": "database/seeders/default_data.py", "summary": "Module database.seeders.default_data.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/seeders/default_data.py:seed", "kind": "function", "name": "seed", "path": "database/seeders/default_data.py", "summary": "Function seed.", "tags": null, "range": {"lines": [3, 15], "bytes": [41, 741]}, "parent": "mod:database/seeders/default_data.py"}
{"id": "pkg:utils", "kind": "pkg", "name": "utils", "path": null, "summary": "External package 'utils' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hash_password", "kind": "pkg", "name": "hash_password", "path": null, "summary": "External package 'hash_password' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:database/versioning.py", "kind": "module", "name": "database.versioning", "path": "database/versioning.py", "summary": "Module database.versioning.", "tags": null, "range": null, "parent": null}
{"id": "sym:database/versioning.py:_ensure_table", "kind": "function", "name": "_ensure_table", "path": "database/versioning.py", "summary": "Function _ensure_table.", "tags": null, "range": {"lines": [4, 10], "bytes": [61, 290]}, "parent": "mod:database/versioning.py"}
{"id": "sym:database/versioning.py:get_current_version", "kind": "function", "name": "get_current_version", "path": "database/versioning.py", "summary": "Function get_current_version.", "tags": null, "range": {"lines": [12, 15], "bytes": [291, 516]}, "parent": "mod:database/versioning.py"}
{"id": "sym:database/versioning.py:set_current_version", "kind": "function", "name": "set_current_version", "path": "database/versioning.py", "summary": "Function set_current_version.", "tags": null, "range": {"lines": [17, 24], "bytes": [517, 926]}, "parent": "mod:database/versioning.py"}
{"id": "mod:getfilescode.py", "kind": "module", "name": "getfilescode", "path": "getfilescode.py", "summary": "Module getfilescode.", "tags": null, "range": null, "parent": null}
{"id": "sym:getfilescode.py:process_directory", "kind": "function", "name": "process_directory", "path": "getfilescode.py", "summary": "Process all Python files in a directory and its subdirectories", "tags": null, "range": {"lines": [15, 32], "bytes": [438, 1266]}, "parent": "mod:getfilescode.py"}
{"id": "sym:getfilescode.py:main", "kind": "function", "name": "main", "path": "getfilescode.py", "summary": "Function main.", "tags": null, "range": {"lines": [34, 42], "bytes": [1267, 1634]}, "parent": "mod:getfilescode.py"}
{"id": "pkg:os", "kind": "pkg", "name": "os", "path": null, "summary": "External package 'os' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:file", "kind": "pkg", "name": "file", "path": null, "summary": "External package 'file' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:open", "kind": "pkg", "name": "open", "path": null, "summary": "External package 'open' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:f", "kind": "pkg", "name": "f", "path": null, "summary": "External package 'f' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:output_file", "kind": "pkg", "name": "output_file", "path": null, "summary": "External package 'output_file' (stub).", "tags": null, "range": null, "parent": null}
{"id": "feat:MAIN:getfilescode.py", "kind": "feature", "name": "MAIN:getfilescode.py", "path": null, "summary": "Script entrypoint for getfilescode.py.", "tags": ["script"], "range": null, "parent": null}
{"id": "mod:main.py", "kind": "module", "name": "main", "path": "main.py", "summary": "Module main.", "tags": null, "range": null, "parent": null}
{"id": "sym:main.py:MainWindow", "kind": "class", "name": "MainWindow", "path": "main.py", "summary": "Class MainWindow.", "tags": null, "range": {"lines": [39, 369], "bytes": [1078, 12919]}, "parent": "mod:main.py"}
{"id": "sym:main.py:MainWindow.__init__", "kind": "function", "name": "MainWindow.__init__", "path": "main.py", "summary": "Method MainWindow.__init__.", "tags": null, "range": {"lines": [81, 259], "bytes": [2575, 8740]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow.open_inventory_sub", "kind": "function", "name": "MainWindow.open_inventory_sub", "path": "main.py", "summary": "Ensure the Inventory module is visible and switch its internal tab. sub: 'adjustments' | 'transactions' | 'valuation'", "tags": null, "range": {"lines": [262, 294], "bytes": [8801, 9974]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow._add_module_safe", "kind": "function", "name": "MainWindow._add_module_safe", "path": "main.py", "summary": "Import and instantiate a controller safely. On any error, add a placeholder silently.", "tags": null, "range": {"lines": [297, 319], "bytes": [10020, 10880]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow._add_backup_restore_module", "kind": "function", "name": "MainWindow._add_backup_restore_module", "path": "main.py", "summary": "Create the Backup & Restore module using its factory and register File → Backup/Restore menu actions.", "tags": null, "range": {"lines": [321, 348], "bytes": [10881, 12170]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow.add_module", "kind": "function", "name": "MainWindow.add_module", "path": "main.py", "summary": "Method MainWindow.add_module.", "tags": null, "range": {"lines": [350, 355], "bytes": [12171, 12413]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow.add_placeholder", "kind": "function", "name": "MainWindow.add_placeholder", "path": "main.py", "summary": "Method MainWindow.add_placeholder.", "tags": null, "range": {"lines": [357, 363], "bytes": [12414, 12735]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:MainWindow._find_module_index", "kind": "function", "name": "MainWindow._find_module_index", "path": "main.py", "summary": "Method MainWindow._find_module_index.", "tags": null, "range": {"lines": [365, 369], "bytes": [12736, 12919]}, "parent": "sym:main.py:MainWindow"}
{"id": "sym:main.py:_AppDbManager", "kind": "class", "name": "_AppDbManager", "path": "main.py", "summary": "Class _AppDbManager.", "tags": null, "range": {"lines": [43, 79], "bytes": [1215, 2574]}, "parent": "mod:main.py"}
{"id": "sym:main.py:_AppDbManager.__init__", "kind": "function", "name": "_AppDbManager.__init__", "path": "main.py", "summary": "Method _AppDbManager.__init__.", "tags": null, "range": {"lines": [44, 45], "bytes": [1240, 1330]}, "parent": "sym:main.py:_AppDbManager"}
{"id": "sym:main.py:_AppDbManager.close_all", "kind": "function", "name": "_AppDbManager.close_all", "path": "main.py", "summary": "Method _AppDbManager.close_all.", "tags": null, "range": {"lines": [47, 66], "bytes": [1331, 2043]}, "parent": "sym:main.py:_AppDbManager"}
{"id": "sym:main.py:_AppDbManager.open", "kind": "function", "name": "_AppDbManager.open", "path": "main.py", "summary": "Method _AppDbManager.open.", "tags": null, "range": {"lines": [68, 79], "bytes": [2044, 2574]}, "parent": "sym:main.py:_AppDbManager"}
{"id": "sym:main.py:load_qss", "kind": "function", "name": "load_qss", "path": "main.py", "summary": "Function load_qss.", "tags": null, "range": {"lines": [19, 24], "bytes": [477, 644]}, "parent": "mod:main.py"}
{"id": "sym:main.py:_lazy_get", "kind": "function", "name": "_lazy_get", "path": "main.py", "summary": "Import a module by name and fetch an attribute from it, with a clear error if missing.", "tags": null, "range": {"lines": [27, 36], "bytes": [646, 1076]}, "parent": "mod:main.py"}
{"id": "sym:main.py:_show_inventory_menu_at_row", "kind": "function", "name": "_show_inventory_menu_at_row", "path": "main.py", "summary": "Function _show_inventory_menu_at_row.", "tags": null, "range": {"lines": [235, 245], "bytes": [7664, 8148]}, "parent": "mod:main.py"}
{"id": "sym:main.py:_nav_mouse_press", "kind": "function", "name": "_nav_mouse_press", "path": "main.py", "summary": "Function _nav_mouse_press.", "tags": null, "range": {"lines": [247, 256], "bytes": [8149, 8640]}, "parent": "mod:main.py"}
{"id": "sym:main.py:main", "kind": "function", "name": "main", "path": "main.py", "summary": "Function main.", "tags": null, "range": {"lines": [372, 441], "bytes": [12921, 15553]}, "parent": "mod:main.py"}
{"id": "pkg:traceback", "kind": "pkg", "name": "traceback", "path": null, "summary": "External package 'traceback' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PySide6", "kind": "pkg", "name": "PySide6", "path": null, "summary": "External package 'PySide6' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:importlib", "kind": "pkg", "name": "importlib", "path": null, "summary": "External package 'importlib' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:modules", "kind": "pkg", "name": "modules", "path": null, "summary": "External package 'modules' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:import_module", "kind": "pkg", "name": "import_module", "path": null, "summary": "External package 'import_module' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ImportError", "kind": "pkg", "name": "ImportError", "path": null, "summary": "External package 'ImportError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:getattr", "kind": "pkg", "name": "getattr", "path": null, "summary": "External package 'getattr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hasattr", "kind": "pkg", "name": "hasattr", "path": null, "summary": "External package 'hasattr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:mod", "kind": "pkg", "name": "mod", "path": null, "summary": "External package 'mod' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_gc", "kind": "pkg", "name": "_gc", "path": null, "summary": "External package '_gc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QWidget", "kind": "pkg", "name": "QWidget", "path": null, "summary": "External package 'QWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QVBoxLayout", "kind": "pkg", "name": "QVBoxLayout", "path": null, "summary": "External package 'QVBoxLayout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QListWidget", "kind": "pkg", "name": "QListWidget", "path": null, "summary": "External package 'QListWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QStackedWidget", "kind": "pkg", "name": "QStackedWidget", "path": null, "summary": "External package 'QStackedWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QHBoxLayout", "kind": "pkg", "name": "QHBoxLayout", "path": null, "summary": "External package 'QHBoxLayout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:row_lay", "kind": "pkg", "name": "row_lay", "path": null, "summary": "External package 'row_lay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:layout", "kind": "pkg", "name": "layout", "path": null, "summary": "External package 'layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QMenu", "kind": "pkg", "name": "QMenu", "path": null, "summary": "External package 'QMenu' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QAction", "kind": "pkg", "name": "QAction", "path": null, "summary": "External package 'QAction' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:act_adj", "kind": "pkg", "name": "act_adj", "path": null, "summary": "External package 'act_adj' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:act_txn", "kind": "pkg", "name": "act_txn", "path": null, "summary": "External package 'act_txn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:act_val", "kind": "pkg", "name": "act_val", "path": null, "summary": "External package 'act_val' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:mapToGlobal", "kind": "pkg", "name": "mapToGlobal", "path": null, "summary": "External package 'mapToGlobal' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rect", "kind": "pkg", "name": "rect", "path": null, "summary": "External package 'rect' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:global_pt", "kind": "pkg", "name": "global_pt", "path": null, "summary": "External package 'global_pt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:toPoint", "kind": "pkg", "name": "toPoint", "path": null, "summary": "External package 'toPoint' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:event", "kind": "pkg", "name": "event", "path": null, "summary": "External package 'event' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:clicked_item", "kind": "pkg", "name": "clicked_item", "path": null, "summary": "External package 'clicked_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QMessageBox", "kind": "pkg", "name": "QMessageBox", "path": null, "summary": "External package 'QMessageBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ctrl", "kind": "pkg", "name": "ctrl", "path": null, "summary": "External package 'ctrl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:w", "kind": "pkg", "name": "w", "path": null, "summary": "External package 'w' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tab", "kind": "pkg", "name": "tab", "path": null, "summary": "External package 'tab' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Controller", "kind": "pkg", "name": "Controller", "path": null, "summary": "External package 'Controller' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_tb", "kind": "pkg", "name": "_tb", "path": null, "summary": "External package '_tb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:create_module", "kind": "pkg", "name": "create_module", "path": null, "summary": "External package 'create_module' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setattr", "kind": "pkg", "name": "setattr", "path": null, "summary": "External package 'setattr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:MainWindow", "kind": "pkg", "name": "MainWindow", "path": null, "summary": "External package 'MainWindow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:controller", "kind": "pkg", "name": "controller", "path": null, "summary": "External package 'controller' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:module", "kind": "pkg", "name": "module", "path": null, "summary": "External package 'module' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QListWidgetItem", "kind": "pkg", "name": "QListWidgetItem", "path": null, "summary": "External package 'QListWidgetItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:wrap_center", "kind": "pkg", "name": "wrap_center", "path": null, "summary": "External package 'wrap_center' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QLabel", "kind": "pkg", "name": "QLabel", "path": null, "summary": "External package 'QLabel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QApplication", "kind": "pkg", "name": "QApplication", "path": null, "summary": "External package 'QApplication' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:app", "kind": "pkg", "name": "app", "path": null, "summary": "External package 'app' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:get_connection", "kind": "pkg", "name": "get_connection", "path": null, "summary": "External package 'get_connection' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:LoginController", "kind": "pkg", "name": "LoginController", "path": null, "summary": "External package 'LoginController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:login", "kind": "pkg", "name": "login", "path": null, "summary": "External package 'login' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:win", "kind": "pkg", "name": "win", "path": null, "summary": "External package 'win' (stub).", "tags": null, "range": null, "parent": null}
{"id": "feat:MAIN:main.py", "kind": "feature", "name": "MAIN:main.py", "path": null, "summary": "Script entrypoint for main.py.", "tags": ["script"], "range": null, "parent": null}
{"id": "mod:modules/__init__.py", "kind": "module", "name": "modules", "path": "modules/__init__.py", "summary": "Module modules.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/__init__.py", "kind": "module", "name": "modules.backup_restore", "path": "modules/backup_restore/__init__.py", "summary": "Backup & Restore module package.  - Keeps imports light by deferring controller import until create_module() is called. - Exposes MODULE_TITLE and create_module() for the app shell.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/__init__.py:_BaseModuleLike", "kind": "class", "name": "_BaseModuleLike", "path": "modules/backup_restore/__init__.py", "summary": "Minimal contract expected by the app shell.", "tags": null, "range": {"lines": [16, 20], "bytes": [356, 545]}, "parent": "mod:modules/backup_restore/__init__.py"}
{"id": "sym:modules/backup_restore/__init__.py:_BaseModuleLike.get_widget", "kind": "function", "name": "_BaseModuleLike.get_widget", "path": "modules/backup_restore/__init__.py", "summary": "Method _BaseModuleLike.get_widget.", "tags": null, "range": {"lines": [18, 18], "bytes": [443, 473]}, "parent": "sym:modules/backup_restore/__init__.py:_BaseModuleLike"}
{"id": "sym:modules/backup_restore/__init__.py:_BaseModuleLike.get_title", "kind": "function", "name": "_BaseModuleLike.get_title", "path": "modules/backup_restore/__init__.py", "summary": "Method _BaseModuleLike.get_title.", "tags": null, "range": {"lines": [19, 19], "bytes": [473, 509]}, "parent": "sym:modules/backup_restore/__init__.py:_BaseModuleLike"}
{"id": "sym:modules/backup_restore/__init__.py:_BaseModuleLike.teardown", "kind": "function", "name": "_BaseModuleLike.teardown", "path": "modules/backup_restore/__init__.py", "summary": "Method _BaseModuleLike.teardown.", "tags": null, "range": {"lines": [20, 20], "bytes": [509, 545]}, "parent": "sym:modules/backup_restore/__init__.py:_BaseModuleLike"}
{"id": "sym:modules/backup_restore/__init__.py:create_module", "kind": "function", "name": "create_module", "path": "modules/backup_restore/__init__.py", "summary": "Factory: returns the module controller instance.  Importing the controller here (instead of at module import time) keeps startup overhead low.", "tags": null, "range": {"lines": [28, 36], "bytes": [697, 997]}, "parent": "mod:modules/backup_restore/__init__.py"}
{"id": "pkg:BackupRestoreController", "kind": "pkg", "name": "BackupRestoreController", "path": null, "summary": "External package 'BackupRestoreController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/controller.py", "kind": "module", "name": "modules.backup_restore.controller", "path": "modules/backup_restore/controller.py", "summary": "modules/backup_restore/controller.py  Purpose ------- Glue between the app shell and the Backup/Restore workflows; owns the top-level widget.  This controller stays thin: it wires UI events (from views.py) to long-running jobs (from service.py), coordinates DB connection lifecycle on restore, and surfaces progress/res…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/controller.py:_Callbacks", "kind": "class", "name": "_Callbacks", "path": "modules/backup_restore/controller.py", "summary": "Class _Callbacks.", "tags": null, "range": {"lines": [46, 50], "bytes": [1159, 1334]}, "parent": "mod:modules/backup_restore/controller.py"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController", "kind": "class", "name": "BackupRestoreController", "path": "modules/backup_restore/controller.py", "summary": "Main controller for the Backup & Restore module.  Dependencies can be injected for testing: - app_db_manager: object with close_all() and open() methods (used during restore). - settings_org/settings_app: used for QSettings key-space (remember last backup path).", "tags": null, "range": {"lines": [57, 364], "bytes": [1412, 12871]}, "parent": "mod:modules/backup_restore/controller.py"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController.__init__", "kind": "function", "name": "BackupRestoreController.__init__", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController.__init__.", "tags": null, "range": {"lines": [74, 97], "bytes": [2162, 3088]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController.get_widget", "kind": "function", "name": "BackupRestoreController.get_widget", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController.get_widget.", "tags": null, "range": {"lines": [101, 104], "bytes": [3147, 3293]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController.get_title", "kind": "function", "name": "BackupRestoreController.get_title", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController.get_title.", "tags": null, "range": {"lines": [106, 107], "bytes": [3294, 3352]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController.register_menu_actions", "kind": "function", "name": "BackupRestoreController.register_menu_actions", "path": "modules/backup_restore/controller.py", "summary": "Register \"File → Backup Database…\" and \"File → Restore Database…\" actions.  The menu_bar is expected to be a QMenuBar (or compatible) provided by the shell.", "tags": null, "range": {"lines": [109, 136], "bytes": [3353, 4524]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController.teardown", "kind": "function", "name": "BackupRestoreController.teardown", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController.teardown.", "tags": null, "range": {"lines": [138, 140], "bytes": [4525, 4644]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._build_widget", "kind": "function", "name": "BackupRestoreController._build_widget", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._build_widget.", "tags": null, "range": {"lines": [144, 188], "bytes": [4686, 6305]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._make_card", "kind": "function", "name": "BackupRestoreController._make_card", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._make_card.", "tags": null, "range": {"lines": [190, 216], "bytes": [6306, 7170]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._format_last_backup_label", "kind": "function", "name": "BackupRestoreController._format_last_backup_label", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._format_last_backup_label.", "tags": null, "range": {"lines": [218, 221], "bytes": [7171, 7403]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._save_last_backup_path", "kind": "function", "name": "BackupRestoreController._save_last_backup_path", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._save_last_backup_path.", "tags": null, "range": {"lines": [223, 227], "bytes": [7404, 7686]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._load_last_backup_path", "kind": "function", "name": "BackupRestoreController._load_last_backup_path", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._load_last_backup_path.", "tags": null, "range": {"lines": [229, 232], "bytes": [7687, 7908]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._open_backup_dialog", "kind": "function", "name": "BackupRestoreController._open_backup_dialog", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._open_backup_dialog.", "tags": null, "range": {"lines": [237, 246], "bytes": [7963, 8383]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._open_restore_dialog", "kind": "function", "name": "BackupRestoreController._open_restore_dialog", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._open_restore_dialog.", "tags": null, "range": {"lines": [249, 256], "bytes": [8396, 8710]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._start_backup", "kind": "function", "name": "BackupRestoreController._start_backup", "path": "modules/backup_restore/controller.py", "summary": "Kick off an async backup job to write a single *.imsdb file.", "tags": null, "range": {"lines": [260, 290], "bytes": [8769, 10047]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._on_backup_finished", "kind": "function", "name": "BackupRestoreController._on_backup_finished", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._on_backup_finished.", "tags": null, "range": {"lines": [292, 310], "bytes": [10048, 10931]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._start_restore", "kind": "function", "name": "BackupRestoreController._start_restore", "path": "modules/backup_restore/controller.py", "summary": "Kick off an async restore job from a *.imsdb file.", "tags": null, "range": {"lines": [312, 346], "bytes": [10932, 12108]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "sym:modules/backup_restore/controller.py:BackupRestoreController._on_restore_finished", "kind": "function", "name": "BackupRestoreController._on_restore_finished", "path": "modules/backup_restore/controller.py", "summary": "Method BackupRestoreController._on_restore_finished.", "tags": null, "range": {"lines": [348, 364], "bytes": [12109, 12871]}, "parent": "sym:modules/backup_restore/controller.py:BackupRestoreController"}
{"id": "pkg:views", "kind": "pkg", "name": "views", "path": null, "summary": "External package 'views' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:__init__", "kind": "pkg", "name": "__init__", "path": null, "summary": "External package '__init__' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:service", "kind": "pkg", "name": "service", "path": null, "summary": "External package 'service' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Signal", "kind": "pkg", "name": "Signal", "path": null, "summary": "External package 'Signal' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QSettings", "kind": "pkg", "name": "QSettings", "path": null, "summary": "External package 'QSettings' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:menu_bar", "kind": "pkg", "name": "menu_bar", "path": null, "summary": "External package 'menu_bar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:type", "kind": "pkg", "name": "type", "path": null, "summary": "External package 'type' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:file_menu", "kind": "pkg", "name": "file_menu", "path": null, "summary": "External package 'file_menu' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:root", "kind": "pkg", "name": "root", "path": null, "summary": "External package 'root' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:title", "kind": "pkg", "name": "title", "path": null, "summary": "External package 'title' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:subtitle", "kind": "pkg", "name": "subtitle", "path": null, "summary": "External package 'subtitle' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cards", "kind": "pkg", "name": "cards", "path": null, "summary": "External package 'cards' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QFrame", "kind": "pkg", "name": "QFrame", "path": null, "summary": "External package 'QFrame' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:card", "kind": "pkg", "name": "card", "path": null, "summary": "External package 'card' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v", "kind": "pkg", "name": "v", "path": null, "summary": "External package 'v' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_t", "kind": "pkg", "name": "lbl_t", "path": null, "summary": "External package 'lbl_t' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl", "kind": "pkg", "name": "lbl", "path": null, "summary": "External package 'lbl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QPushButton", "kind": "pkg", "name": "QPushButton", "path": null, "summary": "External package 'QPushButton' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn", "kind": "pkg", "name": "btn", "path": null, "summary": "External package 'btn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:BackupDialog", "kind": "pkg", "name": "BackupDialog", "path": null, "summary": "External package 'BackupDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ProgressDialog", "kind": "pkg", "name": "ProgressDialog", "path": null, "summary": "External package 'ProgressDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dlg", "kind": "pkg", "name": "dlg", "path": null, "summary": "External package 'dlg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Slot", "kind": "pkg", "name": "Slot", "path": null, "summary": "External package 'Slot' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:RestoreDialog", "kind": "pkg", "name": "RestoreDialog", "path": null, "summary": "External package 'RestoreDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dest", "kind": "pkg", "name": "dest", "path": null, "summary": "External package 'dest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Callbacks", "kind": "pkg", "name": "_Callbacks", "path": null, "summary": "External package '_Callbacks' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:prog_dialog", "kind": "pkg", "name": "prog_dialog", "path": null, "summary": "External package 'prog_dialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:BackupJob", "kind": "pkg", "name": "BackupJob", "path": null, "summary": "External package 'BackupJob' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:job", "kind": "pkg", "name": "job", "path": null, "summary": "External package 'job' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QDesktopServices", "kind": "pkg", "name": "QDesktopServices", "path": null, "summary": "External package 'QDesktopServices' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:p", "kind": "pkg", "name": "p", "path": null, "summary": "External package 'p' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:RestoreJob", "kind": "pkg", "name": "RestoreJob", "path": null, "summary": "External package 'RestoreJob' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/fsops.py", "kind": "module", "name": "modules.backup_restore.fsops", "path": "modules/backup_restore/fsops.py", "summary": "modules/backup_restore/fsops.py  Purpose ------- File-system utilities with attention to atomicity and cross-platform behavior.  Public interface ---------------- - ensure_writable_dir(path: str) -> None - get_free_space_bytes(path: str) -> int - atomic_move(src: str, dest: str, *, verbose: bool = False, logger: Optio…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/fsops.py:_now_iso", "kind": "function", "name": "_now_iso", "path": "modules/backup_restore/fsops.py", "summary": "Function _now_iso.", "tags": null, "range": {"lines": [52, 53], "bytes": [1692, 1780]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_log", "kind": "function", "name": "_log", "path": "modules/backup_restore/fsops.py", "summary": "Emit a single line of key=value fields if verbose logging is enabled.", "tags": null, "range": {"lines": [56, 63], "bytes": [1782, 2121]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_sha256", "kind": "function", "name": "_sha256", "path": "modules/backup_restore/fsops.py", "summary": "Compute SHA-256 of a file (streamed).", "tags": null, "range": {"lines": [66, 72], "bytes": [2123, 2404]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_fsync_file", "kind": "function", "name": "_fsync_file", "path": "modules/backup_restore/fsops.py", "summary": "Best-effort fsync for a file.", "tags": null, "range": {"lines": [75, 85], "bytes": [2406, 2757]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_fsync_dir", "kind": "function", "name": "_fsync_dir", "path": "modules/backup_restore/fsops.py", "summary": "Best-effort fsync for a directory (important after rename/replace).", "tags": null, "range": {"lines": [88, 97], "bytes": [2759, 3042]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_copy_file_fsync", "kind": "function", "name": "_copy_file_fsync", "path": "modules/backup_restore/fsops.py", "summary": "Copy file bytes+metadata and fsync the destination.  NOTE: Do not use this for live SQLite databases—use _sqlite_backup().", "tags": null, "range": {"lines": [100, 107], "bytes": [3044, 3348]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_same_device", "kind": "function", "name": "_same_device", "path": "modules/backup_restore/fsops.py", "summary": "Return True if two paths live on the same device/volume (best-effort).", "tags": null, "range": {"lines": [110, 116], "bytes": [3350, 3764]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:_sqlite_backup", "kind": "function", "name": "_sqlite_backup", "path": "modules/backup_restore/fsops.py", "summary": "Create a consistent SQLite snapshot of `src_db` into `dst_db` using the built-in backup API. Works safely with WAL without copying -wal/-shm.", "tags": null, "range": {"lines": [119, 141], "bytes": [3766, 4758]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:ensure_writable_dir", "kind": "function", "name": "ensure_writable_dir", "path": "modules/backup_restore/fsops.py", "summary": "Validate that `path` exists, is a directory, and is writable/executable. Raise RuntimeError with a helpful message if not.", "tags": null, "range": {"lines": [147, 165], "bytes": [4835, 5654]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:get_free_space_bytes", "kind": "function", "name": "get_free_space_bytes", "path": "modules/backup_restore/fsops.py", "summary": "Return available free space in bytes for the filesystem that contains `path`.", "tags": null, "range": {"lines": [168, 176], "bytes": [5656, 5988]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:make_temp_file", "kind": "function", "name": "make_temp_file", "path": "modules/backup_restore/fsops.py", "summary": "Create a NamedTemporaryFile on disk that persists after close (delete=False), returning its absolute path. Caller is responsible for cleanup or moving.", "tags": null, "range": {"lines": [179, 189], "bytes": [5990, 6502]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:atomic_move", "kind": "function", "name": "atomic_move", "path": "modules/backup_restore/fsops.py", "summary": "Atomically move `src` to `dest` if possible. If across volumes, perform a copy+fsync into a temporary file next to `dest` and then os.replace().  Added operability (optional):   - verbose/logger: emits structured logs for each step with sizes and timestamps.   - strict_verify: computes SHA-256 of final `dest` and logs…", "tags": null, "range": {"lines": [192, 245], "bytes": [6504, 8916]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:safety_copy_current_db", "kind": "function", "name": "safety_copy_current_db", "path": "modules/backup_restore/fsops.py", "summary": "Create a safety snapshot folder adjacent to the DB file:   <db_dir>/pre-restore-<timestamp>/  Use the SQLite backup API to write a *consistent* copy of the live database to <folder>/<db_name>. We intentionally do NOT copy -wal/-shm; the backup is a standalone snapshot.  Return the safety folder path.  Optional:   - ve…", "tags": null, "range": {"lines": [248, 274], "bytes": [8918, 10005]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "sym:modules/backup_restore/fsops.py:replace_db_with", "kind": "function", "name": "replace_db_with", "path": "modules/backup_restore/fsops.py", "summary": "Replace the live DB file with `source_db_file` safely.  Steps:   - Ensure target directory exists.   - Remove lingering target -wal/-shm files, if any.   - Copy source to a temp file in the target directory and fsync.   - os.replace() temp → target (atomic on same volume).   - fsync target directory.  Optional:   - ve…", "tags": null, "range": {"lines": [277, 337], "bytes": [10007, 12531]}, "parent": "mod:modules/backup_restore/fsops.py"}
{"id": "pkg:logging", "kind": "pkg", "name": "logging", "path": null, "summary": "External package 'logging' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:shutil", "kind": "pkg", "name": "shutil", "path": null, "summary": "External package 'shutil' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tempfile", "kind": "pkg", "name": "tempfile", "path": null, "summary": "External package 'tempfile' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:isoformat", "kind": "pkg", "name": "isoformat", "path": null, "summary": "External package 'isoformat' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fields", "kind": "pkg", "name": "fields", "path": null, "summary": "External package 'fields' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:parts", "kind": "pkg", "name": "parts", "path": null, "summary": "External package 'parts' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:logger", "kind": "pkg", "name": "logger", "path": null, "summary": "External package 'logger' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:iter", "kind": "pkg", "name": "iter", "path": null, "summary": "External package 'iter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:h", "kind": "pkg", "name": "h", "path": null, "summary": "External package 'h' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dst", "kind": "pkg", "name": "dst", "path": null, "summary": "External package 'dst' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:p1", "kind": "pkg", "name": "p1", "path": null, "summary": "External package 'p1' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:p2", "kind": "pkg", "name": "p2", "path": null, "summary": "External package 'p2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dst_db", "kind": "pkg", "name": "dst_db", "path": null, "summary": "External package 'dst_db' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:src_db", "kind": "pkg", "name": "src_db", "path": null, "summary": "External package 'src_db' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:RuntimeError", "kind": "pkg", "name": "RuntimeError", "path": null, "summary": "External package 'RuntimeError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tmp", "kind": "pkg", "name": "tmp", "path": null, "summary": "External package 'tmp' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:probe", "kind": "pkg", "name": "probe", "path": null, "summary": "External package 'probe' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dest_p", "kind": "pkg", "name": "dest_p", "path": null, "summary": "External package 'dest_p' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:src_p", "kind": "pkg", "name": "src_p", "path": null, "summary": "External package 'src_p' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tmp_dest", "kind": "pkg", "name": "tmp_dest", "path": null, "summary": "External package 'tmp_dest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:db", "kind": "pkg", "name": "db", "path": null, "summary": "External package 'db' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:out_dir", "kind": "pkg", "name": "out_dir", "path": null, "summary": "External package 'out_dir' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:src", "kind": "pkg", "name": "src", "path": null, "summary": "External package 'src' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tgt", "kind": "pkg", "name": "tgt", "path": null, "summary": "External package 'tgt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:stale", "kind": "pkg", "name": "stale", "path": null, "summary": "External package 'stale' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/logging_utils.py", "kind": "module", "name": "modules.backup_restore.logging_utils", "path": "modules/backup_restore/logging_utils.py", "summary": "modules/backup_restore/logging_utils.py  Purpose ------- Uniform, append-only logging for Backup/Restore operations.  Public API ---------- - get_logger() -> logging.Logger - log_event(logger, op, phase, message, extra: dict = {})", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/logging_utils.py:_JsonLineFormatter", "kind": "class", "name": "_JsonLineFormatter", "path": "modules/backup_restore/logging_utils.py", "summary": "Minimal JSON-lines formatter:   {\"ts\":\"2025-09-16T12:00:01.123Z\",\"level\":\"INFO\",\"name\":\"backup_restore\",\"msg\":\"...\",\"extra\":{...}}", "tags": null, "range": {"lines": [85, 100], "bytes": [2335, 3087]}, "parent": "mod:modules/backup_restore/logging_utils.py"}
{"id": "sym:modules/backup_restore/logging_utils.py:_JsonLineFormatter.format", "kind": "function", "name": "_JsonLineFormatter.format", "path": "modules/backup_restore/logging_utils.py", "summary": "Method _JsonLineFormatter.format.", "tags": null, "range": {"lines": [90, 100], "bytes": [2535, 3087]}, "parent": "sym:modules/backup_restore/logging_utils.py:_JsonLineFormatter"}
{"id": "sym:modules/backup_restore/logging_utils.py:_ensure_log_dir", "kind": "function", "name": "_ensure_log_dir", "path": "modules/backup_restore/logging_utils.py", "summary": "Function _ensure_log_dir.", "tags": null, "range": {"lines": [33, 38], "bytes": [698, 917]}, "parent": "mod:modules/backup_restore/logging_utils.py"}
{"id": "sym:modules/backup_restore/logging_utils.py:get_logger", "kind": "function", "name": "get_logger", "path": "modules/backup_restore/logging_utils.py", "summary": "Return a configured logger that writes JSON-lines to logs/backup_restore.log by default. Reuses the same logger (no duplicate handlers) across calls.  Args:     file_path: Optional custom path to the log file.     level: Logging level (default INFO).", "tags": null, "range": {"lines": [41, 82], "bytes": [919, 2333]}, "parent": "mod:modules/backup_restore/logging_utils.py"}
{"id": "sym:modules/backup_restore/logging_utils.py:log_event", "kind": "function", "name": "log_event", "path": "modules/backup_restore/logging_utils.py", "summary": "Log a structured event line. Intended for backup/restore operational telemetry.  Args:     logger: Obtained from get_logger().     op: Operation name, e.g., \"backup\" or \"restore\".     phase: Phase within the operation, e.g., \"preflight\", \"snapshot\", \"verify\", \"swap\".     message: Human-readable short message.     extr…", "tags": null, "range": {"lines": [103, 130], "bytes": [3089, 4132]}, "parent": "mod:modules/backup_restore/logging_utils.py"}
{"id": "pkg:json", "kind": "pkg", "name": "json", "path": null, "summary": "External package 'json' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:path", "kind": "pkg", "name": "path", "path": null, "summary": "External package 'path' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sh", "kind": "pkg", "name": "sh", "path": null, "summary": "External package 'sh' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_JsonLineFormatter", "kind": "pkg", "name": "_JsonLineFormatter", "path": null, "summary": "External package '_JsonLineFormatter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fh", "kind": "pkg", "name": "fh", "path": null, "summary": "External package 'fh' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:record", "kind": "pkg", "name": "record", "path": null, "summary": "External package 'record' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:extra", "kind": "pkg", "name": "extra", "path": null, "summary": "External package 'extra' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/service.py", "kind": "module", "name": "modules.backup_restore.service", "path": "modules/backup_restore/service.py", "summary": "modules/backup_restore/service.py  Purpose ------- Orchestrate long-running Backup/Restore tasks off the UI thread and report progress back to the controller via duck-typed callbacks.  Public interface ---------------- - BackupJob.run_async(dest_file: str, callbacks: ProgressCallbacks) -> None - RestoreJob.run_async(s…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/service.py:_Callbacks", "kind": "class", "name": "_Callbacks", "path": "modules/backup_restore/service.py", "summary": "Class _Callbacks.", "tags": null, "range": {"lines": [57, 61], "bytes": [1476, 1719]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "sym:modules/backup_restore/service.py:_JobRunnable", "kind": "class", "name": "_JobRunnable", "path": "modules/backup_restore/service.py", "summary": "Thin QRunnable wrapper that executes a callable and ensures completion callbacks always run.", "tags": null, "range": {"lines": [68, 80], "bytes": [1800, 2179]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "sym:modules/backup_restore/service.py:_JobRunnable.__init__", "kind": "function", "name": "_JobRunnable.__init__", "path": "modules/backup_restore/service.py", "summary": "Method _JobRunnable.__init__.", "tags": null, "range": {"lines": [73, 76], "bytes": [1948, 2092]}, "parent": "sym:modules/backup_restore/service.py:_JobRunnable"}
{"id": "sym:modules/backup_restore/service.py:_JobRunnable.run", "kind": "function", "name": "_JobRunnable.run", "path": "modules/backup_restore/service.py", "summary": "Method _JobRunnable.run.", "tags": null, "range": {"lines": [79, 80], "bytes": [2105, 2179]}, "parent": "sym:modules/backup_restore/service.py:_JobRunnable"}
{"id": "sym:modules/backup_restore/service.py:BackupJob", "kind": "class", "name": "BackupJob", "path": "modules/backup_restore/service.py", "summary": "Encapsulates the backup workflow and progress reporting.", "tags": null, "range": {"lines": [87, 186], "bytes": [2257, 6478]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "sym:modules/backup_restore/service.py:BackupJob.__init__", "kind": "function", "name": "BackupJob.__init__", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob.__init__.", "tags": null, "range": {"lines": [91, 97], "bytes": [2360, 2776]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:BackupJob.run_async", "kind": "function", "name": "BackupJob.run_async", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob.run_async.", "tags": null, "range": {"lines": [99, 107], "bytes": [2777, 3193]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:BackupJob._run", "kind": "function", "name": "BackupJob._run", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob._run.", "tags": null, "range": {"lines": [110, 166], "bytes": [3248, 5952]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:BackupJob._human_size", "kind": "function", "name": "BackupJob._human_size", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob._human_size.", "tags": null, "range": {"lines": [170, 176], "bytes": [5995, 6245]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:BackupJob._import_sqlite_ops", "kind": "function", "name": "BackupJob._import_sqlite_ops", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob._import_sqlite_ops.", "tags": null, "range": {"lines": [179, 181], "bytes": [6264, 6369]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:BackupJob._import_fsops", "kind": "function", "name": "BackupJob._import_fsops", "path": "modules/backup_restore/service.py", "summary": "Method BackupJob._import_fsops.", "tags": null, "range": {"lines": [184, 186], "bytes": [6388, 6478]}, "parent": "sym:modules/backup_restore/service.py:BackupJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob", "kind": "class", "name": "RestoreJob", "path": "modules/backup_restore/service.py", "summary": "Encapsulates the restore workflow and progress reporting.", "tags": null, "range": {"lines": [193, 342], "bytes": [6557, 13229]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob.__init__", "kind": "function", "name": "RestoreJob.__init__", "path": "modules/backup_restore/service.py", "summary": "Method RestoreJob.__init__.", "tags": null, "range": {"lines": [197, 211], "bytes": [6662, 7142]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob.run_async", "kind": "function", "name": "RestoreJob.run_async", "path": "modules/backup_restore/service.py", "summary": "Method RestoreJob.run_async.", "tags": null, "range": {"lines": [213, 221], "bytes": [7143, 7557]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob._run", "kind": "function", "name": "RestoreJob._run", "path": "modules/backup_restore/service.py", "summary": "Method RestoreJob._run.", "tags": null, "range": {"lines": [224, 318], "bytes": [7612, 12473]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob._foreign_key_violations", "kind": "function", "name": "RestoreJob._foreign_key_violations", "path": "modules/backup_restore/service.py", "summary": "Run PRAGMA foreign_key_check on the given database path and return any violations. Each row is (table, rowid, parent, fkid). Empty list means no violations.", "tags": null, "range": {"lines": [321, 332], "bytes": [12492, 12996]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob._import_sqlite_ops", "kind": "function", "name": "RestoreJob._import_sqlite_ops", "path": "modules/backup_restore/service.py", "summary": "Method RestoreJob._import_sqlite_ops.", "tags": null, "range": {"lines": [335, 337], "bytes": [13015, 13120]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:RestoreJob._import_fsops", "kind": "function", "name": "RestoreJob._import_fsops", "path": "modules/backup_restore/service.py", "summary": "Method RestoreJob._import_fsops.", "tags": null, "range": {"lines": [340, 342], "bytes": [13139, 13229]}, "parent": "sym:modules/backup_restore/service.py:RestoreJob"}
{"id": "sym:modules/backup_restore/service.py:_safe_call", "kind": "function", "name": "_safe_call", "path": "modules/backup_restore/service.py", "summary": "Call a callback if present; swallow exceptions from UI layer.", "tags": null, "range": {"lines": [39, 47], "bytes": [993, 1302]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "sym:modules/backup_restore/service.py:_fmt_err", "kind": "function", "name": "_fmt_err", "path": "modules/backup_restore/service.py", "summary": "Function _fmt_err.", "tags": null, "range": {"lines": [50, 53], "bytes": [1304, 1463]}, "parent": "mod:modules/backup_restore/service.py"}
{"id": "pkg:sqlite_ops", "kind": "pkg", "name": "sqlite_ops", "path": null, "summary": "External package 'sqlite_ops' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fsops", "kind": "pkg", "name": "fsops", "path": null, "summary": "External package 'fsops' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fn", "kind": "pkg", "name": "fn", "path": null, "summary": "External package 'fn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QThreadPool", "kind": "pkg", "name": "QThreadPool", "path": null, "summary": "External package 'QThreadPool' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_JobRunnable", "kind": "pkg", "name": "_JobRunnable", "path": null, "summary": "External package '_JobRunnable' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dest_parent", "kind": "pkg", "name": "dest_parent", "path": null, "summary": "External package 'dest_parent' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:imsdb", "kind": "pkg", "name": "imsdb", "path": null, "summary": "External package 'imsdb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:strftime", "kind": "pkg", "name": "strftime", "path": null, "summary": "External package 'strftime' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lines", "kind": "pkg", "name": "lines", "path": null, "summary": "External package 'lines' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:original", "kind": "pkg", "name": "original", "path": null, "summary": "External package 'original' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:glob", "kind": "pkg", "name": "glob", "path": null, "summary": "External package 'glob' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/sqlite_ops.py", "kind": "module", "name": "modules.backup_restore.sqlite_ops", "path": "modules/backup_restore/sqlite_ops.py", "summary": "modules/backup_restore/sqlite_ops.py  Purpose ------- SQLite-aware operations for creating a **consistent** database snapshot and performing lightweight/heavyweight integrity checks. Designed to work with both WAL and non-WAL modes and to expose progress during backups when available.  Public Interface ---------------…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/sqlite_ops.py:set_db_path", "kind": "function", "name": "set_db_path", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Optional helper for apps that want to explicitly set the DB path at runtime.", "tags": null, "range": {"lines": [68, 71], "bytes": [2313, 2510]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:_resolve_db_path", "kind": "function", "name": "_resolve_db_path", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Resolve the absolute path of the live application database.  Resolution order:   1) Value set via set_db_path()   2) Environment variable APP_DB_PATH   3) Optional app-provided helpers:      - core.db.get_db_path()      - database.get_db_path()      - app.database.get_db_path()  Raise a RuntimeError if none are found.", "tags": null, "range": {"lines": [74, 117], "bytes": [2512, 3867]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:get_db_path", "kind": "function", "name": "get_db_path", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Return the absolute path to the live database file.", "tags": null, "range": {"lines": [124, 126], "bytes": [3953, 4071]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:get_db_size_bytes", "kind": "function", "name": "get_db_size_bytes", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Return the size (bytes) of the given DB (or current app DB if None).", "tags": null, "range": {"lines": [129, 132], "bytes": [4073, 4295]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:_connect_ro", "kind": "function", "name": "_connect_ro", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Open a read-only connection via URI. This avoids creating -wal/-shm and is safe for integrity checks.", "tags": null, "range": {"lines": [135, 143], "bytes": [4297, 4666]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:is_wal_mode", "kind": "function", "name": "is_wal_mode", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Return True if the database journal mode is WAL.", "tags": null, "range": {"lines": [146, 148], "bytes": [4668, 4831]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:get_journal_mode", "kind": "function", "name": "get_journal_mode", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Return the current journal_mode string (e.g., 'wal', 'delete', 'off').", "tags": null, "range": {"lines": [151, 156], "bytes": [4833, 5147]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:create_consistent_snapshot", "kind": "function", "name": "create_consistent_snapshot", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Create a consistent snapshot of the live database into `dest_path`.  Strategy priority:   1) Online Backup API (Connection.backup), with progress callback.   2) VACUUM INTO '<dest_path>' as a fallback (requires short exclusive lock).  The resulting file at `dest_path` is a complete standalone SQLite database.  Operabi…", "tags": null, "range": {"lines": [163, 221], "bytes": [5243, 7777]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:_try_backup_api", "kind": "function", "name": "_try_backup_api", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Use sqlite3's Connection.backup if available. Returns True on success, False if unsupported or fails before writing (the caller will fall back to VACUUM INTO).", "tags": null, "range": {"lines": [223, 250], "bytes": [7778, 9049]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:_progress", "kind": "function", "name": "_progress", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Function _progress.", "tags": null, "range": {"lines": [240, 244], "bytes": [8518, 8832]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:_vacuum_into", "kind": "function", "name": "_vacuum_into", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Use VACUUM INTO to create a compact copy of the database at dest_path. Requires SQLite 3.27+. Will hold a short exclusive lock.", "tags": null, "range": {"lines": [253, 273], "bytes": [9051, 10071]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:quick_check", "kind": "function", "name": "quick_check", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Run PRAGMA quick_check; returns True iff result is exactly 'ok'.", "tags": null, "range": {"lines": [280, 292], "bytes": [10155, 10597]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:integrity_check", "kind": "function", "name": "integrity_check", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Run PRAGMA integrity_check and return (ok, errors). If not ok, returns up to `limit_errors` sample error lines for diagnostics.", "tags": null, "range": {"lines": [295, 317], "bytes": [10599, 11604]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:foreign_key_check", "kind": "function", "name": "foreign_key_check", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Run PRAGMA foreign_key_check and return any violations. Each row has columns: table, rowid, parent, fkid. Empty list => no violations.", "tags": null, "range": {"lines": [320, 333], "bytes": [11606, 12088]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "sym:modules/backup_restore/sqlite_ops.py:verify_database", "kind": "function", "name": "verify_database", "path": "modules/backup_restore/sqlite_ops.py", "summary": "Unified verification helper.  Args:     db_path: Path to the database to verify.     mode: 'quick' (PRAGMA quick_check) or 'integrity' (PRAGMA integrity_check).     fk_check: If True, also run PRAGMA foreign_key_check and include a summary if violations exist.     limit_errors: Max number of integrity_check error mess…", "tags": null, "range": {"lines": [336, 388], "bytes": [12090, 14090]}, "parent": "mod:modules/backup_restore/sqlite_ops.py"}
{"id": "pkg:expanduser", "kind": "pkg", "name": "expanduser", "path": null, "summary": "External package 'expanduser' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:__import__", "kind": "pkg", "name": "__import__", "path": null, "summary": "External package '__import__' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:callable", "kind": "pkg", "name": "callable", "path": null, "summary": "External package 'callable' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:as_posix", "kind": "pkg", "name": "as_posix", "path": null, "summary": "External package 'as_posix' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:with_suffix", "kind": "pkg", "name": "with_suffix", "path": null, "summary": "External package 'with_suffix' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:log", "kind": "pkg", "name": "log", "path": null, "summary": "External package 'log' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:jm", "kind": "pkg", "name": "jm", "path": null, "summary": "External package 'jm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:progress_step", "kind": "pkg", "name": "progress_step", "path": null, "summary": "External package 'progress_step' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:parent", "kind": "pkg", "name": "parent", "path": null, "summary": "External package 'parent' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:val", "kind": "pkg", "name": "val", "path": null, "summary": "External package 'val' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:errors", "kind": "pkg", "name": "errors", "path": null, "summary": "External package 'errors' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:details", "kind": "pkg", "name": "details", "path": null, "summary": "External package 'details' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:r", "kind": "pkg", "name": "r", "path": null, "summary": "External package 'r' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/validators.py", "kind": "module", "name": "modules.backup_restore.validators", "path": "modules/backup_restore/validators.py", "summary": "modules/backup_restore/validators.py  Purpose ------- Centralize common preflight checks with clear, user-friendly error messages.  Public API --------- - validate_backup_destination(dest_file: str, db_size: int, free_space: int) -> None - validate_backup_source(db_path: str) -> None", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/validators.py:_human_size", "kind": "function", "name": "_human_size", "path": "modules/backup_restore/validators.py", "summary": "Function _human_size.", "tags": null, "range": {"lines": [22, 28], "bytes": [406, 641]}, "parent": "mod:modules/backup_restore/validators.py"}
{"id": "sym:modules/backup_restore/validators.py:_is_writable_dir", "kind": "function", "name": "_is_writable_dir", "path": "modules/backup_restore/validators.py", "summary": "Function _is_writable_dir.", "tags": null, "range": {"lines": [31, 35], "bytes": [643, 816]}, "parent": "mod:modules/backup_restore/validators.py"}
{"id": "sym:modules/backup_restore/validators.py:_windows_reserved_names", "kind": "function", "name": "_windows_reserved_names", "path": "modules/backup_restore/validators.py", "summary": "Function _windows_reserved_names.", "tags": null, "range": {"lines": [38, 43], "bytes": [818, 1009]}, "parent": "mod:modules/backup_restore/validators.py"}
{"id": "sym:modules/backup_restore/validators.py:validate_backup_destination", "kind": "function", "name": "validate_backup_destination", "path": "modules/backup_restore/validators.py", "summary": "Validate that the destination path can receive a backup file.  Rules:   - Parent folder must exist and be writable.   - Filename must be non-empty and not a directory.   - Recommend .imsdb extension (not strictly required here).   - Require at least 1.5x DB size in free space (caller passes free_space). Raises:   Runt…", "tags": null, "range": {"lines": [46, 99], "bytes": [1011, 3296]}, "parent": "mod:modules/backup_restore/validators.py"}
{"id": "sym:modules/backup_restore/validators.py:validate_backup_source", "kind": "function", "name": "validate_backup_source", "path": "modules/backup_restore/validators.py", "summary": "Validate that the source DB exists and is readable before attempting snapshot.  Rules:   - DB path must exist and be a regular file.   - Read permission must be available.   - Size must be > 0 bytes (heuristic sanity). Raises:   RuntimeError with a user-facing message on failure.", "tags": null, "range": {"lines": [102, 128], "bytes": [3298, 4243]}, "parent": "mod:modules/backup_restore/validators.py"}
{"id": "pkg:rstrip", "kind": "pkg", "name": "rstrip", "path": null, "summary": "External package 'rstrip' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/backup_restore/views.py", "kind": "module", "name": "modules.backup_restore.views", "path": "modules/backup_restore/views.py", "summary": "modules/backup_restore/views.py  Purpose ------- All PySide6 UI components (dialogs + simple progress window). No business logic here.  Dialogs ------- 1) BackupDialog    - Inputs: destination folder + file name (default AppName_YYYY-MM-DD_HH-mm.imsdb)    - Computed labels: estimated DB size (provided/set by controlle…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/backup_restore/views.py:BackupDialog", "kind": "class", "name": "BackupDialog", "path": "modules/backup_restore/views.py", "summary": "Lets the user choose where to write the *.imsdb file. Shows estimated DB size and free space. Emits start_backup(dest_path: str) when confirmed.", "tags": null, "range": {"lines": [82, 233], "bytes": [2113, 7762]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog.__init__", "kind": "function", "name": "BackupDialog.__init__", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog.__init__.", "tags": null, "range": {"lines": [91, 101], "bytes": [2366, 2820]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog.set_estimated_db_size", "kind": "function", "name": "BackupDialog.set_estimated_db_size", "path": "modules/backup_restore/views.py", "summary": "Controller may call this to set/update the estimated DB size shown to the user.", "tags": null, "range": {"lines": [105, 108], "bytes": [2865, 3107]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._build_ui", "kind": "function", "name": "BackupDialog._build_ui", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._build_ui.", "tags": null, "range": {"lines": [112, 155], "bytes": [3126, 4642]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._wire_events", "kind": "function", "name": "BackupDialog._wire_events", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._wire_events.", "tags": null, "range": {"lines": [157, 162], "bytes": [4643, 4984]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._choose_dir", "kind": "function", "name": "BackupDialog._choose_dir", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._choose_dir.", "tags": null, "range": {"lines": [166, 170], "bytes": [5021, 5285]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._dest_path", "kind": "function", "name": "BackupDialog._dest_path", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._dest_path.", "tags": null, "range": {"lines": [172, 175], "bytes": [5286, 5497]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._check_writable_dir", "kind": "function", "name": "BackupDialog._check_writable_dir", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._check_writable_dir.", "tags": null, "range": {"lines": [177, 181], "bytes": [5498, 5700]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._recompute_labels", "kind": "function", "name": "BackupDialog._recompute_labels", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._recompute_labels.", "tags": null, "range": {"lines": [183, 211], "bytes": [5701, 7060]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog._try_emit", "kind": "function", "name": "BackupDialog._try_emit", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog._try_emit.", "tags": null, "range": {"lines": [213, 223], "bytes": [7061, 7548]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog.reject", "kind": "function", "name": "BackupDialog.reject", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog.reject.", "tags": null, "range": {"lines": [227, 229], "bytes": [7581, 7673]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:BackupDialog.accept", "kind": "function", "name": "BackupDialog.accept", "path": "modules/backup_restore/views.py", "summary": "Method BackupDialog.accept.", "tags": null, "range": {"lines": [231, 233], "bytes": [7674, 7762]}, "parent": "sym:modules/backup_restore/views.py:BackupDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog", "kind": "class", "name": "RestoreDialog", "path": "modules/backup_restore/views.py", "summary": "Lets the user pick a *.imsdb backup file. Shows file size and simple readability indicator. Emits start_restore(backup_file: str) when confirmed.", "tags": null, "range": {"lines": [240, 354], "bytes": [7844, 11941]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog.__init__", "kind": "function", "name": "RestoreDialog.__init__", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog.__init__.", "tags": null, "range": {"lines": [249, 257], "bytes": [8100, 8420]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog._build_ui", "kind": "function", "name": "RestoreDialog._build_ui", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog._build_ui.", "tags": null, "range": {"lines": [259, 298], "bytes": [8421, 9733]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog._wire_events", "kind": "function", "name": "RestoreDialog._wire_events", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog._wire_events.", "tags": null, "range": {"lines": [300, 304], "bytes": [9734, 10005]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog._choose_file", "kind": "function", "name": "RestoreDialog._choose_file", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog._choose_file.", "tags": null, "range": {"lines": [306, 315], "bytes": [10006, 10354]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog._update_info", "kind": "function", "name": "RestoreDialog._update_info", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog._update_info.", "tags": null, "range": {"lines": [317, 334], "bytes": [10355, 11240]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog._try_emit", "kind": "function", "name": "RestoreDialog._try_emit", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog._try_emit.", "tags": null, "range": {"lines": [336, 345], "bytes": [11241, 11752]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog.reject", "kind": "function", "name": "RestoreDialog.reject", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog.reject.", "tags": null, "range": {"lines": [348, 350], "bytes": [11776, 11858]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:RestoreDialog.accept", "kind": "function", "name": "RestoreDialog.accept", "path": "modules/backup_restore/views.py", "summary": "Method RestoreDialog.accept.", "tags": null, "range": {"lines": [352, 354], "bytes": [11859, 11941]}, "parent": "sym:modules/backup_restore/views.py:RestoreDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog", "kind": "class", "name": "ProgressDialog", "path": "modules/backup_restore/views.py", "summary": "Lightweight progress UI used by the controller during backup/restore jobs. Exposes slots to update text/progress/log and to finish the dialog state.", "tags": null, "range": {"lines": [361, 439], "bytes": [12024, 14549]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog.__init__", "kind": "function", "name": "ProgressDialog.__init__", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog.__init__.", "tags": null, "range": {"lines": [367, 374], "bytes": [12229, 12490]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog._build_ui", "kind": "function", "name": "ProgressDialog._build_ui", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog._build_ui.", "tags": null, "range": {"lines": [376, 401], "bytes": [12491, 13347]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog._set_running", "kind": "function", "name": "ProgressDialog._set_running", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog._set_running.", "tags": null, "range": {"lines": [403, 404], "bytes": [13348, 13447]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog.on_phase", "kind": "function", "name": "ProgressDialog.on_phase", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog.on_phase.", "tags": null, "range": {"lines": [409, 410], "bytes": [13513, 13596]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog.on_progress", "kind": "function", "name": "ProgressDialog.on_progress", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog.on_progress.", "tags": null, "range": {"lines": [413, 419], "bytes": [13612, 13912]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog.on_log", "kind": "function", "name": "ProgressDialog.on_log", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog.on_log.", "tags": null, "range": {"lines": [422, 423], "bytes": [13928, 14009]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:ProgressDialog.on_finished", "kind": "function", "name": "ProgressDialog.on_finished", "path": "modules/backup_restore/views.py", "summary": "Method ProgressDialog.on_finished.", "tags": null, "range": {"lines": [426, 439], "bytes": [14039, 14549]}, "parent": "sym:modules/backup_restore/views.py:ProgressDialog"}
{"id": "sym:modules/backup_restore/views.py:_app_name_fallback", "kind": "function", "name": "_app_name_fallback", "path": "modules/backup_restore/views.py", "summary": "Function _app_name_fallback.", "tags": null, "range": {"lines": [61, 63], "bytes": [1538, 1652]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "sym:modules/backup_restore/views.py:_default_backup_filename", "kind": "function", "name": "_default_backup_filename", "path": "modules/backup_restore/views.py", "summary": "Function _default_backup_filename.", "tags": null, "range": {"lines": [65, 67], "bytes": [1653, 1797]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "sym:modules/backup_restore/views.py:_human_size", "kind": "function", "name": "_human_size", "path": "modules/backup_restore/views.py", "summary": "Function _human_size.", "tags": null, "range": {"lines": [69, 75], "bytes": [1798, 2032]}, "parent": "mod:modules/backup_restore/views.py"}
{"id": "pkg:QCoreApplication", "kind": "pkg", "name": "QCoreApplication", "path": null, "summary": "External package 'QCoreApplication' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:intro", "kind": "pkg", "name": "intro", "path": null, "summary": "External package 'intro' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QGridLayout", "kind": "pkg", "name": "QGridLayout", "path": null, "summary": "External package 'QGridLayout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:grid", "kind": "pkg", "name": "grid", "path": null, "summary": "External package 'grid' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QLineEdit", "kind": "pkg", "name": "QLineEdit", "path": null, "summary": "External package 'QLineEdit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btns", "kind": "pkg", "name": "btns", "path": null, "summary": "External package 'btns' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QFileDialog", "kind": "pkg", "name": "QFileDialog", "path": null, "summary": "External package 'QFileDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:folder", "kind": "pkg", "name": "folder", "path": null, "summary": "External package 'folder' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bool", "kind": "pkg", "name": "bool", "path": null, "summary": "External package 'bool' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:warn", "kind": "pkg", "name": "warn", "path": null, "summary": "External package 'warn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QProgressBar", "kind": "pkg", "name": "QProgressBar", "path": null, "summary": "External package 'QProgressBar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTextEdit", "kind": "pkg", "name": "QTextEdit", "path": null, "summary": "External package 'QTextEdit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:line", "kind": "pkg", "name": "line", "path": null, "summary": "External package 'line' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/base_module.py", "kind": "module", "name": "modules.base_module", "path": "modules/base_module.py", "summary": "Module modules.base_module.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/base_module.py:BaseModule", "kind": "class", "name": "BaseModule", "path": "modules/base_module.py", "summary": "Class BaseModule.", "tags": null, "range": {"lines": [3, 5], "bytes": [39, 128]}, "parent": "mod:modules/base_module.py"}
{"id": "sym:modules/base_module.py:BaseModule.get_widget", "kind": "function", "name": "BaseModule.get_widget", "path": "modules/base_module.py", "summary": "Method BaseModule.get_widget.", "tags": null, "range": {"lines": [4, 5], "bytes": [57, 128]}, "parent": "sym:modules/base_module.py:BaseModule"}
{"id": "mod:modules/company/__init__.py", "kind": "module", "name": "modules.company", "path": "modules/company/__init__.py", "summary": "Module modules.company.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/contact_form.py", "kind": "module", "name": "modules.company.contact_form", "path": "modules/company/contact_form.py", "summary": "Module modules.company.contact_form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/contacts.py", "kind": "module", "name": "modules.company.contacts", "path": "modules/company/contacts.py", "summary": "Module modules.company.contacts.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/controller.py", "kind": "module", "name": "modules.company.controller", "path": "modules/company/controller.py", "summary": "Module modules.company.controller.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/details.py", "kind": "module", "name": "modules.company.details", "path": "modules/company/details.py", "summary": "Module modules.company.details.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/form.py", "kind": "module", "name": "modules.company.form", "path": "modules/company/form.py", "summary": "Module modules.company.form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/model.py", "kind": "module", "name": "modules.company.model", "path": "modules/company/model.py", "summary": "Module modules.company.model.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/company/view.py", "kind": "module", "name": "modules.company.view", "path": "modules/company/view.py", "summary": "Module modules.company.view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/__init__.py", "kind": "module", "name": "modules.customer", "path": "modules/customer/__init__.py", "summary": "Module modules.customer.", "tags": null, "range": null, "parent": null}
{"id": "pkg:actions", "kind": "pkg", "name": "actions", "path": null, "summary": "External package 'actions' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:form", "kind": "pkg", "name": "form", "path": null, "summary": "External package 'form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:history", "kind": "pkg", "name": "history", "path": null, "summary": "External package 'history' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:model", "kind": "pkg", "name": "model", "path": null, "summary": "External package 'model' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:view", "kind": "pkg", "name": "view", "path": null, "summary": "External package 'view' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/actions.py", "kind": "module", "name": "modules.customer.actions", "path": "modules/customer/actions.py", "summary": "Module modules.customer.actions.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/actions.py:ActionResult", "kind": "class", "name": "ActionResult", "path": "modules/customer/actions.py", "summary": "Class ActionResult.", "tags": null, "range": {"lines": [12, 16], "bytes": [241, 488]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:_get_sale_payments_repo", "kind": "function", "name": "_get_sale_payments_repo", "path": "modules/customer/actions.py", "summary": "Function _get_sale_payments_repo.", "tags": null, "range": {"lines": [21, 26], "bytes": [570, 818]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:_get_customer_advances_repo", "kind": "function", "name": "_get_customer_advances_repo", "path": "modules/customer/actions.py", "summary": "Function _get_customer_advances_repo.", "tags": null, "range": {"lines": [29, 33], "bytes": [820, 1035]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:_get_customer_history_service", "kind": "function", "name": "_get_customer_history_service", "path": "modules/customer/actions.py", "summary": "Function _get_customer_history_service.", "tags": null, "range": {"lines": [36, 40], "bytes": [1037, 1238]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:receive_payment", "kind": "function", "name": "receive_payment", "path": "modules/customer/actions.py", "summary": "Receive a customer payment against a SALE (not a quotation).  If with_ui=True (default), opens the local dialog:     inventory_management.modules.customer.receipt_dialog.open_payment_or_advance_form(mode=\"receipt\", ...)  Otherwise (with_ui=False), uses `form_defaults` directly.", "tags": null, "range": {"lines": [45, 123], "bytes": [1321, 4712]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:record_advance", "kind": "function", "name": "record_advance", "path": "modules/customer/actions.py", "summary": "Record a customer deposit/advance (adds credit). amount must be > 0.", "tags": null, "range": {"lines": [129, 153], "bytes": [4855, 5681]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:apply_advance", "kind": "function", "name": "apply_advance", "path": "modules/customer/actions.py", "summary": "Apply customer credit to a sale.  The UI supplies a positive amount; the repository (CustomerAdvancesRepo) validates against the sale's remaining due and records the application as a NEGATIVE amount in the ledger. Do not negate here.", "tags": null, "range": {"lines": [156, 188], "bytes": [5683, 6986]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:record_customer_advance", "kind": "function", "name": "record_customer_advance", "path": "modules/customer/actions.py", "summary": "Record a customer advance via UI or direct payload.  UI path (preferred):     inventory_management.modules.customer.receipt_dialog.open_payment_or_advance_form(mode=\"advance\", ...)  Non-UI path:     Uses `form_defaults` as payload to CustomerAdvancesRepo.grant_credit(...)", "tags": null, "range": {"lines": [193, 253], "bytes": [7069, 9554]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:apply_customer_advance", "kind": "function", "name": "apply_customer_advance", "path": "modules/customer/actions.py", "summary": "Apply an existing customer advance to a sale via UI or direct payload.  UI path (preferred):     inventory_management.modules.customer.receipt_dialog.open_payment_or_advance_form(mode=\"apply_advance\", ...)  Non-UI path:     Uses `form_defaults` as payload to CustomerAdvancesRepo.apply_credit_to_sale(...)", "tags": null, "range": {"lines": [256, 321], "bytes": [9556, 12420]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:update_receipt_clearing", "kind": "function", "name": "update_receipt_clearing", "path": "modules/customer/actions.py", "summary": "Update the clearing lifecycle for an existing sale payment (receipt).", "tags": null, "range": {"lines": [326, 350], "bytes": [12503, 13487]}, "parent": "mod:modules/customer/actions.py"}
{"id": "sym:modules/customer/actions.py:open_payment_history", "kind": "function", "name": "open_payment_history", "path": "modules/customer/actions.py", "summary": "Builds the customer's payment/credit history and (optionally) opens a UI view.  If with_ui=True, it first tries local:     inventory_management.modules.customer.payment_history_view.open_customer_history(...)  After change: if local UI import fails, do NOT fall back to legacy — just return success with payload.", "tags": null, "range": {"lines": [355, 388], "bytes": [13570, 14860]}, "parent": "mod:modules/customer/actions.py"}
{"id": "pkg:inventory_management", "kind": "pkg", "name": "inventory_management", "path": null, "summary": "External package 'inventory_management' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerHistoryService", "kind": "pkg", "name": "CustomerHistoryService", "path": null, "summary": "External package 'CustomerHistoryService' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ActionResult", "kind": "pkg", "name": "ActionResult", "path": null, "summary": "External package 'ActionResult' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:open_payment_or_advance_form", "kind": "pkg", "name": "open_payment_or_advance_form", "path": null, "summary": "External package 'open_payment_or_advance_form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:repo_factory", "kind": "pkg", "name": "repo_factory", "path": null, "summary": "External package 'repo_factory' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:repo", "kind": "pkg", "name": "repo", "path": null, "summary": "External package 'repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:form_data", "kind": "pkg", "name": "form_data", "path": null, "summary": "External package 'form_data' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:history_service", "kind": "pkg", "name": "history_service", "path": null, "summary": "External package 'history_service' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:open_customer_history", "kind": "pkg", "name": "open_customer_history", "path": null, "summary": "External package 'open_customer_history' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/controller.py", "kind": "module", "name": "modules.customer.controller", "path": "modules/customer/controller.py", "summary": "Module modules.customer.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/controller.py:CustomerController", "kind": "class", "name": "CustomerController", "path": "modules/customer/controller.py", "summary": "Customers controller with payment/credit actions and enriched details.  Key behavior:   - Loads active customers by default (customers.is_active = 1).   - Right pane shows core fields + credit balance + recent activity.   - Action buttons (Receive Payment, Record Advance, Apply Advance, Payment History)     are disabl…", "tags": null, "range": {"lines": [17, 621], "bytes": [452, 23911]}, "parent": "mod:modules/customer/controller.py"}
{"id": "sym:modules/customer/controller.py:CustomerController.__init__", "kind": "function", "name": "CustomerController.__init__", "path": "modules/customer/controller.py", "summary": "Method CustomerController.__init__.", "tags": null, "range": {"lines": [35, 40], "bytes": [1305, 1499]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController.get_widget", "kind": "function", "name": "CustomerController.get_widget", "path": "modules/customer/controller.py", "summary": "Method CustomerController.get_widget.", "tags": null, "range": {"lines": [46, 47], "bytes": [1672, 1734]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._wire", "kind": "function", "name": "CustomerController._wire", "path": "modules/customer/controller.py", "summary": "Method CustomerController._wire.", "tags": null, "range": {"lines": [53, 67], "bytes": [1907, 2733]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._build_model", "kind": "function", "name": "CustomerController._build_model", "path": "modules/customer/controller.py", "summary": "Method CustomerController._build_model.", "tags": null, "range": {"lines": [69, 83], "bytes": [2734, 3395]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._reload", "kind": "function", "name": "CustomerController._reload", "path": "modules/customer/controller.py", "summary": "Method CustomerController._reload.", "tags": null, "range": {"lines": [85, 90], "bytes": [3396, 3630]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._apply_filter", "kind": "function", "name": "CustomerController._apply_filter", "path": "modules/customer/controller.py", "summary": "Method CustomerController._apply_filter.", "tags": null, "range": {"lines": [96, 98], "bytes": [3817, 3989]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._selected_id", "kind": "function", "name": "CustomerController._selected_id", "path": "modules/customer/controller.py", "summary": "Method CustomerController._selected_id.", "tags": null, "range": {"lines": [100, 105], "bytes": [3990, 4237]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._current_row", "kind": "function", "name": "CustomerController._current_row", "path": "modules/customer/controller.py", "summary": "Method CustomerController._current_row.", "tags": null, "range": {"lines": [107, 110], "bytes": [4238, 4413]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._db_path_from_conn", "kind": "function", "name": "CustomerController._db_path_from_conn", "path": "modules/customer/controller.py", "summary": "Resolve the file path for the 'main' database. Returns None for in-memory DB.", "tags": null, "range": {"lines": [112, 121], "bytes": [4414, 4805]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._fetch_is_active", "kind": "function", "name": "CustomerController._fetch_is_active", "path": "modules/customer/controller.py", "summary": "Method CustomerController._fetch_is_active.", "tags": null, "range": {"lines": [123, 128], "bytes": [4806, 5088]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._details_enrichment", "kind": "function", "name": "CustomerController._details_enrichment", "path": "modules/customer/controller.py", "summary": "Compute credit balance & activity snapshot directly via SQL.", "tags": null, "range": {"lines": [130, 196], "bytes": [5089, 7888]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._update_details", "kind": "function", "name": "CustomerController._update_details", "path": "modules/customer/controller.py", "summary": "Method CustomerController._update_details.", "tags": null, "range": {"lines": [198, 222], "bytes": [7889, 8729]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._set_actions_enabled", "kind": "function", "name": "CustomerController._set_actions_enabled", "path": "modules/customer/controller.py", "summary": "Method CustomerController._set_actions_enabled.", "tags": null, "range": {"lines": [224, 235], "bytes": [8730, 9465]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._preflight", "kind": "function", "name": "CustomerController._preflight", "path": "modules/customer/controller.py", "summary": "Common pre-checks for action handlers.  Returns (customer_id, db_path). Any None means the caller should bail. - require_active: ensure selected customer is active - require_file_db: ensure database is file-backed (payments/credits need this)", "tags": null, "range": {"lines": [241, 266], "bytes": [9658, 10717]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._lazy_attr", "kind": "function", "name": "CustomerController._lazy_attr", "path": "modules/customer/controller.py", "summary": "Lazy-import a symbol using a dotted path (e.g., 'pkg.mod.func' or 'pkg.mod.Class'). Shows a toast if import fails and returns None.", "tags": null, "range": {"lines": [268, 279], "bytes": [10718, 11273]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._add", "kind": "function", "name": "CustomerController._add", "path": "modules/customer/controller.py", "summary": "Method CustomerController._add.", "tags": null, "range": {"lines": [285, 294], "bytes": [11457, 11745]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._edit", "kind": "function", "name": "CustomerController._edit", "path": "modules/customer/controller.py", "summary": "Method CustomerController._edit.", "tags": null, "range": {"lines": [296, 310], "bytes": [11746, 12245]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._delete", "kind": "function", "name": "CustomerController._delete", "path": "modules/customer/controller.py", "summary": "Method CustomerController._delete.", "tags": null, "range": {"lines": [312, 319], "bytes": [12246, 12536]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._list_company_bank_accounts", "kind": "function", "name": "CustomerController._list_company_bank_accounts", "path": "modules/customer/controller.py", "summary": "Return active company bank accounts as [{id, name}].", "tags": null, "range": {"lines": [325, 338], "bytes": [12723, 13215]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._list_sales_for_customer", "kind": "function", "name": "CustomerController._list_sales_for_customer", "path": "modules/customer/controller.py", "summary": "Return sales for a customer with totals/paid to compute remaining.", "tags": null, "range": {"lines": [340, 359], "bytes": [13216, 13980]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._eligible_sales_for_application", "kind": "function", "name": "CustomerController._eligible_sales_for_application", "path": "modules/customer/controller.py", "summary": "Return list of sales with remaining due > 0 for the customer. (Used to seed 'apply advance' UI when needed.)", "tags": null, "range": {"lines": [361, 394], "bytes": [13981, 15310]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._ensure_db_path_or_toast", "kind": "function", "name": "CustomerController._ensure_db_path_or_toast", "path": "modules/customer/controller.py", "summary": "Method CustomerController._ensure_db_path_or_toast.", "tags": null, "range": {"lines": [400, 409], "bytes": [15493, 15871]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._sale_belongs_to_customer_and_is_sale", "kind": "function", "name": "CustomerController._sale_belongs_to_customer_and_is_sale", "path": "modules/customer/controller.py", "summary": "Method CustomerController._sale_belongs_to_customer_and_is_sale.", "tags": null, "range": {"lines": [411, 418], "bytes": [15872, 16251]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._on_receive_payment", "kind": "function", "name": "CustomerController._on_receive_payment", "path": "modules/customer/controller.py", "summary": "Method CustomerController._on_receive_payment.", "tags": null, "range": {"lines": [422, 481], "bytes": [16281, 18686]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._on_record_advance", "kind": "function", "name": "CustomerController._on_record_advance", "path": "modules/customer/controller.py", "summary": "Method CustomerController._on_record_advance.", "tags": null, "range": {"lines": [485, 514], "bytes": [18734, 19803]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._on_apply_advance", "kind": "function", "name": "CustomerController._on_apply_advance", "path": "modules/customer/controller.py", "summary": "Method CustomerController._on_apply_advance.", "tags": null, "range": {"lines": [518, 550], "bytes": [19841, 21109]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._on_update_clearing", "kind": "function", "name": "CustomerController._on_update_clearing", "path": "modules/customer/controller.py", "summary": "Optional handler for a 'Update Clearing' toolbar button if your view provides it. Implement a tiny prompt dialog to collect payment_id, state, cleared_date, notes.", "tags": null, "range": {"lines": [554, 596], "bytes": [21157, 23003]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "sym:modules/customer/controller.py:CustomerController._on_payment_history", "kind": "function", "name": "CustomerController._on_payment_history", "path": "modules/customer/controller.py", "summary": "Method CustomerController._on_payment_history.", "tags": null, "range": {"lines": [600, 621], "bytes": [23042, 23911]}, "parent": "sym:modules/customer/controller.py:CustomerController"}
{"id": "pkg:base_module", "kind": "pkg", "name": "base_module", "path": null, "summary": "External package 'base_module' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomersRepo", "kind": "pkg", "name": "CustomersRepo", "path": null, "summary": "External package 'CustomersRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerView", "kind": "pkg", "name": "CustomerView", "path": null, "summary": "External package 'CustomerView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomersTableModel", "kind": "pkg", "name": "CustomersTableModel", "path": null, "summary": "External package 'CustomersTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QSortFilterProxyModel", "kind": "pkg", "name": "QSortFilterProxyModel", "path": null, "summary": "External package 'QSortFilterProxyModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sel", "kind": "pkg", "name": "sel", "path": null, "summary": "External package 'sel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QRegularExpression", "kind": "pkg", "name": "QRegularExpression", "path": null, "summary": "External package 'QRegularExpression' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:selectedRows", "kind": "pkg", "name": "selectedRows", "path": null, "summary": "External package 'selectedRows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:payload", "kind": "pkg", "name": "payload", "path": null, "summary": "External package 'payload' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:info", "kind": "pkg", "name": "info", "path": null, "summary": "External package 'info' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dotted", "kind": "pkg", "name": "dotted", "path": null, "summary": "External package 'dotted' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerForm", "kind": "pkg", "name": "CustomerForm", "path": null, "summary": "External package 'CustomerForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:record_customer_advance", "kind": "pkg", "name": "record_customer_advance", "path": null, "summary": "External package 'record_customer_advance' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:apply_customer_advance", "kind": "pkg", "name": "apply_customer_advance", "path": null, "summary": "External package 'apply_customer_advance' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:prompt_update", "kind": "pkg", "name": "prompt_update", "path": null, "summary": "External package 'prompt_update' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:update_receipt_clearing", "kind": "pkg", "name": "update_receipt_clearing", "path": null, "summary": "External package 'update_receipt_clearing' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:open_payment_history", "kind": "pkg", "name": "open_payment_history", "path": null, "summary": "External package 'open_payment_history' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/details.py", "kind": "module", "name": "modules.customer.details", "path": "modules/customer/details.py", "summary": "Module modules.customer.details.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/details.py:CustomerDetails", "kind": "class", "name": "CustomerDetails", "path": "modules/customer/details.py", "summary": "Class CustomerDetails.", "tags": null, "range": {"lines": [4, 106], "bytes": [85, 4025]}, "parent": "mod:modules/customer/details.py"}
{"id": "sym:modules/customer/details.py:CustomerDetails.__init__", "kind": "function", "name": "CustomerDetails.__init__", "path": "modules/customer/details.py", "summary": "Method CustomerDetails.__init__.", "tags": null, "range": {"lines": [5, 42], "bytes": [117, 1638]}, "parent": "sym:modules/customer/details.py:CustomerDetails"}
{"id": "sym:modules/customer/details.py:CustomerDetails._fmt_money", "kind": "function", "name": "CustomerDetails._fmt_money", "path": "modules/customer/details.py", "summary": "Method CustomerDetails._fmt_money.", "tags": null, "range": {"lines": [47, 53], "bytes": [1706, 1892]}, "parent": "sym:modules/customer/details.py:CustomerDetails"}
{"id": "sym:modules/customer/details.py:CustomerDetails._fmt_text", "kind": "function", "name": "CustomerDetails._fmt_text", "path": "modules/customer/details.py", "summary": "Method CustomerDetails._fmt_text.", "tags": null, "range": {"lines": [56, 57], "bytes": [1911, 2003]}, "parent": "sym:modules/customer/details.py:CustomerDetails"}
{"id": "sym:modules/customer/details.py:CustomerDetails.clear", "kind": "function", "name": "CustomerDetails.clear", "path": "modules/customer/details.py", "summary": "Method CustomerDetails.clear.", "tags": null, "range": {"lines": [61, 72], "bytes": [2049, 2449]}, "parent": "sym:modules/customer/details.py:CustomerDetails"}
{"id": "sym:modules/customer/details.py:CustomerDetails.set_data", "kind": "function", "name": "CustomerDetails.set_data", "path": "modules/customer/details.py", "summary": "Expects an optional payload dict (from controller) containing:   - customer_id, name, contact_info, address   - is_active (0/1)   - credit_balance (float)   - last_sale_date (YYYY-MM-DD or None)   - last_payment_date (YYYY-MM-DD or None)   - open_due_sum (float)  # sum over sales: total − paid − applied advances All f…", "tags": null, "range": {"lines": [74, 106], "bytes": [2450, 4025]}, "parent": "sym:modules/customer/details.py:CustomerDetails"}
{"id": "pkg:QGroupBox", "kind": "pkg", "name": "QGroupBox", "path": null, "summary": "External package 'QGroupBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QFormLayout", "kind": "pkg", "name": "QFormLayout", "path": null, "summary": "External package 'QFormLayout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:f_basic", "kind": "pkg", "name": "f_basic", "path": null, "summary": "External package 'f_basic' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:f_fin", "kind": "pkg", "name": "f_fin", "path": null, "summary": "External package 'f_fin' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/form.py", "kind": "module", "name": "modules.customer.form", "path": "modules/customer/form.py", "summary": "Module modules.customer.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/form.py:CustomerForm", "kind": "class", "name": "CustomerForm", "path": "modules/customer/form.py", "summary": "Customer create/edit form.  Enhancements:   - Active toggle (schema: customers.is_active) — defaults to ON.   - Required fields: name, contact info.   - Whitespace normalization: trims and tidies multi-line inputs.   - Optional dedup hint: pass a `dup_check` callable to warn if an active     customer with the same nam…", "tags": null, "range": {"lines": [20, 164], "bytes": [300, 5370]}, "parent": "mod:modules/customer/form.py"}
{"id": "sym:modules/customer/form.py:CustomerForm.__init__", "kind": "function", "name": "CustomerForm.__init__", "path": "modules/customer/form.py", "summary": "Method CustomerForm.__init__.", "tags": null, "range": {"lines": [40, 88], "bytes": [1141, 2819]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "sym:modules/customer/form.py:CustomerForm._collapse_spaces", "kind": "function", "name": "CustomerForm._collapse_spaces", "path": "modules/customer/form.py", "summary": "Method CustomerForm._collapse_spaces.", "tags": null, "range": {"lines": [93, 95], "bytes": [2887, 3050]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "sym:modules/customer/form.py:CustomerForm._norm_multiline", "kind": "function", "name": "CustomerForm._norm_multiline", "path": "modules/customer/form.py", "summary": "Normalize multi-line text:   - strip each line   - collapse runs of spaces on each line   - remove leading/trailing blank lines", "tags": null, "range": {"lines": [97, 112], "bytes": [3051, 3615]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "sym:modules/customer/form.py:CustomerForm.get_payload", "kind": "function", "name": "CustomerForm.get_payload", "path": "modules/customer/form.py", "summary": "Method CustomerForm.get_payload.", "tags": null, "range": {"lines": [116, 154], "bytes": [3661, 5171]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "sym:modules/customer/form.py:CustomerForm.accept", "kind": "function", "name": "CustomerForm.accept", "path": "modules/customer/form.py", "summary": "Method CustomerForm.accept.", "tags": null, "range": {"lines": [156, 161], "bytes": [5172, 5317]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "sym:modules/customer/form.py:CustomerForm.payload", "kind": "function", "name": "CustomerForm.payload", "path": "modules/customer/form.py", "summary": "Method CustomerForm.payload.", "tags": null, "range": {"lines": [163, 164], "bytes": [5318, 5370]}, "parent": "sym:modules/customer/form.py:CustomerForm"}
{"id": "pkg:re", "kind": "pkg", "name": "re", "path": null, "summary": "External package 're' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QPlainTextEdit", "kind": "pkg", "name": "QPlainTextEdit", "path": null, "summary": "External package 'QPlainTextEdit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QCheckBox", "kind": "pkg", "name": "QCheckBox", "path": null, "summary": "External package 'QCheckBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QDialogButtonBox", "kind": "pkg", "name": "QDialogButtonBox", "path": null, "summary": "External package 'QDialogButtonBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:initial", "kind": "pkg", "name": "initial", "path": null, "summary": "External package 'initial' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:text", "kind": "pkg", "name": "text", "path": null, "summary": "External package 'text' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:non_empty", "kind": "pkg", "name": "non_empty", "path": null, "summary": "External package 'non_empty' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/history.py", "kind": "module", "name": "modules.customer.history", "path": "modules/customer/history.py", "summary": "Module modules.customer.history.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/history.py:CustomerHistoryService", "kind": "class", "name": "CustomerHistoryService", "path": "modules/customer/history.py", "summary": "Presenter/service for assembling customer financial history for the UI.  Pulls data from:   - sales (doc_type='sale') + sale_items (+ products, uoms) and sale_detailed_totals view   - sale_payments   - customer_advances (+ v_customer_advance_balance)  Returns structured dictionaries to keep the UI layer simple.", "tags": null, "range": {"lines": [8, 315], "bytes": [123, 11721]}, "parent": "mod:modules/customer/history.py"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.__init__", "kind": "function", "name": "CustomerHistoryService.__init__", "path": "modules/customer/history.py", "summary": "Method CustomerHistoryService.__init__.", "tags": null, "range": {"lines": [20, 21], "bytes": [507, 588]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService._connect", "kind": "function", "name": "CustomerHistoryService._connect", "path": "modules/customer/history.py", "summary": "Method CustomerHistoryService._connect.", "tags": null, "range": {"lines": [27, 31], "bytes": [762, 956]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService._rowdict", "kind": "function", "name": "CustomerHistoryService._rowdict", "path": "modules/customer/history.py", "summary": "Method CustomerHistoryService._rowdict.", "tags": null, "range": {"lines": [34, 35], "bytes": [975, 1097]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService._rowsdict", "kind": "function", "name": "CustomerHistoryService._rowsdict", "path": "modules/customer/history.py", "summary": "Method CustomerHistoryService._rowsdict.", "tags": null, "range": {"lines": [38, 39], "bytes": [1116, 1223]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService._clamp_non_negative", "kind": "function", "name": "CustomerHistoryService._clamp_non_negative", "path": "modules/customer/history.py", "summary": "Method CustomerHistoryService._clamp_non_negative.", "tags": null, "range": {"lines": [42, 43], "bytes": [1242, 1325]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.sales_with_items", "kind": "function", "name": "CustomerHistoryService.sales_with_items", "path": "modules/customer/history.py", "summary": "Returns sales for the customer with header totals (both header + calc view), computed remaining due, and an embedded list of line items.  remaining_due formula:     remaining_due = calculated_total_amount - paid_amount - advance_payment_applied   (clamped at >= 0)", "tags": null, "range": {"lines": [49, 133], "bytes": [1500, 4937]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.sale_payments", "kind": "function", "name": "CustomerHistoryService.sale_payments", "path": "modules/customer/history.py", "summary": "Returns sale payments for all sales of the given customer (chronological).", "tags": null, "range": {"lines": [135, 165], "bytes": [4938, 6058]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.advances_ledger", "kind": "function", "name": "CustomerHistoryService.advances_ledger", "path": "modules/customer/history.py", "summary": "Returns:   - 'entries': the raw customer_advances entries for the customer   - 'balance': current balance from v_customer_advance_balance", "tags": null, "range": {"lines": [167, 204], "bytes": [6059, 7280]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.timeline", "kind": "function", "name": "CustomerHistoryService.timeline", "path": "modules/customer/history.py", "summary": "Builds a unified chronological timeline of financial events for the customer:   - 'sale'            (amount = calculated_total_amount, remaining_due included)   - 'receipt'         (sale payment; amount = payment amount > 0)   - 'advance'         (customer deposit/credit; amount = +ve)   - 'advance_applied' (credit ap…", "tags": null, "range": {"lines": [206, 266], "bytes": [7281, 9900]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.overview", "kind": "function", "name": "CustomerHistoryService.overview", "path": "modules/customer/history.py", "summary": "High-level snapshot for the UI:   - balance (credit) from v_customer_advance_balance   - sales count & open due sum (based on calculated totals)   - last activity dates", "tags": null, "range": {"lines": [268, 292], "bytes": [9901, 11004]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:CustomerHistoryService.full_history", "kind": "function", "name": "CustomerHistoryService.full_history", "path": "modules/customer/history.py", "summary": "Complete payload for UI screens:   - sales (with items & remaining due)   - payments   - advances (+balance)   - timeline (merged)   - overview", "tags": null, "range": {"lines": [294, 315], "bytes": [11005, 11721]}, "parent": "sym:modules/customer/history.py:CustomerHistoryService"}
{"id": "sym:modules/customer/history.py:get_customer_history_service", "kind": "function", "name": "get_customer_history_service", "path": "modules/customer/history.py", "summary": "Function get_customer_history_service.", "tags": null, "range": {"lines": [319, 320], "bytes": [11745, 11869]}, "parent": "mod:modules/customer/history.py"}
{"id": "pkg:items_by_sale", "kind": "pkg", "name": "items_by_sale", "path": null, "summary": "External package 'items_by_sale' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:result", "kind": "pkg", "name": "result", "path": null, "summary": "External package 'result' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:events", "kind": "pkg", "name": "events", "path": null, "summary": "External package 'events' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:a", "kind": "pkg", "name": "a", "path": null, "summary": "External package 'a' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:order", "kind": "pkg", "name": "order", "path": null, "summary": "External package 'order' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:e", "kind": "pkg", "name": "e", "path": null, "summary": "External package 'e' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/model.py", "kind": "module", "name": "modules.customer.model", "path": "modules/customer/model.py", "summary": "Module modules.customer.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/model.py:CustomersTableModel", "kind": "class", "name": "CustomersTableModel", "path": "modules/customer/model.py", "summary": "Table model for customers with an extra 'Active' column.  - Backward compatible: if a Customer row lacks `is_active`, we assume active (1). - Exposes a custom role (IS_ACTIVE_ROLE) to help external views delegate styling/filtering.", "tags": null, "range": {"lines": [5, 87], "bytes": [127, 2857]}, "parent": "mod:modules/customer/model.py"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.__init__", "kind": "function", "name": "CustomersTableModel.__init__", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.__init__.", "tags": null, "range": {"lines": [19, 21], "bytes": [622, 721]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.rowCount", "kind": "function", "name": "CustomersTableModel.rowCount", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.rowCount.", "tags": null, "range": {"lines": [25, 26], "bytes": [802, 879]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.columnCount", "kind": "function", "name": "CustomersTableModel.columnCount", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.columnCount.", "tags": null, "range": {"lines": [28, 29], "bytes": [880, 962]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel._active_text", "kind": "function", "name": "CustomersTableModel._active_text", "path": "modules/customer/model.py", "summary": "Produce human-friendly Active/Inactive text. Falls back to 'Active' when the attribute is missing (old dataclass).", "tags": null, "range": {"lines": [31, 41], "bytes": [963, 1434]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel._active_flag", "kind": "function", "name": "CustomersTableModel._active_flag", "path": "modules/customer/model.py", "summary": "Return 1 or 0 for active flag.", "tags": null, "range": {"lines": [43, 49], "bytes": [1435, 1706]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.data", "kind": "function", "name": "CustomersTableModel.data", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.data.", "tags": null, "range": {"lines": [51, 72], "bytes": [1707, 2332]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.headerData", "kind": "function", "name": "CustomersTableModel.headerData", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.headerData.", "tags": null, "range": {"lines": [74, 77], "bytes": [2333, 2573]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.at", "kind": "function", "name": "CustomersTableModel.at", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.at.", "tags": null, "range": {"lines": [81, 82], "bytes": [2654, 2725]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "sym:modules/customer/model.py:CustomersTableModel.replace", "kind": "function", "name": "CustomersTableModel.replace", "path": "modules/customer/model.py", "summary": "Method CustomersTableModel.replace.", "tags": null, "range": {"lines": [84, 87], "bytes": [2726, 2857]}, "parent": "sym:modules/customer/model.py:CustomersTableModel"}
{"id": "pkg:QModelIndex", "kind": "pkg", "name": "QModelIndex", "path": null, "summary": "External package 'QModelIndex' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:index", "kind": "pkg", "name": "index", "path": null, "summary": "External package 'index' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/payment_history_view.py", "kind": "module", "name": "modules.customer.payment_history_view", "path": "modules/customer/payment_history_view.py", "summary": "Module modules.customer.payment_history_view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog", "kind": "class", "name": "_CustomerHistoryDialog", "path": "modules/customer/payment_history_view.py", "summary": "Thin, read-only viewer for history payloads. Creates tabs automatically for each list[dict] in the payload.", "tags": null, "range": {"lines": [64, 216], "bytes": [1589, 7328]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog.__init__", "kind": "function", "name": "_CustomerHistoryDialog.__init__", "path": "modules/customer/payment_history_view.py", "summary": "Method _CustomerHistoryDialog.__init__.", "tags": null, "range": {"lines": [82, 113], "bytes": [2274, 3406]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog._add_header_actions", "kind": "function", "name": "_CustomerHistoryDialog._add_header_actions", "path": "modules/customer/payment_history_view.py", "summary": "Method _CustomerHistoryDialog._add_header_actions.", "tags": null, "range": {"lines": [117, 122], "bytes": [3488, 3834]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog._resize_current_tab_columns", "kind": "function", "name": "_CustomerHistoryDialog._resize_current_tab_columns", "path": "modules/customer/payment_history_view.py", "summary": "Method _CustomerHistoryDialog._resize_current_tab_columns.", "tags": null, "range": {"lines": [124, 127], "bytes": [3835, 3993]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog._build_tabs_from_history", "kind": "function", "name": "_CustomerHistoryDialog._build_tabs_from_history", "path": "modules/customer/payment_history_view.py", "summary": "Method _CustomerHistoryDialog._build_tabs_from_history.", "tags": null, "range": {"lines": [129, 169], "bytes": [3994, 5649]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog._build_summary_widget", "kind": "function", "name": "_CustomerHistoryDialog._build_summary_widget", "path": "modules/customer/payment_history_view.py", "summary": "Very light summary: counts per table and presence of known keys. (Avoids making assumptions about sign conventions.)", "tags": null, "range": {"lines": [171, 209], "bytes": [5650, 7060]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog._pretty_title", "kind": "function", "name": "_CustomerHistoryDialog._pretty_title", "path": "modules/customer/payment_history_view.py", "summary": "Method _CustomerHistoryDialog._pretty_title.", "tags": null, "range": {"lines": [212, 216], "bytes": [7079, 7328]}, "parent": "sym:modules/customer/payment_history_view.py:_CustomerHistoryDialog"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage", "kind": "class", "name": "_TablePage", "path": "modules/customer/payment_history_view.py", "summary": "Displays a list[dict] in a QTableWidget (read-only). Columns are inferred from union of keys in the first N rows.", "tags": null, "range": {"lines": [222, 290], "bytes": [7407, 10042]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage.__init__", "kind": "function", "name": "_TablePage.__init__", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage.__init__.", "tags": null, "range": {"lines": [228, 233], "bytes": [7573, 7872]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage._build", "kind": "function", "name": "_TablePage._build", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage._build.", "tags": null, "range": {"lines": [235, 259], "bytes": [7873, 8848]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage._populate", "kind": "function", "name": "_TablePage._populate", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage._populate.", "tags": null, "range": {"lines": [261, 274], "bytes": [8849, 9585]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage.resize_columns", "kind": "function", "name": "_TablePage.resize_columns", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage.resize_columns.", "tags": null, "range": {"lines": [276, 277], "bytes": [9586, 9669]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage._pretty_header", "kind": "function", "name": "_TablePage._pretty_header", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage._pretty_header.", "tags": null, "range": {"lines": [280, 282], "bytes": [9688, 9865]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_TablePage._fmt", "kind": "function", "name": "_TablePage._fmt", "path": "modules/customer/payment_history_view.py", "summary": "Method _TablePage._fmt.", "tags": null, "range": {"lines": [285, 290], "bytes": [9884, 10042]}, "parent": "sym:modules/customer/payment_history_view.py:_TablePage"}
{"id": "sym:modules/customer/payment_history_view.py:_t", "kind": "function", "name": "_t", "path": "modules/customer/payment_history_view.py", "summary": "Function _t.", "tags": null, "range": {"lines": [29, 30], "bytes": [652, 688]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:open_customer_history", "kind": "function", "name": "open_customer_history", "path": "modules/customer/payment_history_view.py", "summary": "Local, read-only window for customer payment/advance history.  Parameters ---------- customer_id : int     Customer identifier (display-only). history : dict     Payload produced by CustomerHistoryService.full_history(customer_id).     This viewer is resilient: it will create one tab per key whose value is a list[dict…", "tags": null, "range": {"lines": [36, 58], "bytes": [767, 1514]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_sort_key", "kind": "function", "name": "_sort_key", "path": "modules/customer/payment_history_view.py", "summary": "Function _sort_key.", "tags": null, "range": {"lines": [141, 147], "bytes": [4510, 4823]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_collect_headers", "kind": "function", "name": "_collect_headers", "path": "modules/customer/payment_history_view.py", "summary": "Function _collect_headers.", "tags": null, "range": {"lines": [296, 304], "bytes": [10120, 10393]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_is_number", "kind": "function", "name": "_is_number", "path": "modules/customer/payment_history_view.py", "summary": "Function _is_number.", "tags": null, "range": {"lines": [307, 312], "bytes": [10395, 10516]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "sym:modules/customer/payment_history_view.py:_looks_like_date", "kind": "function", "name": "_looks_like_date", "path": "modules/customer/payment_history_view.py", "summary": "Function _looks_like_date.", "tags": null, "range": {"lines": [315, 320], "bytes": [10518, 10768]}, "parent": "mod:modules/customer/payment_history_view.py"}
{"id": "pkg:_CustomerHistoryDialog", "kind": "pkg", "name": "_CustomerHistoryDialog", "path": null, "summary": "External package '_CustomerHistoryDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:outer", "kind": "pkg", "name": "outer", "path": null, "summary": "External package 'outer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTabWidget", "kind": "pkg", "name": "QTabWidget", "path": null, "summary": "External package 'QTabWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:act_resize", "kind": "pkg", "name": "act_resize", "path": null, "summary": "External package 'act_resize' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:all", "kind": "pkg", "name": "all", "path": null, "summary": "External package 'all' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tables", "kind": "pkg", "name": "tables", "path": null, "summary": "External package 'tables' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:extras", "kind": "pkg", "name": "extras", "path": null, "summary": "External package 'extras' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:key", "kind": "pkg", "name": "key", "path": null, "summary": "External package 'key' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_TablePage", "kind": "pkg", "name": "_TablePage", "path": null, "summary": "External package '_TablePage' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lay", "kind": "pkg", "name": "lay", "path": null, "summary": "External package 'lay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:known_sets", "kind": "pkg", "name": "known_sets", "path": null, "summary": "External package 'known_sets' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lab", "kind": "pkg", "name": "lab", "path": null, "summary": "External package 'lab' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:k", "kind": "pkg", "name": "k", "path": null, "summary": "External package 'k' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTableWidget", "kind": "pkg", "name": "QTableWidget", "path": null, "summary": "External package 'QTableWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setVisible", "kind": "pkg", "name": "setVisible", "path": null, "summary": "External package 'setVisible' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hh", "kind": "pkg", "name": "hh", "path": null, "summary": "External package 'hh' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hint", "kind": "pkg", "name": "hint", "path": null, "summary": "External package 'hint' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTableWidgetItem", "kind": "pkg", "name": "QTableWidgetItem", "path": null, "summary": "External package 'QTableWidgetItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:item", "kind": "pkg", "name": "item", "path": null, "summary": "External package 'item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:seen", "kind": "pkg", "name": "seen", "path": null, "summary": "External package 'seen' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:headers", "kind": "pkg", "name": "headers", "path": null, "summary": "External package 'headers' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/receipt_dialog.py", "kind": "module", "name": "modules.customer.receipt_dialog", "path": "modules/customer/receipt_dialog.py", "summary": "Module modules.customer.receipt_dialog.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog", "kind": "class", "name": "_CustomerMoneyDialog", "path": "modules/customer/receipt_dialog.py", "summary": "One dialog with three pages:   - Receipt (existing behavior preserved)   - Record Advance   - Apply Advance Returns a payload tailored to the selected mode.", "tags": null, "range": {"lines": [130, 920], "bytes": [3235, 36812]}, "parent": "mod:modules/customer/receipt_dialog.py"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog.__init__", "kind": "function", "name": "_CustomerMoneyDialog.__init__", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog.__init__.", "tags": null, "range": {"lines": [143, 200], "bytes": [3528, 6650]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_ui", "kind": "function", "name": "_CustomerMoneyDialog._build_ui", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_ui.", "tags": null, "range": {"lines": [203, 248], "bytes": [6694, 8519]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_receipt_page", "kind": "function", "name": "_CustomerMoneyDialog._build_receipt_page", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_receipt_page.", "tags": null, "range": {"lines": [251, 364], "bytes": [8581, 13231]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_advance_page", "kind": "function", "name": "_CustomerMoneyDialog._build_advance_page", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_advance_page.", "tags": null, "range": {"lines": [367, 403], "bytes": [13280, 14789]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_apply_page", "kind": "function", "name": "_CustomerMoneyDialog._build_apply_page", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_apply_page.", "tags": null, "range": {"lines": [406, 448], "bytes": [14837, 16630]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._on_tab_changed", "kind": "function", "name": "_CustomerMoneyDialog._on_tab_changed", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._on_tab_changed.", "tags": null, "range": {"lines": [451, 457], "bytes": [16670, 16929]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._sync_window_title", "kind": "function", "name": "_CustomerMoneyDialog._sync_window_title", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._sync_window_title.", "tags": null, "range": {"lines": [459, 465], "bytes": [16930, 17285]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._load_sales", "kind": "function", "name": "_CustomerMoneyDialog._load_sales", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._load_sales.", "tags": null, "range": {"lines": [468, 516], "bytes": [17327, 19434]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._load_bank_accounts", "kind": "function", "name": "_CustomerMoneyDialog._load_bank_accounts", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._load_bank_accounts.", "tags": null, "range": {"lines": [518, 537], "bytes": [19435, 20294]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._lock_sale_if_needed", "kind": "function", "name": "_CustomerMoneyDialog._lock_sale_if_needed", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._lock_sale_if_needed.", "tags": null, "range": {"lines": [539, 560], "bytes": [20295, 21375]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._apply_prefills_receipt", "kind": "function", "name": "_CustomerMoneyDialog._apply_prefills_receipt", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._apply_prefills_receipt.", "tags": null, "range": {"lines": [563, 601], "bytes": [21433, 23152]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._on_method_changed", "kind": "function", "name": "_CustomerMoneyDialog._on_method_changed", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._on_method_changed.", "tags": null, "range": {"lines": [604, 637], "bytes": [23204, 24477]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._on_clearing_changed", "kind": "function", "name": "_CustomerMoneyDialog._on_clearing_changed", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._on_clearing_changed.", "tags": null, "range": {"lines": [639, 645], "bytes": [24478, 24773]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._update_hint", "kind": "function", "name": "_CustomerMoneyDialog._update_hint", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._update_hint.", "tags": null, "range": {"lines": [647, 666], "bytes": [24774, 26044]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._update_remaining", "kind": "function", "name": "_CustomerMoneyDialog._update_remaining", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._update_remaining.", "tags": null, "range": {"lines": [668, 676], "bytes": [26045, 26431]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._update_apply_remaining", "kind": "function", "name": "_CustomerMoneyDialog._update_apply_remaining", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._update_apply_remaining.", "tags": null, "range": {"lines": [679, 693], "bytes": [26479, 27161]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_live", "kind": "function", "name": "_CustomerMoneyDialog._validate_live", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_live.", "tags": null, "range": {"lines": [696, 701], "bytes": [27211, 27453]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_receipt", "kind": "function", "name": "_CustomerMoneyDialog._validate_receipt", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_receipt.", "tags": null, "range": {"lines": [703, 760], "bytes": [27454, 30178]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_live_advance", "kind": "function", "name": "_CustomerMoneyDialog._validate_live_advance", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_live_advance.", "tags": null, "range": {"lines": [763, 768], "bytes": [30228, 30478]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_advance", "kind": "function", "name": "_CustomerMoneyDialog._validate_advance", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_advance.", "tags": null, "range": {"lines": [770, 775], "bytes": [30479, 30783]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_live_apply", "kind": "function", "name": "_CustomerMoneyDialog._validate_live_apply", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_live_apply.", "tags": null, "range": {"lines": [778, 783], "bytes": [30839, 31083]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._validate_apply", "kind": "function", "name": "_CustomerMoneyDialog._validate_apply", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._validate_apply.", "tags": null, "range": {"lines": [785, 818], "bytes": [31084, 32456]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._on_save", "kind": "function", "name": "_CustomerMoneyDialog._on_save", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._on_save.", "tags": null, "range": {"lines": [821, 839], "bytes": [32490, 33202]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog.payload", "kind": "function", "name": "_CustomerMoneyDialog.payload", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog.payload.", "tags": null, "range": {"lines": [841, 842], "bytes": [33203, 33273]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._warn", "kind": "function", "name": "_CustomerMoneyDialog._warn", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._warn.", "tags": null, "range": {"lines": [845, 847], "bytes": [33310, 33508]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._current_bank_id", "kind": "function", "name": "_CustomerMoneyDialog._current_bank_id", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._current_bank_id.", "tags": null, "range": {"lines": [849, 851], "bytes": [33509, 33669]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._set_required_label", "kind": "function", "name": "_CustomerMoneyDialog._set_required_label", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._set_required_label.", "tags": null, "range": {"lines": [853, 858], "bytes": [33670, 33945]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._set_date_from_str", "kind": "function", "name": "_CustomerMoneyDialog._set_date_from_str", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._set_date_from_str.", "tags": null, "range": {"lines": [860, 865], "bytes": [33946, 34155]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._has_date", "kind": "function", "name": "_CustomerMoneyDialog._has_date", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._has_date.", "tags": null, "range": {"lines": [867, 868], "bytes": [34156, 34285]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._clear_date", "kind": "function", "name": "_CustomerMoneyDialog._clear_date", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._clear_date.", "tags": null, "range": {"lines": [870, 871], "bytes": [34286, 34380]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_payload_receipt", "kind": "function", "name": "_CustomerMoneyDialog._build_payload_receipt", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_payload_receipt.", "tags": null, "range": {"lines": [874, 898], "bytes": [34424, 35777]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_payload_advance", "kind": "function", "name": "_CustomerMoneyDialog._build_payload_advance", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_payload_advance.", "tags": null, "range": {"lines": [900, 908], "bytes": [35778, 36233]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog._build_payload_apply", "kind": "function", "name": "_CustomerMoneyDialog._build_payload_apply", "path": "modules/customer/receipt_dialog.py", "summary": "Method _CustomerMoneyDialog._build_payload_apply.", "tags": null, "range": {"lines": [910, 920], "bytes": [36234, 36812]}, "parent": "sym:modules/customer/receipt_dialog.py:_CustomerMoneyDialog"}
{"id": "sym:modules/customer/receipt_dialog.py:_t", "kind": "function", "name": "_t", "path": "modules/customer/receipt_dialog.py", "summary": "Function _t.", "tags": null, "range": {"lines": [35, 36], "bytes": [800, 836]}, "parent": "mod:modules/customer/receipt_dialog.py"}
{"id": "sym:modules/customer/receipt_dialog.py:open_payment_or_advance_form", "kind": "function", "name": "open_payment_or_advance_form", "path": "modules/customer/receipt_dialog.py", "summary": "Unified money-in dialog for customers with three modes:   - \"receipt\": capture sale payment → payload for SalePaymentsRepo.record_payment(...)   - \"advance\": record customer advance → payload for CustomerAdvancesRepo.grant_credit(...)   - \"apply_advance\": apply advance to a sale → payload for CustomerAdvancesRepo.appl…", "tags": null, "range": {"lines": [84, 108], "bytes": [1813, 2767]}, "parent": "mod:modules/customer/receipt_dialog.py"}
{"id": "sym:modules/customer/receipt_dialog.py:open_receipt_form", "kind": "function", "name": "open_receipt_form", "path": "modules/customer/receipt_dialog.py", "summary": "Backward-compatible API for legacy callers.", "tags": null, "range": {"lines": [111, 125], "bytes": [2769, 3117]}, "parent": "mod:modules/customer/receipt_dialog.py"}
{"id": "sym:modules/customer/receipt_dialog.py:date_or_none", "kind": "function", "name": "date_or_none", "path": "modules/customer/receipt_dialog.py", "summary": "Function date_or_none.", "tags": null, "range": {"lines": [877, 880], "bytes": [34527, 34702]}, "parent": "mod:modules/customer/receipt_dialog.py"}
{"id": "pkg:_CustomerMoneyDialog", "kind": "pkg", "name": "_CustomerMoneyDialog", "path": null, "summary": "External package '_CustomerMoneyDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTabBar", "kind": "pkg", "name": "QTabBar", "path": null, "summary": "External package 'QTabBar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QKeySequence", "kind": "pkg", "name": "QKeySequence", "path": null, "summary": "External package 'QKeySequence' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QComboBox", "kind": "pkg", "name": "QComboBox", "path": null, "summary": "External package 'QComboBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_sale", "kind": "pkg", "name": "lbl_sale", "path": null, "summary": "External package 'lbl_sale' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QDoubleSpinBox", "kind": "pkg", "name": "QDoubleSpinBox", "path": null, "summary": "External package 'QDoubleSpinBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_amount", "kind": "pkg", "name": "lbl_amount", "path": null, "summary": "External package 'lbl_amount' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QDateEdit", "kind": "pkg", "name": "QDateEdit", "path": null, "summary": "External package 'QDateEdit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QDate", "kind": "pkg", "name": "QDate", "path": null, "summary": "External package 'QDate' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_bank", "kind": "pkg", "name": "lbl_bank", "path": null, "summary": "External package 'lbl_bank' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_insno", "kind": "pkg", "name": "lbl_insno", "path": null, "summary": "External package 'lbl_insno' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QIntValidator", "kind": "pkg", "name": "QIntValidator", "path": null, "summary": "External package 'QIntValidator' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_sale2", "kind": "pkg", "name": "lbl_sale2", "path": null, "summary": "External package 'lbl_sale2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:titles", "kind": "pkg", "name": "titles", "path": null, "summary": "External package 'titles' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:acc", "kind": "pkg", "name": "acc", "path": null, "summary": "External package 'acc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:METHODS", "kind": "pkg", "name": "METHODS", "path": null, "summary": "External package 'METHODS' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:INSTRUMENT_TYPES", "kind": "pkg", "name": "INSTRUMENT_TYPES", "path": null, "summary": "External package 'INSTRUMENT_TYPES' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CLEARING_STATES", "kind": "pkg", "name": "CLEARING_STATES", "path": null, "summary": "External package 'CLEARING_STATES' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:METHOD_TO_FORCED_INSTRUMENT", "kind": "pkg", "name": "METHOD_TO_FORCED_INSTRUMENT", "path": null, "summary": "External package 'METHOD_TO_FORCED_INSTRUMENT' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:METHOD_TO_DEFAULT_CLEARING", "kind": "pkg", "name": "METHOD_TO_DEFAULT_CLEARING", "path": null, "summary": "External package 'METHOD_TO_DEFAULT_CLEARING' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sale_dict", "kind": "pkg", "name": "sale_dict", "path": null, "summary": "External package 'sale_dict' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:toString", "kind": "pkg", "name": "toString", "path": null, "summary": "External package 'toString' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:label", "kind": "pkg", "name": "label", "path": null, "summary": "External package 'label' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:map", "kind": "pkg", "name": "map", "path": null, "summary": "External package 'map' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:edit", "kind": "pkg", "name": "edit", "path": null, "summary": "External package 'edit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/customer/view.py", "kind": "module", "name": "modules.customer.view", "path": "modules/customer/view.py", "summary": "Module modules.customer.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/customer/view.py:CustomerView", "kind": "class", "name": "CustomerView", "path": "modules/customer/view.py", "summary": "Customers view:   - Toolbar: Add, Edit, Receive Payment, Record Advance, Apply Advance, Payment History   - Search box + 'Show inactive' toggle   - Split: table (left) + tabs (right) -> Details / History", "tags": null, "range": {"lines": [18, 97], "bytes": [285, 3146]}, "parent": "mod:modules/customer/view.py"}
{"id": "sym:modules/customer/view.py:CustomerView.__init__", "kind": "function", "name": "CustomerView.__init__", "path": "modules/customer/view.py", "summary": "Method CustomerView.__init__.", "tags": null, "range": {"lines": [26, 97], "bytes": [551, 3146]}, "parent": "sym:modules/customer/view.py:CustomerView"}
{"id": "pkg:widgets", "kind": "pkg", "name": "widgets", "path": null, "summary": "External package 'widgets' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar", "kind": "pkg", "name": "bar", "path": null, "summary": "External package 'bar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QSplitter", "kind": "pkg", "name": "QSplitter", "path": null, "summary": "External package 'QSplitter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:TableView", "kind": "pkg", "name": "TableView", "path": null, "summary": "External package 'TableView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:split", "kind": "pkg", "name": "split", "path": null, "summary": "External package 'split' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerDetails", "kind": "pkg", "name": "CustomerDetails", "path": null, "summary": "External package 'CustomerDetails' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v_hist", "kind": "pkg", "name": "v_hist", "path": null, "summary": "External package 'v_hist' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/__init__.py", "kind": "module", "name": "modules.dashboard", "path": "modules/dashboard/__init__.py", "summary": "Module modules.dashboard.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/controller.py", "kind": "module", "name": "modules.dashboard.controller", "path": "modules/dashboard/controller.py", "summary": "Module modules.dashboard.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/dashboard/controller.py:DateRange", "kind": "class", "name": "DateRange", "path": "modules/dashboard/controller.py", "summary": "Class DateRange.", "tags": null, "range": {"lines": [21, 23], "bytes": [658, 749]}, "parent": "mod:modules/dashboard/controller.py"}
{"id": "sym:modules/dashboard/controller.py:DashboardController", "kind": "class", "name": "DashboardController", "path": "modules/dashboard/controller.py", "summary": "Owns the date context, coordinates repo <-> view, and emits navigation intents.  Signals you can hook in your MainWindow/App:   - open_create_sale(): ask the app to open the sales entry screen   - open_add_expense(): ask the app to open the expense dialog   - navigate_to_report(target: str, params: dict): route to an …", "tags": null, "range": {"lines": [28, 269], "bytes": [823, 10937]}, "parent": "mod:modules/dashboard/controller.py"}
{"id": "sym:modules/dashboard/controller.py:DashboardController.__init__", "kind": "function", "name": "DashboardController.__init__", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController.__init__.", "tags": null, "range": {"lines": [47, 58], "bytes": [1657, 2099]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._wire_view", "kind": "function", "name": "DashboardController._wire_view", "path": "modules/dashboard/controller.py", "summary": "Connect view events to controller actions. The DashboardView is expected to expose these signals:   - periodChanged(period_key: str, date_from: Optional[str], date_to: Optional[str])   - createSaleClicked()   - addExpenseClicked()   - kpiCardClicked(target: str)  # e.g., \"sales_total\", \"gross_profit\", etc.   - request…", "tags": null, "range": {"lines": [62, 88], "bytes": [2172, 3536]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController.on_period_changed", "kind": "function", "name": "DashboardController.on_period_changed", "path": "modules/dashboard/controller.py", "summary": "period_key in {\"today\",\"mtd\",\"last7\",\"custom\"}. If \"custom\", date_from/date_to are provided (or None).", "tags": null, "range": {"lines": [93, 99], "bytes": [3649, 4003]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._calc_period", "kind": "function", "name": "DashboardController._calc_period", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController._calc_period.", "tags": null, "range": {"lines": [101, 118], "bytes": [4004, 4782]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController.refresh", "kind": "function", "name": "DashboardController.refresh", "path": "modules/dashboard/controller.py", "summary": "Pull fresh data from repo for the current date range and push it to the view/widgets.", "tags": null, "range": {"lines": [123, 197], "bytes": [4877, 8085]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._on_create_sale", "kind": "function", "name": "DashboardController._on_create_sale", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController._on_create_sale.", "tags": null, "range": {"lines": [202, 204], "bytes": [8179, 8310]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._on_add_expense", "kind": "function", "name": "DashboardController._on_add_expense", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController._on_add_expense.", "tags": null, "range": {"lines": [207, 209], "bytes": [8323, 8432]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._on_kpi_clicked", "kind": "function", "name": "DashboardController._on_kpi_clicked", "path": "modules/dashboard/controller.py", "summary": "Route KPI card clicks to relevant reporting tabs with the current date range. Map your card IDs to report targets here.", "tags": null, "range": {"lines": [214, 232], "bytes": [8540, 9485]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._on_request_drilldown", "kind": "function", "name": "DashboardController._on_request_drilldown", "path": "modules/dashboard/controller.py", "summary": "Bubble up drilldown requests coming from the View or its sub-widgets. Ensures the current date range is present unless explicitly overridden.", "tags": null, "range": {"lines": [235, 243], "bytes": [9507, 9966]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController.widget", "kind": "function", "name": "DashboardController.widget", "path": "modules/dashboard/controller.py", "summary": "Return the main QWidget to embed in your window.", "tags": null, "range": {"lines": [247, 249], "bytes": [10042, 10169]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController.safe_repo_call", "kind": "function", "name": "DashboardController.safe_repo_call", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController.safe_repo_call.", "tags": null, "range": {"lines": [251, 255], "bytes": [10170, 10303]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "sym:modules/dashboard/controller.py:DashboardController._human_period", "kind": "function", "name": "DashboardController._human_period", "path": "modules/dashboard/controller.py", "summary": "Method DashboardController._human_period.", "tags": null, "range": {"lines": [257, 269], "bytes": [10304, 10937]}, "parent": "sym:modules/dashboard/controller.py:DashboardController"}
{"id": "pkg:DashboardRepo", "kind": "pkg", "name": "DashboardRepo", "path": null, "summary": "External package 'DashboardRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DashboardView", "kind": "pkg", "name": "DashboardView", "path": null, "summary": "External package 'DashboardView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:date", "kind": "pkg", "name": "date", "path": null, "summary": "External package 'date' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:today", "kind": "pkg", "name": "today", "path": null, "summary": "External package 'today' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DateRange", "kind": "pkg", "name": "DateRange", "path": null, "summary": "External package 'DateRange' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:d1", "kind": "pkg", "name": "d1", "path": null, "summary": "External package 'd1' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:d2", "kind": "pkg", "name": "d2", "path": null, "summary": "External package 'd2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/financial_overview_widget.py", "kind": "module", "name": "modules.dashboard.financial_overview_widget", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Module modules.dashboard.financial_overview_widget.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget", "kind": "class", "name": "FinancialOverviewWidget", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Left:  P&L mini (Sales, COGS, Expenses, Net) Right: AR/AP capsules and Low-Stock pill with a 'View' button.  Controller should call:     set_pl(sales, cogs, expenses, net)     set_ar_ap(ar, ap)     set_low_stock_count(n) and connect to:     view_low_stock_requested     ar_drilldown_requested     ap_drilldown_requested", "tags": null, "range": {"lines": [18, 117], "bytes": [358, 3670]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget.__init__", "kind": "function", "name": "FinancialOverviewWidget.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method FinancialOverviewWidget.__init__.", "tags": null, "range": {"lines": [36, 38], "bytes": [891, 994]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget._build_ui", "kind": "function", "name": "FinancialOverviewWidget._build_ui", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method FinancialOverviewWidget._build_ui.", "tags": null, "range": {"lines": [41, 102], "bytes": [1038, 3085]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget.set_pl", "kind": "function", "name": "FinancialOverviewWidget.set_pl", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method FinancialOverviewWidget.set_pl.", "tags": null, "range": {"lines": [105, 109], "bytes": [3137, 3410]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget.set_ar_ap", "kind": "function", "name": "FinancialOverviewWidget.set_ar_ap", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method FinancialOverviewWidget.set_ar_ap.", "tags": null, "range": {"lines": [111, 113], "bytes": [3411, 3546]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget.set_low_stock_count", "kind": "function", "name": "FinancialOverviewWidget.set_low_stock_count", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method FinancialOverviewWidget.set_low_stock_count.", "tags": null, "range": {"lines": [115, 117], "bytes": [3547, 3670]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:FinancialOverviewWidget"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_CardFrame", "kind": "class", "name": "_CardFrame", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _CardFrame.", "tags": null, "range": {"lines": [122, 134], "bytes": [3743, 4152]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_CardFrame.__init__", "kind": "function", "name": "_CardFrame.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _CardFrame.__init__.", "tags": null, "range": {"lines": [123, 134], "bytes": [3769, 4152]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_CardFrame"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_SectionTitle", "kind": "class", "name": "_SectionTitle", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _SectionTitle.", "tags": null, "range": {"lines": [137, 140], "bytes": [4154, 4327]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_SectionTitle.__init__", "kind": "function", "name": "_SectionTitle.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _SectionTitle.__init__.", "tags": null, "range": {"lines": [138, 140], "bytes": [4183, 4327]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_SectionTitle"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_Separator", "kind": "class", "name": "_Separator", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _Separator.", "tags": null, "range": {"lines": [143, 147], "bytes": [4329, 4498]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_Separator.__init__", "kind": "function", "name": "_Separator.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _Separator.__init__.", "tags": null, "range": {"lines": [144, 147], "bytes": [4355, 4498]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_Separator"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_MetricRow", "kind": "class", "name": "_MetricRow", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _MetricRow.", "tags": null, "range": {"lines": [150, 164], "bytes": [4500, 4997]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_MetricRow.__init__", "kind": "function", "name": "_MetricRow.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _MetricRow.__init__.", "tags": null, "range": {"lines": [151, 161], "bytes": [4527, 4927]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_MetricRow"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_MetricRow.set_value", "kind": "function", "name": "_MetricRow.set_value", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _MetricRow.set_value.", "tags": null, "range": {"lines": [163, 164], "bytes": [4928, 4997]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_MetricRow"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_ClickableRow", "kind": "class", "name": "_ClickableRow", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _ClickableRow.", "tags": null, "range": {"lines": [167, 182], "bytes": [4999, 5625]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_ClickableRow.__init__", "kind": "function", "name": "_ClickableRow.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _ClickableRow.__init__.", "tags": null, "range": {"lines": [170, 182], "bytes": [5053, 5625]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_ClickableRow"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_Pill", "kind": "class", "name": "_Pill", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Class _Pill.", "tags": null, "range": {"lines": [185, 196], "bytes": [5627, 5982]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_Pill.__init__", "kind": "function", "name": "_Pill.__init__", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Method _Pill.__init__.", "tags": null, "range": {"lines": [186, 196], "bytes": [5648, 5982]}, "parent": "sym:modules/dashboard/financial_overview_widget.py:_Pill"}
{"id": "sym:modules/dashboard/financial_overview_widget.py:_money", "kind": "function", "name": "_money", "path": "modules/dashboard/financial_overview_widget.py", "summary": "Function _money.", "tags": null, "range": {"lines": [11, 15], "bytes": [219, 356]}, "parent": "mod:modules/dashboard/financial_overview_widget.py"}
{"id": "pkg:_CardFrame", "kind": "pkg", "name": "_CardFrame", "path": null, "summary": "External package '_CardFrame' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:l", "kind": "pkg", "name": "l", "path": null, "summary": "External package 'l' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_SectionTitle", "kind": "pkg", "name": "_SectionTitle", "path": null, "summary": "External package '_SectionTitle' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_MetricRow", "kind": "pkg", "name": "_MetricRow", "path": null, "summary": "External package '_MetricRow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Separator", "kind": "pkg", "name": "_Separator", "path": null, "summary": "External package '_Separator' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_ClickableRow", "kind": "pkg", "name": "_ClickableRow", "path": null, "summary": "External package '_ClickableRow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:arrow", "kind": "pkg", "name": "arrow", "path": null, "summary": "External package 'arrow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:aprow", "kind": "pkg", "name": "aprow", "path": null, "summary": "External package 'aprow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lowh", "kind": "pkg", "name": "lowh", "path": null, "summary": "External package 'lowh' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Pill", "kind": "pkg", "name": "_Pill", "path": null, "summary": "External package '_Pill' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn_view_low", "kind": "pkg", "name": "btn_view_low", "path": null, "summary": "External package 'btn_view_low' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/model.py", "kind": "module", "name": "modules.dashboard.model", "path": "modules/dashboard/model.py", "summary": "Module modules.dashboard.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/dashboard/model.py:DateRange", "kind": "class", "name": "DateRange", "path": "modules/dashboard/model.py", "summary": "Class DateRange.", "tags": null, "range": {"lines": [15, 17], "bytes": [398, 489]}, "parent": "mod:modules/dashboard/model.py"}
{"id": "sym:modules/dashboard/model.py:DashboardModel", "kind": "class", "name": "DashboardModel", "path": "modules/dashboard/model.py", "summary": "Pulls data from DashboardRepo and exposes properties for the view.  Usage:     model = DashboardModel(conn)     model.refresh(period=(\"today\", None, None))     print(model.kpi_today_sales, model.kpi_today_net_profit, ...)", "tags": null, "range": {"lines": [44, 176], "bytes": [1353, 6859]}, "parent": "mod:modules/dashboard/model.py"}
{"id": "sym:modules/dashboard/model.py:DashboardModel.__post_init__", "kind": "function", "name": "DashboardModel.__post_init__", "path": "modules/dashboard/model.py", "summary": "Method DashboardModel.__post_init__.", "tags": null, "range": {"lines": [79, 81], "bytes": [2686, 2812]}, "parent": "sym:modules/dashboard/model.py:DashboardModel"}
{"id": "sym:modules/dashboard/model.py:DashboardModel.refresh", "kind": "function", "name": "DashboardModel.refresh", "path": "modules/dashboard/model.py", "summary": "Fetch everything needed for the dashboard.  Args:   period: (key, custom_from, custom_to)           key in {\"today\",\"mtd\",\"last7\",\"custom\"}   top_products_limit: N rows for the leaderboard   low_stock_limit: N rows for low-stock preview   expiring_days: horizon for quotations expiring list", "tags": null, "range": {"lines": [85, 155], "bytes": [2887, 6122]}, "parent": "sym:modules/dashboard/model.py:DashboardModel"}
{"id": "sym:modules/dashboard/model.py:DashboardModel._safe", "kind": "function", "name": "DashboardModel._safe", "path": "modules/dashboard/model.py", "summary": "Call repo fn safely, returning `default` on any error.", "tags": null, "range": {"lines": [159, 164], "bytes": [6196, 6401]}, "parent": "sym:modules/dashboard/model.py:DashboardModel"}
{"id": "sym:modules/dashboard/model.py:DashboardModel._normalize_row", "kind": "function", "name": "DashboardModel._normalize_row", "path": "modules/dashboard/model.py", "summary": "sqlite3.Row → dict or passthrough dict; shallow copy for safety.", "tags": null, "range": {"lines": [166, 176], "bytes": [6402, 6859]}, "parent": "sym:modules/dashboard/model.py:DashboardModel"}
{"id": "sym:modules/dashboard/model.py:_calc_period", "kind": "function", "name": "_calc_period", "path": "modules/dashboard/model.py", "summary": "Resolve a friendly period key to a concrete (date_from, date_to).", "tags": null, "range": {"lines": [20, 38], "bytes": [491, 1265]}, "parent": "mod:modules/dashboard/model.py"}
{"id": "pkg:dataclass", "kind": "pkg", "name": "dataclass", "path": null, "summary": "External package 'dataclass' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:field", "kind": "pkg", "name": "field", "path": null, "summary": "External package 'field' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/payment_summary_widget.py", "kind": "module", "name": "modules.dashboard.payment_summary_widget", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Module modules.dashboard.payment_summary_widget.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget", "kind": "class", "name": "PaymentSummaryWidget", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Two side-by-side pivot tables:      Incoming (Sales payments)   |   Outgoing (Purchase payments)  Columns per table:     Method | Posted | Pending | Cleared | Bounced | Total  Controller API:     set_sales_breakdown(rows)     set_purchase_breakdown(rows)  Where each `rows` is: list of dicts like     { \"method\": \"Bank …", "tags": null, "range": {"lines": [31, 219], "bytes": [912, 8196]}, "parent": "mod:modules/dashboard/payment_summary_widget.py"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget.__init__", "kind": "function", "name": "PaymentSummaryWidget.__init__", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget.__init__.", "tags": null, "range": {"lines": [52, 54], "bytes": [1628, 1731]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._build_ui", "kind": "function", "name": "PaymentSummaryWidget._build_ui", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget._build_ui.", "tags": null, "range": {"lines": [58, 80], "bytes": [1776, 2803]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._wrap_card", "kind": "function", "name": "PaymentSummaryWidget._wrap_card", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget._wrap_card.", "tags": null, "range": {"lines": [82, 91], "bytes": [2804, 3224]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._prep_table", "kind": "function", "name": "PaymentSummaryWidget._prep_table", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget._prep_table.", "tags": null, "range": {"lines": [93, 104], "bytes": [3225, 3807]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget.set_sales_breakdown", "kind": "function", "name": "PaymentSummaryWidget.set_sales_breakdown", "path": "modules/dashboard/payment_summary_widget.py", "summary": "rows: [{method, clearing_state, amount}, ...] for SALE payments", "tags": null, "range": {"lines": [108, 113], "bytes": [3871, 4128]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget.set_purchase_breakdown", "kind": "function", "name": "PaymentSummaryWidget.set_purchase_breakdown", "path": "modules/dashboard/payment_summary_widget.py", "summary": "rows: [{method, clearing_state, amount}, ...] for PURCHASE payments", "tags": null, "range": {"lines": [115, 120], "bytes": [4129, 4393]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._pivot", "kind": "function", "name": "PaymentSummaryWidget._pivot", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Returns a list of (method, sums_by_state) with keys posted/pending/cleared/bounced/total. Sorted by method ascending; totals not included here (we add a footer later).", "tags": null, "range": {"lines": [124, 143], "bytes": [4448, 5412]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._fill_model", "kind": "function", "name": "PaymentSummaryWidget._fill_model", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget._fill_model.", "tags": null, "range": {"lines": [145, 188], "bytes": [5413, 7091]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._num_item", "kind": "function", "name": "PaymentSummaryWidget._num_item", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Method PaymentSummaryWidget._num_item.", "tags": null, "range": {"lines": [190, 193], "bytes": [7092, 7269]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget._emit_drilldown", "kind": "function", "name": "PaymentSummaryWidget._emit_drilldown", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Emits (kind, method, state) when user clicks a cell. - method comes from column 0 of the clicked row - state based on column clicked; column 1..4 map to posted/pending/cleared/bounced   column 5 maps to \"total\" Footer totals row will emit method=\"Total\".", "tags": null, "range": {"lines": [197, 219], "bytes": [7326, 8196]}, "parent": "sym:modules/dashboard/payment_summary_widget.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/payment_summary_widget.py:_money", "kind": "function", "name": "_money", "path": "modules/dashboard/payment_summary_widget.py", "summary": "Function _money.", "tags": null, "range": {"lines": [20, 24], "bytes": [646, 783]}, "parent": "mod:modules/dashboard/payment_summary_widget.py"}
{"id": "pkg:_BaseTableView", "kind": "pkg", "name": "_BaseTableView", "path": null, "summary": "External package '_BaseTableView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QStandardItemModel", "kind": "pkg", "name": "QStandardItemModel", "path": null, "summary": "External package 'QStandardItemModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tv", "kind": "pkg", "name": "tv", "path": null, "summary": "External package 'tv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setStretchLastSection", "kind": "pkg", "name": "setStretchLastSection", "path": null, "summary": "External package 'setStretchLastSection' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setSectionResizeMode", "kind": "pkg", "name": "setSectionResizeMode", "path": null, "summary": "External package 'setSectionResizeMode' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:agg", "kind": "pkg", "name": "agg", "path": null, "summary": "External package 'agg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QStandardItem", "kind": "pkg", "name": "QStandardItem", "path": null, "summary": "External package 'QStandardItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:row_items", "kind": "pkg", "name": "row_items", "path": null, "summary": "External package 'row_items' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sums", "kind": "pkg", "name": "sums", "path": null, "summary": "External package 'sums' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QFont", "kind": "pkg", "name": "QFont", "path": null, "summary": "External package 'QFont' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fnt", "kind": "pkg", "name": "fnt", "path": null, "summary": "External package 'fnt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setFont", "kind": "pkg", "name": "setFont", "path": null, "summary": "External package 'setFont' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it", "kind": "pkg", "name": "it", "path": null, "summary": "External package 'it' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:footer", "kind": "pkg", "name": "footer", "path": null, "summary": "External package 'footer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it_total", "kind": "pkg", "name": "it_total", "path": null, "summary": "External package 'it_total' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/dashboard/view.py", "kind": "module", "name": "modules.dashboard.view", "path": "modules/dashboard/view.py", "summary": "Module modules.dashboard.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/dashboard/view.py:PaymentSummaryWidget", "kind": "class", "name": "PaymentSummaryWidget", "path": "modules/dashboard/view.py", "summary": "Class PaymentSummaryWidget.", "tags": null, "range": {"lines": [27, 37], "bytes": [989, 1508]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "sym:modules/dashboard/view.py:PaymentSummaryWidget.__init__", "kind": "function", "name": "PaymentSummaryWidget.__init__", "path": "modules/dashboard/view.py", "summary": "Method PaymentSummaryWidget.__init__.", "tags": null, "range": {"lines": [28, 37], "bytes": [1030, 1508]}, "parent": "sym:modules/dashboard/view.py:PaymentSummaryWidget"}
{"id": "sym:modules/dashboard/view.py:DashboardView", "kind": "class", "name": "DashboardView", "path": "modules/dashboard/view.py", "summary": "Pure-UI dashboard surface. Controller drives it by calling the setters.  Signals:     create_sale_requested()     add_expense_requested()     period_changed(period_key: str, date_from: str, date_to: str)     kpi_drilldown(key: str, date_from: str, date_to: str)     low_stock_view_requested()  Public setters the contro…", "tags": null, "range": {"lines": [47, 338], "bytes": [1645, 12971]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "sym:modules/dashboard/view.py:DashboardView.__init__", "kind": "function", "name": "DashboardView.__init__", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.__init__.", "tags": null, "range": {"lines": [77, 82], "bytes": [2640, 2848]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._build_ui", "kind": "function", "name": "DashboardView._build_ui", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._build_ui.", "tags": null, "range": {"lines": [85, 193], "bytes": [2892, 7249]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._wire", "kind": "function", "name": "DashboardView._wire", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._wire.", "tags": null, "range": {"lines": [195, 202], "bytes": [7250, 7718]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._emit_kpi", "kind": "function", "name": "DashboardView._emit_kpi", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._emit_kpi.", "tags": null, "range": {"lines": [205, 207], "bytes": [7780, 7914]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._on_period_combo", "kind": "function", "name": "DashboardView._on_period_combo", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._on_period_combo.", "tags": null, "range": {"lines": [209, 216], "bytes": [7915, 8243]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._on_custom_edited", "kind": "function", "name": "DashboardView._on_custom_edited", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._on_custom_edited.", "tags": null, "range": {"lines": [218, 220], "bytes": [8244, 8356]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._apply_period", "kind": "function", "name": "DashboardView._apply_period", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._apply_period.", "tags": null, "range": {"lines": [222, 224], "bytes": [8357, 8499]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._period_key_from_combo", "kind": "function", "name": "DashboardView._period_key_from_combo", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._period_key_from_combo.", "tags": null, "range": {"lines": [226, 228], "bytes": [8500, 8667]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._toggle_custom_dates", "kind": "function", "name": "DashboardView._toggle_custom_dates", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._toggle_custom_dates.", "tags": null, "range": {"lines": [230, 233], "bytes": [8668, 8856]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._set_dates_for_key", "kind": "function", "name": "DashboardView._set_dates_for_key", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._set_dates_for_key.", "tags": null, "range": {"lines": [235, 248], "bytes": [8857, 9354]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._current_period_dates", "kind": "function", "name": "DashboardView._current_period_dates", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._current_period_dates.", "tags": null, "range": {"lines": [250, 253], "bytes": [9355, 9543]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView.set_kpi_value", "kind": "function", "name": "DashboardView.set_kpi_value", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.set_kpi_value.", "tags": null, "range": {"lines": [256, 265], "bytes": [9614, 10020]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView.set_top_products", "kind": "function", "name": "DashboardView.set_top_products", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.set_top_products.", "tags": null, "range": {"lines": [267, 275], "bytes": [10021, 10509]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView.set_quotations", "kind": "function", "name": "DashboardView.set_quotations", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.set_quotations.", "tags": null, "range": {"lines": [277, 286], "bytes": [10510, 11022]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView.set_period_from_to", "kind": "function", "name": "DashboardView.set_period_from_to", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.set_period_from_to.", "tags": null, "range": {"lines": [288, 295], "bytes": [11023, 11436]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView.resizeEvent", "kind": "function", "name": "DashboardView.resizeEvent", "path": "modules/dashboard/view.py", "summary": "Method DashboardView.resizeEvent.", "tags": null, "range": {"lines": [298, 300], "bytes": [11503, 11634]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._reflow_kpis", "kind": "function", "name": "DashboardView._reflow_kpis", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._reflow_kpis.", "tags": null, "range": {"lines": [302, 329], "bytes": [11635, 12473]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:DashboardView._prep_simple_table", "kind": "function", "name": "DashboardView._prep_simple_table", "path": "modules/dashboard/view.py", "summary": "Method DashboardView._prep_simple_table.", "tags": null, "range": {"lines": [332, 338], "bytes": [12526, 12971]}, "parent": "sym:modules/dashboard/view.py:DashboardView"}
{"id": "sym:modules/dashboard/view.py:KPICard", "kind": "class", "name": "KPICard", "path": "modules/dashboard/view.py", "summary": "Class KPICard.", "tags": null, "range": {"lines": [343, 400], "bytes": [13047, 14895]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "sym:modules/dashboard/view.py:KPICard.__init__", "kind": "function", "name": "KPICard.__init__", "path": "modules/dashboard/view.py", "summary": "Method KPICard.__init__.", "tags": null, "range": {"lines": [346, 389], "bytes": [13094, 14563]}, "parent": "sym:modules/dashboard/view.py:KPICard"}
{"id": "sym:modules/dashboard/view.py:KPICard.mousePressEvent", "kind": "function", "name": "KPICard.mousePressEvent", "path": "modules/dashboard/view.py", "summary": "Method KPICard.mousePressEvent.", "tags": null, "range": {"lines": [391, 394], "bytes": [14564, 14739]}, "parent": "sym:modules/dashboard/view.py:KPICard"}
{"id": "sym:modules/dashboard/view.py:KPICard.set_value", "kind": "function", "name": "KPICard.set_value", "path": "modules/dashboard/view.py", "summary": "Method KPICard.set_value.", "tags": null, "range": {"lines": [396, 397], "bytes": [14740, 14815]}, "parent": "sym:modules/dashboard/view.py:KPICard"}
{"id": "sym:modules/dashboard/view.py:KPICard.set_caption", "kind": "function", "name": "KPICard.set_caption", "path": "modules/dashboard/view.py", "summary": "Method KPICard.set_caption.", "tags": null, "range": {"lines": [399, 400], "bytes": [14816, 14895]}, "parent": "sym:modules/dashboard/view.py:KPICard"}
{"id": "sym:modules/dashboard/view.py:_Card", "kind": "class", "name": "_Card", "path": "modules/dashboard/view.py", "summary": "Wrap any widget in a titled card frame.", "tags": null, "range": {"lines": [403, 418], "bytes": [14897, 15511]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "sym:modules/dashboard/view.py:_Card.__init__", "kind": "function", "name": "_Card.__init__", "path": "modules/dashboard/view.py", "summary": "Method _Card.__init__.", "tags": null, "range": {"lines": [405, 418], "bytes": [14969, 15511]}, "parent": "sym:modules/dashboard/view.py:_Card"}
{"id": "sym:modules/dashboard/view.py:_money", "kind": "function", "name": "_money", "path": "modules/dashboard/view.py", "summary": "Function _money.", "tags": null, "range": {"lines": [40, 44], "bytes": [1510, 1643]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "sym:modules/dashboard/view.py:add_kpi", "kind": "function", "name": "add_kpi", "path": "modules/dashboard/view.py", "summary": "Function add_kpi.", "tags": null, "range": {"lines": [134, 138], "bytes": [4480, 4726]}, "parent": "mod:modules/dashboard/view.py"}
{"id": "pkg:financial_overview_widget", "kind": "pkg", "name": "financial_overview_widget", "path": null, "summary": "External package 'financial_overview_widget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:payment_summary_widget", "kind": "pkg", "name": "payment_summary_widget", "path": null, "summary": "External package 'payment_summary_widget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:box", "kind": "pkg", "name": "box", "path": null, "summary": "External package 'box' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bl", "kind": "pkg", "name": "bl", "path": null, "summary": "External package 'bl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:top", "kind": "pkg", "name": "top", "path": null, "summary": "External package 'top' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:KPICard", "kind": "pkg", "name": "KPICard", "path": null, "summary": "External package 'KPICard' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:gridwrap", "kind": "pkg", "name": "gridwrap", "path": null, "summary": "External package 'gridwrap' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:body", "kind": "pkg", "name": "body", "path": null, "summary": "External package 'body' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:FinancialOverviewWidget", "kind": "pkg", "name": "FinancialOverviewWidget", "path": null, "summary": "External package 'FinancialOverviewWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PaymentSummaryWidget", "kind": "pkg", "name": "PaymentSummaryWidget", "path": null, "summary": "External package 'PaymentSummaryWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Card", "kind": "pkg", "name": "_Card", "path": null, "summary": "External package '_Card' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QSpacerItem", "kind": "pkg", "name": "QSpacerItem", "path": null, "summary": "External package 'QSpacerItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:m", "kind": "pkg", "name": "m", "path": null, "summary": "External package 'm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:date_from", "kind": "pkg", "name": "date_from", "path": null, "summary": "External package 'date_from' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:date_to", "kind": "pkg", "name": "date_to", "path": null, "summary": "External package 'date_to' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fv", "kind": "pkg", "name": "fv", "path": null, "summary": "External package 'fv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:frame", "kind": "pkg", "name": "frame", "path": null, "summary": "External package 'frame' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:fl", "kind": "pkg", "name": "fl", "path": null, "summary": "External package 'fl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/__init__.py", "kind": "module", "name": "modules.expense", "path": "modules/expense/__init__.py", "summary": "Module modules.expense.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/category_dialog.py", "kind": "module", "name": "modules.expense.category_dialog", "path": "modules/expense/category_dialog.py", "summary": "Module modules.expense.category_dialog.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog", "kind": "class", "name": "CategoryDialog", "path": "modules/expense/category_dialog.py", "summary": "Class CategoryDialog.", "tags": null, "range": {"lines": [12, 99], "bytes": [281, 3464]}, "parent": "mod:modules/expense/category_dialog.py"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog.__init__", "kind": "function", "name": "CategoryDialog.__init__", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog.__init__.", "tags": null, "range": {"lines": [13, 43], "bytes": [312, 1417]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog._reload", "kind": "function", "name": "CategoryDialog._reload", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog._reload.", "tags": null, "range": {"lines": [45, 51], "bytes": [1418, 1774]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog._selected_id", "kind": "function", "name": "CategoryDialog._selected_id", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog._selected_id.", "tags": null, "range": {"lines": [53, 57], "bytes": [1775, 1960]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog._add", "kind": "function", "name": "CategoryDialog._add", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog._add.", "tags": null, "range": {"lines": [59, 66], "bytes": [1961, 2234]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog._rename", "kind": "function", "name": "CategoryDialog._rename", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog._rename.", "tags": null, "range": {"lines": [68, 79], "bytes": [2235, 2683]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "sym:modules/expense/category_dialog.py:CategoryDialog._delete", "kind": "function", "name": "CategoryDialog._delete", "path": "modules/expense/category_dialog.py", "summary": "Method CategoryDialog._delete.", "tags": null, "range": {"lines": [81, 99], "bytes": [2684, 3464]}, "parent": "sym:modules/expense/category_dialog.py:CategoryDialog"}
{"id": "pkg:btn_add", "kind": "pkg", "name": "btn_add", "path": null, "summary": "External package 'btn_add' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn_rename", "kind": "pkg", "name": "btn_rename", "path": null, "summary": "External package 'btn_rename' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn_delete", "kind": "pkg", "name": "btn_delete", "path": null, "summary": "External package 'btn_delete' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/controller.py", "kind": "module", "name": "modules.expense.controller", "path": "modules/expense/controller.py", "summary": "Controller for the expense module.  Wires ExpensesRepo <-> models <-> ExpenseView and connects Add/Edit/Delete to ExpenseForm. Adds: - Manage Categories dialog - Totals-by-category summary refresh - CSV export - Advanced filters (date range, amount range) - Selection-aware UX (double-click, Enter, Delete, Ctrl+N/Ctrl+…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/expense/controller.py:ExpenseController", "kind": "class", "name": "ExpenseController", "path": "modules/expense/controller.py", "summary": "UI controller for viewing and managing expenses.", "tags": null, "range": {"lines": [36, 355], "bytes": [1103, 14031]}, "parent": "mod:modules/expense/controller.py"}
{"id": "sym:modules/expense/controller.py:ExpenseController.__init__", "kind": "function", "name": "ExpenseController.__init__", "path": "modules/expense/controller.py", "summary": "Method ExpenseController.__init__.", "tags": null, "range": {"lines": [39, 71], "bytes": [1200, 2563]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController.get_widget", "kind": "function", "name": "ExpenseController.get_widget", "path": "modules/expense/controller.py", "summary": "Method ExpenseController.get_widget.", "tags": null, "range": {"lines": [76, 77], "bytes": [2727, 2789]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._load_categories", "kind": "function", "name": "ExpenseController._load_categories", "path": "modules/expense/controller.py", "summary": "Populate the category filter combo box.", "tags": null, "range": {"lines": [82, 90], "bytes": [2955, 3393]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._reload", "kind": "function", "name": "ExpenseController._reload", "path": "modules/expense/controller.py", "summary": "Reload the expenses table based on current filters and refresh totals.", "tags": null, "range": {"lines": [92, 127], "bytes": [3394, 4696]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._refresh_totals", "kind": "function", "name": "ExpenseController._refresh_totals", "path": "modules/expense/controller.py", "summary": "Populate the totals table (totals by category).", "tags": null, "range": {"lines": [129, 154], "bytes": [4697, 5770]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._selected_expense_id", "kind": "function", "name": "ExpenseController._selected_expense_id", "path": "modules/expense/controller.py", "summary": "Return the selected expense_id from the table, or None.", "tags": null, "range": {"lines": [159, 171], "bytes": [5931, 6410]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._open_form", "kind": "function", "name": "ExpenseController._open_form", "path": "modules/expense/controller.py", "summary": "Open the ExpenseForm with the category list and return payload or None.", "tags": null, "range": {"lines": [173, 180], "bytes": [6411, 6911]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._wire_table_shortcuts", "kind": "function", "name": "ExpenseController._wire_table_shortcuts", "path": "modules/expense/controller.py", "summary": "Double-click and keyboard shortcuts on the table.", "tags": null, "range": {"lines": [182, 202], "bytes": [6912, 8066]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._handle_error", "kind": "function", "name": "ExpenseController._handle_error", "path": "modules/expense/controller.py", "summary": "Map low-level exceptions to consistent user-facing messages.", "tags": null, "range": {"lines": [207, 210], "bytes": [8267, 8499]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._map_error", "kind": "function", "name": "ExpenseController._map_error", "path": "modules/expense/controller.py", "summary": "Convert exceptions (DomainError/sqlite3.IntegrityError/others) to (title, message). Keeps messages generic & consistent across controllers.", "tags": null, "range": {"lines": [213, 239], "bytes": [8518, 9760]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._on_add", "kind": "function", "name": "ExpenseController._on_add", "path": "modules/expense/controller.py", "summary": "Method ExpenseController._on_add.", "tags": null, "range": {"lines": [244, 258], "bytes": [9929, 10541]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._on_edit", "kind": "function", "name": "ExpenseController._on_edit", "path": "modules/expense/controller.py", "summary": "Method ExpenseController._on_edit.", "tags": null, "range": {"lines": [260, 287], "bytes": [10542, 11521]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._on_delete", "kind": "function", "name": "ExpenseController._on_delete", "path": "modules/expense/controller.py", "summary": "Method ExpenseController._on_delete.", "tags": null, "range": {"lines": [289, 309], "bytes": [11522, 12273]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._on_manage_categories", "kind": "function", "name": "ExpenseController._on_manage_categories", "path": "modules/expense/controller.py", "summary": "Open the category manager dialog and refresh combos & data afterwards.", "tags": null, "range": {"lines": [311, 319], "bytes": [12274, 12717]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "sym:modules/expense/controller.py:ExpenseController._on_export_csv", "kind": "function", "name": "ExpenseController._on_export_csv", "path": "modules/expense/controller.py", "summary": "Export the current table view to CSV.", "tags": null, "range": {"lines": [321, 355], "bytes": [12718, 14031]}, "parent": "sym:modules/expense/controller.py:ExpenseController"}
{"id": "pkg:csv", "kind": "pkg", "name": "csv", "path": null, "summary": "External package 'csv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:category_dialog", "kind": "pkg", "name": "category_dialog", "path": null, "summary": "External package 'category_dialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpensesRepo", "kind": "pkg", "name": "ExpensesRepo", "path": null, "summary": "External package 'ExpensesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpenseView", "kind": "pkg", "name": "ExpenseView", "path": null, "summary": "External package 'ExpenseView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:any", "kind": "pkg", "name": "any", "path": null, "summary": "External package 'any' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpensesTableModel", "kind": "pkg", "name": "ExpensesTableModel", "path": null, "summary": "External package 'ExpensesTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ui", "kind": "pkg", "name": "ui", "path": null, "summary": "External package 'ui' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpenseForm", "kind": "pkg", "name": "ExpenseForm", "path": null, "summary": "External package 'ExpenseForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QShortcut", "kind": "pkg", "name": "QShortcut", "path": null, "summary": "External package 'QShortcut' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sc", "kind": "pkg", "name": "sc", "path": null, "summary": "External package 'sc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CategoryDialog", "kind": "pkg", "name": "CategoryDialog", "path": null, "summary": "External package 'CategoryDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/form.py", "kind": "module", "name": "modules.expense.form", "path": "modules/expense/form.py", "summary": "Dialog for creating and editing expenses.  Collects: description, amount, date, and category. Validates: non-empty description, amount > 0.0. On accept, `payload()` returns a dict compatible with ExpensesRepo.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/expense/form.py:ExpenseForm", "kind": "class", "name": "ExpenseForm", "path": "modules/expense/form.py", "summary": "Modal dialog for adding or editing an expense.", "tags": null, "range": {"lines": [33, 192], "bytes": [627, 6750]}, "parent": "mod:modules/expense/form.py"}
{"id": "sym:modules/expense/form.py:ExpenseForm.__init__", "kind": "function", "name": "ExpenseForm.__init__", "path": "modules/expense/form.py", "summary": "Method ExpenseForm.__init__.", "tags": null, "range": {"lines": [36, 142], "bytes": [713, 4868]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "sym:modules/expense/form.py:ExpenseForm._fail", "kind": "function", "name": "ExpenseForm._fail", "path": "modules/expense/form.py", "summary": "Method ExpenseForm._fail.", "tags": null, "range": {"lines": [145, 148], "bytes": [4930, 5114]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "sym:modules/expense/form.py:ExpenseForm.payload", "kind": "function", "name": "ExpenseForm.payload", "path": "modules/expense/form.py", "summary": "Return the last accepted payload, or None if dialog was canceled.", "tags": null, "range": {"lines": [150, 152], "bytes": [5115, 5262]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "sym:modules/expense/form.py:ExpenseForm._build_payload", "kind": "function", "name": "ExpenseForm._build_payload", "path": "modules/expense/form.py", "summary": "Method ExpenseForm._build_payload.", "tags": null, "range": {"lines": [154, 162], "bytes": [5263, 5684]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "sym:modules/expense/form.py:ExpenseForm.accept", "kind": "function", "name": "ExpenseForm.accept", "path": "modules/expense/form.py", "summary": "Method ExpenseForm.accept.", "tags": null, "range": {"lines": [164, 187], "bytes": [5685, 6562]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "sym:modules/expense/form.py:ExpenseForm.expense_id", "kind": "function", "name": "ExpenseForm.expense_id", "path": "modules/expense/form.py", "summary": "Return the current expense id (None for new).", "tags": null, "range": {"lines": [190, 192], "bytes": [6618, 6750]}, "parent": "sym:modules/expense/form.py:ExpenseForm"}
{"id": "pkg:date_row_h", "kind": "pkg", "name": "date_row_h", "path": null, "summary": "External package 'date_row_h' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:qd", "kind": "pkg", "name": "qd", "path": null, "summary": "External package 'qd' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:widget_to_focus", "kind": "pkg", "name": "widget_to_focus", "path": null, "summary": "External package 'widget_to_focus' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/model.py", "kind": "module", "name": "modules.expense.model", "path": "modules/expense/model.py", "summary": "Table models for the expense module.  This module defines two simple Qt table models for listing expense categories and individual expenses.  They follow the conventions used elsewhere in the application (e.g. the sales and vendor modules) by exposing `rowCount`, `columnCount`, and `data` methods and defining a `HEADE…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel", "kind": "class", "name": "ExpenseCategoriesModel", "path": "modules/expense/model.py", "summary": "Table model for listing expense categories.", "tags": null, "range": {"lines": [26, 59], "bytes": [886, 2263]}, "parent": "mod:modules/expense/model.py"}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel.__init__", "kind": "function", "name": "ExpenseCategoriesModel.__init__", "path": "modules/expense/model.py", "summary": "Method ExpenseCategoriesModel.__init__.", "tags": null, "range": {"lines": [32, 34], "bytes": [1081, 1192]}, "parent": "sym:modules/expense/model.py:ExpenseCategoriesModel"}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel.rowCount", "kind": "function", "name": "ExpenseCategoriesModel.rowCount", "path": "modules/expense/model.py", "summary": "Method ExpenseCategoriesModel.rowCount.", "tags": null, "range": {"lines": [38, 39], "bytes": [1271, 1396]}, "parent": "sym:modules/expense/model.py:ExpenseCategoriesModel"}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel.columnCount", "kind": "function", "name": "ExpenseCategoriesModel.columnCount", "path": "modules/expense/model.py", "summary": "Method ExpenseCategoriesModel.columnCount.", "tags": null, "range": {"lines": [41, 42], "bytes": [1397, 1527]}, "parent": "sym:modules/expense/model.py:ExpenseCategoriesModel"}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel.data", "kind": "function", "name": "ExpenseCategoriesModel.data", "path": "modules/expense/model.py", "summary": "Method ExpenseCategoriesModel.data.", "tags": null, "range": {"lines": [44, 54], "bytes": [1528, 1961]}, "parent": "sym:modules/expense/model.py:ExpenseCategoriesModel"}
{"id": "sym:modules/expense/model.py:ExpenseCategoriesModel.headerData", "kind": "function", "name": "ExpenseCategoriesModel.headerData", "path": "modules/expense/model.py", "summary": "Method ExpenseCategoriesModel.headerData.", "tags": null, "range": {"lines": [56, 59], "bytes": [1962, 2263]}, "parent": "sym:modules/expense/model.py:ExpenseCategoriesModel"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel", "kind": "class", "name": "ExpensesTableModel", "path": "modules/expense/model.py", "summary": "Table model for listing individual expenses.", "tags": null, "range": {"lines": [62, 103], "bytes": [2265, 4010]}, "parent": "mod:modules/expense/model.py"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel.__init__", "kind": "function", "name": "ExpensesTableModel.__init__", "path": "modules/expense/model.py", "summary": "Method ExpensesTableModel.__init__.", "tags": null, "range": {"lines": [68, 70], "bytes": [2492, 2603]}, "parent": "sym:modules/expense/model.py:ExpensesTableModel"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel.rowCount", "kind": "function", "name": "ExpensesTableModel.rowCount", "path": "modules/expense/model.py", "summary": "Method ExpensesTableModel.rowCount.", "tags": null, "range": {"lines": [74, 75], "bytes": [2682, 2807]}, "parent": "sym:modules/expense/model.py:ExpensesTableModel"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel.columnCount", "kind": "function", "name": "ExpensesTableModel.columnCount", "path": "modules/expense/model.py", "summary": "Method ExpensesTableModel.columnCount.", "tags": null, "range": {"lines": [77, 78], "bytes": [2808, 2938]}, "parent": "sym:modules/expense/model.py:ExpensesTableModel"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel.data", "kind": "function", "name": "ExpensesTableModel.data", "path": "modules/expense/model.py", "summary": "Method ExpensesTableModel.data.", "tags": null, "range": {"lines": [80, 98], "bytes": [2939, 3708]}, "parent": "sym:modules/expense/model.py:ExpensesTableModel"}
{"id": "sym:modules/expense/model.py:ExpensesTableModel.headerData", "kind": "function", "name": "ExpensesTableModel.headerData", "path": "modules/expense/model.py", "summary": "Method ExpensesTableModel.headerData.", "tags": null, "range": {"lines": [100, 103], "bytes": [3709, 4010]}, "parent": "sym:modules/expense/model.py:ExpensesTableModel"}
{"id": "pkg:fmt_money", "kind": "pkg", "name": "fmt_money", "path": null, "summary": "External package 'fmt_money' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/expense/view.py", "kind": "module", "name": "modules.expense.view", "path": "modules/expense/view.py", "summary": "View for the expense module.  Encapsulates the widgets used by ExpenseController: - Search box - Optional single-date filter (blank == no filter, defaults to today) - Category filter - Advanced filters: Date From / Date To, Min Amount / Max Amount - Buttons: Add / Edit / Delete / Manage Categories / Export CSV - Table…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/expense/view.py:ExpenseView", "kind": "class", "name": "ExpenseView", "path": "modules/expense/view.py", "summary": "UI container for listing and filtering expenses.", "tags": null, "range": {"lines": [41, 250], "bytes": [1019, 9714]}, "parent": "mod:modules/expense/view.py"}
{"id": "sym:modules/expense/view.py:ExpenseView.__init__", "kind": "function", "name": "ExpenseView.__init__", "path": "modules/expense/view.py", "summary": "Method ExpenseView.__init__.", "tags": null, "range": {"lines": [44, 198], "bytes": [1107, 7740]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.search_text", "kind": "function", "name": "ExpenseView.search_text", "path": "modules/expense/view.py", "summary": "Method ExpenseView.search_text.", "tags": null, "range": {"lines": [204, 205], "bytes": [7957, 8037]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.selected_date", "kind": "function", "name": "ExpenseView.selected_date", "path": "modules/expense/view.py", "summary": "Returns the selected date as 'yyyy-MM-dd' or None if no date is selected. Blank text or the minimum date sentinel means 'no filter'.", "tags": null, "range": {"lines": [208, 216], "bytes": [8052, 8435]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.selected_category_id", "kind": "function", "name": "ExpenseView.selected_category_id", "path": "modules/expense/view.py", "summary": "Returns the current category id or None when '(All)' is selected.", "tags": null, "range": {"lines": [219, 221], "bytes": [8450, 8627]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.date_from_str", "kind": "function", "name": "ExpenseView.date_from_str", "path": "modules/expense/view.py", "summary": "Return 'yyyy-MM-dd' or None if not set (min-date sentinel).", "tags": null, "range": {"lines": [225, 230], "bytes": [8719, 8997]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.date_to_str", "kind": "function", "name": "ExpenseView.date_to_str", "path": "modules/expense/view.py", "summary": "Return 'yyyy-MM-dd' or None if not set (min-date sentinel).", "tags": null, "range": {"lines": [233, 238], "bytes": [9012, 9282]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.amount_min_val", "kind": "function", "name": "ExpenseView.amount_min_val", "path": "modules/expense/view.py", "summary": "Return float value or None if unset (0.00 sentinel).", "tags": null, "range": {"lines": [241, 244], "bytes": [9297, 9498]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "sym:modules/expense/view.py:ExpenseView.amount_max_val", "kind": "function", "name": "ExpenseView.amount_max_val", "path": "modules/expense/view.py", "summary": "Return float value or None if unset (0.00 sentinel).", "tags": null, "range": {"lines": [247, 250], "bytes": [9513, 9714]}, "parent": "sym:modules/expense/view.py:ExpenseView"}
{"id": "pkg:top_row", "kind": "pkg", "name": "top_row", "path": null, "summary": "External package 'top_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_search", "kind": "pkg", "name": "lbl_search", "path": null, "summary": "External package 'lbl_search' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_date", "kind": "pkg", "name": "lbl_date", "path": null, "summary": "External package 'lbl_date' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_cat", "kind": "pkg", "name": "lbl_cat", "path": null, "summary": "External package 'lbl_cat' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:adv_row", "kind": "pkg", "name": "adv_row", "path": null, "summary": "External package 'adv_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:addMonths", "kind": "pkg", "name": "addMonths", "path": null, "summary": "External package 'addMonths' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTableView", "kind": "pkg", "name": "QTableView", "path": null, "summary": "External package 'QTableView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/__init__.py", "kind": "module", "name": "modules.inventory", "path": "modules/inventory/__init__.py", "summary": "Module modules.inventory.", "tags": null, "range": null, "parent": null}
{"id": "pkg:transactions", "kind": "pkg", "name": "transactions", "path": null, "summary": "External package 'transactions' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:stock_valuation", "kind": "pkg", "name": "stock_valuation", "path": null, "summary": "External package 'stock_valuation' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/controller.py", "kind": "module", "name": "modules.inventory.controller", "path": "modules/inventory/controller.py", "summary": "Module modules.inventory.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/inventory/controller.py:InventoryController", "kind": "class", "name": "InventoryController", "path": "modules/inventory/controller.py", "summary": "Single controller for the Inventory module.  Tabs:   1) Adjustments & Recent  (existing InventoryView)   2) Transactions          (recent list with adjustable LIMIT)   3) Stock Valuation       (per-product on-hand snapshot)  This file replaces the need for a separate inventory_controller.py.", "tags": null, "range": {"lines": [25, 135], "bytes": [669, 4765]}, "parent": "mod:modules/inventory/controller.py"}
{"id": "sym:modules/inventory/controller.py:InventoryController.__init__", "kind": "function", "name": "InventoryController.__init__", "path": "modules/inventory/controller.py", "summary": "Method InventoryController.__init__.", "tags": null, "range": {"lines": [37, 64], "bytes": [1042, 2134]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController.get_widget", "kind": "function", "name": "InventoryController.get_widget", "path": "modules/inventory/controller.py", "summary": "Method InventoryController.get_widget.", "tags": null, "range": {"lines": [66, 67], "bytes": [2135, 2198]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController._wire_adjustments", "kind": "function", "name": "InventoryController._wire_adjustments", "path": "modules/inventory/controller.py", "summary": "Method InventoryController._wire_adjustments.", "tags": null, "range": {"lines": [71, 74], "bytes": [2278, 2441]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController._load_products", "kind": "function", "name": "InventoryController._load_products", "path": "modules/inventory/controller.py", "summary": "Method InventoryController._load_products.", "tags": null, "range": {"lines": [76, 81], "bytes": [2442, 2768]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController._load_uoms_for_selected", "kind": "function", "name": "InventoryController._load_uoms_for_selected", "path": "modules/inventory/controller.py", "summary": "Method InventoryController._load_uoms_for_selected.", "tags": null, "range": {"lines": [83, 95], "bytes": [2769, 3280]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController._reload_recent", "kind": "function", "name": "InventoryController._reload_recent", "path": "modules/inventory/controller.py", "summary": "Method InventoryController._reload_recent.", "tags": null, "range": {"lines": [97, 102], "bytes": [3281, 3574]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "sym:modules/inventory/controller.py:InventoryController._record", "kind": "function", "name": "InventoryController._record", "path": "modules/inventory/controller.py", "summary": "Method InventoryController._record.", "tags": null, "range": {"lines": [104, 135], "bytes": [3575, 4765]}, "parent": "sym:modules/inventory/controller.py:InventoryController"}
{"id": "pkg:InventoryRepo", "kind": "pkg", "name": "InventoryRepo", "path": null, "summary": "External package 'InventoryRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ProductsRepo", "kind": "pkg", "name": "ProductsRepo", "path": null, "summary": "External package 'ProductsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InventoryView", "kind": "pkg", "name": "InventoryView", "path": null, "summary": "External package 'InventoryView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:TransactionsView", "kind": "pkg", "name": "TransactionsView", "path": null, "summary": "External package 'TransactionsView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:StockValuationWidget", "kind": "pkg", "name": "StockValuationWidget", "path": null, "summary": "External package 'StockValuationWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:today_str", "kind": "pkg", "name": "today_str", "path": null, "summary": "External package 'today_str' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:TransactionsTableModel", "kind": "pkg", "name": "TransactionsTableModel", "path": null, "summary": "External package 'TransactionsTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:error", "kind": "pkg", "name": "error", "path": null, "summary": "External package 'error' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/model.py", "kind": "module", "name": "modules.inventory.model", "path": "modules/inventory/model.py", "summary": "Module modules.inventory.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel", "kind": "class", "name": "TransactionsTableModel", "path": "modules/inventory/model.py", "summary": "Table model for inventory transactions.  The model now tolerates TWO possible row schemas (for safety):  Preferred keys (from updated InventoryRepo):   - transaction_id   - date   - transaction_type   - product   - quantity   - unit_name   - notes  Also accepted (legacy/old):   - id   - date   - type   - product   - q…", "tags": null, "range": {"lines": [7, 114], "bytes": [147, 3799]}, "parent": "mod:modules/inventory/model.py"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.__init__", "kind": "function", "name": "TransactionsTableModel.__init__", "path": "modules/inventory/model.py", "summary": "Method TransactionsTableModel.__init__.", "tags": null, "range": {"lines": [33, 35], "bytes": [709, 873]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.rowCount", "kind": "function", "name": "TransactionsTableModel.rowCount", "path": "modules/inventory/model.py", "summary": "Method TransactionsTableModel.rowCount.", "tags": null, "range": {"lines": [39, 40], "bytes": [919, 1018]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.columnCount", "kind": "function", "name": "TransactionsTableModel.columnCount", "path": "modules/inventory/model.py", "summary": "Method TransactionsTableModel.columnCount.", "tags": null, "range": {"lines": [42, 43], "bytes": [1019, 1123]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.data", "kind": "function", "name": "TransactionsTableModel.data", "path": "modules/inventory/model.py", "summary": "Method TransactionsTableModel.data.", "tags": null, "range": {"lines": [45, 87], "bytes": [1124, 2681]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.headerData", "kind": "function", "name": "TransactionsTableModel.headerData", "path": "modules/inventory/model.py", "summary": "Method TransactionsTableModel.headerData.", "tags": null, "range": {"lines": [89, 98], "bytes": [2682, 3214]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.replace", "kind": "function", "name": "TransactionsTableModel.replace", "path": "modules/inventory/model.py", "summary": "Replace all rows at once (keeps column schema unchanged).", "tags": null, "range": {"lines": [102, 106], "bytes": [3279, 3508]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.row_dict", "kind": "function", "name": "TransactionsTableModel.row_dict", "path": "modules/inventory/model.py", "summary": "Return the raw dict for a given row (useful in tests/controllers).", "tags": null, "range": {"lines": [108, 110], "bytes": [3509, 3673]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:TransactionsTableModel.rows", "kind": "function", "name": "TransactionsTableModel.rows", "path": "modules/inventory/model.py", "summary": "Return a shallow copy of all rows.", "tags": null, "range": {"lines": [112, 114], "bytes": [3674, 3799]}, "parent": "sym:modules/inventory/model.py:TransactionsTableModel"}
{"id": "sym:modules/inventory/model.py:_get", "kind": "function", "name": "_get", "path": "modules/inventory/model.py", "summary": "Function _get.", "tags": null, "range": {"lines": [52, 56], "bytes": [1322, 1493]}, "parent": "mod:modules/inventory/model.py"}
{"id": "mod:modules/inventory/stock_adjustment.py", "kind": "module", "name": "modules.inventory.stock_adjustment", "path": "modules/inventory/stock_adjustment.py", "summary": "Module modules.inventory.stock_adjustment.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/stock_adjustment_form.py", "kind": "module", "name": "modules.inventory.stock_adjustment_form", "path": "modules/inventory/stock_adjustment_form.py", "summary": "Module modules.inventory.stock_adjustment_form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/stock_valuation.py", "kind": "module", "name": "modules.inventory.stock_valuation", "path": "modules/inventory/stock_valuation.py", "summary": "Per-product stock valuation snapshot.  UI: - Top row:  Product combobox (with \"(Select…)\" default) + Refresh button - Card:     On Hand (qty + uom), Unit Value, Total Value - Footer:   Small note (\"from v_stock_on_hand\") for context  Behavior: - On product change or Refresh -> query InventoryRepo.stock_on_hand(product…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget", "kind": "class", "name": "StockValuationWidget", "path": "modules/inventory/stock_valuation.py", "summary": "Compact, read-only per-product valuation card.", "tags": null, "range": {"lines": [49, 243], "bytes": [1235, 8815]}, "parent": "mod:modules/inventory/stock_valuation.py"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget.__init__", "kind": "function", "name": "StockValuationWidget.__init__", "path": "modules/inventory/stock_valuation.py", "summary": "Accepts either:   - InventoryRepo instance, or   - raw sqlite3.Connection (will be used via InventoryRepo where needed)", "tags": null, "range": {"lines": [52, 132], "bytes": [1330, 4697]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._load_products", "kind": "function", "name": "StockValuationWidget._load_products", "path": "modules/inventory/stock_valuation.py", "summary": "Populate the product combo:   0: \"(Select…)\" -> userData=None   n: product name -> userData=product_id  Works whether `self.repo` is an InventoryRepo (has `.conn`) or a raw sqlite3.Connection.", "tags": null, "range": {"lines": [137, 168], "bytes": [4871, 6111]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._on_filters_changed", "kind": "function", "name": "StockValuationWidget._on_filters_changed", "path": "modules/inventory/stock_valuation.py", "summary": "React to product change: load snapshot or clear if none selected.", "tags": null, "range": {"lines": [173, 179], "bytes": [6281, 6561]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._refresh_clicked", "kind": "function", "name": "StockValuationWidget._refresh_clicked", "path": "modules/inventory/stock_valuation.py", "summary": "Method StockValuationWidget._refresh_clicked.", "tags": null, "range": {"lines": [181, 186], "bytes": [6562, 6759]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._selected_product_id", "kind": "function", "name": "StockValuationWidget._selected_product_id", "path": "modules/inventory/stock_valuation.py", "summary": "Method StockValuationWidget._selected_product_id.", "tags": null, "range": {"lines": [191, 196], "bytes": [6928, 7149]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._clear_card", "kind": "function", "name": "StockValuationWidget._clear_card", "path": "modules/inventory/stock_valuation.py", "summary": "Method StockValuationWidget._clear_card.", "tags": null, "range": {"lines": [198, 201], "bytes": [7150, 7312]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:StockValuationWidget._load_product_snapshot", "kind": "function", "name": "StockValuationWidget._load_product_snapshot", "path": "modules/inventory/stock_valuation.py", "summary": "Query repo for a single product snapshot and update the card. Handles None / missing fields gracefully.", "tags": null, "range": {"lines": [203, 243], "bytes": [7313, 8815]}, "parent": "sym:modules/inventory/stock_valuation.py:StockValuationWidget"}
{"id": "sym:modules/inventory/stock_valuation.py:_fmt_float", "kind": "function", "name": "_fmt_float", "path": "modules/inventory/stock_valuation.py", "summary": "Function _fmt_float.", "tags": null, "range": {"lines": [40, 46], "bytes": [1036, 1233]}, "parent": "mod:modules/inventory/stock_valuation.py"}
{"id": "pkg:lbl_prod", "kind": "pkg", "name": "lbl_prod", "path": null, "summary": "External package 'lbl_prod' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rec", "kind": "pkg", "name": "rec", "path": null, "summary": "External package 'rec' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/transaction_form.py", "kind": "module", "name": "modules.inventory.transaction_form", "path": "modules/inventory/transaction_form.py", "summary": "Module modules.inventory.transaction_form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/transactions.py", "kind": "module", "name": "modules.inventory.transactions", "path": "modules/inventory/transactions.py", "summary": "Read-only Transactions view for Inventory.  Features: - Filters: Product (All), Date From, Date To, Limit (50/100/500) - Live reload on filter changes + an explicit Refresh button - CSV export of the current table - Reuses TransactionsTableModel (columns: ID, Date, Type, Product, Qty, UoM, Notes)  Update: - Date edito…", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/inventory/transactions.py:TransactionsView", "kind": "class", "name": "TransactionsView", "path": "modules/inventory/transactions.py", "summary": "Read-only view of inventory transactions with simple filters.", "tags": null, "range": {"lines": [40, 283], "bytes": [905, 10094]}, "parent": "mod:modules/inventory/transactions.py"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView.__init__", "kind": "function", "name": "TransactionsView.__init__", "path": "modules/inventory/transactions.py", "summary": "`repo` can be an InventoryRepo OR a raw sqlite3.Connection. We normalize where needed.", "tags": null, "range": {"lines": [43, 141], "bytes": [1011, 4788]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView._setup_date_edit", "kind": "function", "name": "TransactionsView._setup_date_edit", "path": "modules/inventory/transactions.py", "summary": "Configure a date edit. We keep a sentinel minimum date (to allow 'no filter' if needed) but default the visible date to 'today' instead of the minimum.", "tags": null, "range": {"lines": [146, 156], "bytes": [4960, 5556]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView._load_products", "kind": "function", "name": "TransactionsView._load_products", "path": "modules/inventory/transactions.py", "summary": "Populate product combo box. First item is '(All)' with userData=None.  Works whether self.repo is InventoryRepo (has `.conn`) or a raw sqlite3.Connection.", "tags": null, "range": {"lines": [158, 188], "bytes": [5557, 6714]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView.selected_product_id", "kind": "function", "name": "TransactionsView.selected_product_id", "path": "modules/inventory/transactions.py", "summary": "Method TransactionsView.selected_product_id.", "tags": null, "range": {"lines": [194, 195], "bytes": [6929, 7027]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView.date_from_str", "kind": "function", "name": "TransactionsView.date_from_str", "path": "modules/inventory/transactions.py", "summary": "Method TransactionsView.date_from_str.", "tags": null, "range": {"lines": [198, 203], "bytes": [7042, 7263]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView.date_to_str", "kind": "function", "name": "TransactionsView.date_to_str", "path": "modules/inventory/transactions.py", "summary": "Method TransactionsView.date_to_str.", "tags": null, "range": {"lines": [206, 211], "bytes": [7278, 7491]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView.limit_value", "kind": "function", "name": "TransactionsView.limit_value", "path": "modules/inventory/transactions.py", "summary": "Method TransactionsView.limit_value.", "tags": null, "range": {"lines": [214, 219], "bytes": [7506, 7673]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView._reload", "kind": "function", "name": "TransactionsView._reload", "path": "modules/inventory/transactions.py", "summary": "Reload table with current filters.", "tags": null, "range": {"lines": [224, 242], "bytes": [7842, 8603]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "sym:modules/inventory/transactions.py:TransactionsView._on_export_csv", "kind": "function", "name": "TransactionsView._on_export_csv", "path": "modules/inventory/transactions.py", "summary": "Export the current table data to CSV (UTF-8). Gracefully handle empty data.", "tags": null, "range": {"lines": [244, 283], "bytes": [8604, 10094]}, "parent": "sym:modules/inventory/transactions.py:TransactionsView"}
{"id": "pkg:lbl_from", "kind": "pkg", "name": "lbl_from", "path": null, "summary": "External package 'lbl_from' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_to", "kind": "pkg", "name": "lbl_to", "path": null, "summary": "External package 'lbl_to' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_limit", "kind": "pkg", "name": "lbl_limit", "path": null, "summary": "External package 'lbl_limit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:writer", "kind": "pkg", "name": "writer", "path": null, "summary": "External package 'writer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:row_out", "kind": "pkg", "name": "row_out", "path": null, "summary": "External package 'row_out' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:idx", "kind": "pkg", "name": "idx", "path": null, "summary": "External package 'idx' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/inventory/view.py", "kind": "module", "name": "modules.inventory.view", "path": "modules/inventory/view.py", "summary": "Module modules.inventory.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/inventory/view.py:InventoryView", "kind": "class", "name": "InventoryView", "path": "modules/inventory/view.py", "summary": "Class InventoryView.", "tags": null, "range": {"lines": [13, 103], "bytes": [275, 3710]}, "parent": "mod:modules/inventory/view.py"}
{"id": "sym:modules/inventory/view.py:InventoryView.__init__", "kind": "function", "name": "InventoryView.__init__", "path": "modules/inventory/view.py", "summary": "Method InventoryView.__init__.", "tags": null, "range": {"lines": [14, 74], "bytes": [305, 2887]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.selected_product_id", "kind": "function", "name": "InventoryView.selected_product_id", "path": "modules/inventory/view.py", "summary": "Method InventoryView.selected_product_id.", "tags": null, "range": {"lines": [79, 80], "bytes": [2964, 3059]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.selected_uom_id", "kind": "function", "name": "InventoryView.selected_uom_id", "path": "modules/inventory/view.py", "summary": "Method InventoryView.selected_uom_id.", "tags": null, "range": {"lines": [83, 84], "bytes": [3074, 3161]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.quantity_text", "kind": "function", "name": "InventoryView.quantity_text", "path": "modules/inventory/view.py", "summary": "Method InventoryView.quantity_text.", "tags": null, "range": {"lines": [87, 88], "bytes": [3176, 3263]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.date_text", "kind": "function", "name": "InventoryView.date_text", "path": "modules/inventory/view.py", "summary": "Method InventoryView.date_text.", "tags": null, "range": {"lines": [91, 92], "bytes": [3278, 3362]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.notes_text", "kind": "function", "name": "InventoryView.notes_text", "path": "modules/inventory/view.py", "summary": "Method InventoryView.notes_text.", "tags": null, "range": {"lines": [95, 97], "bytes": [3377, 3496]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "sym:modules/inventory/view.py:InventoryView.reset_inputs", "kind": "function", "name": "InventoryView.reset_inputs", "path": "modules/inventory/view.py", "summary": "Call after a successful save if you want to clear just the entry bits.", "tags": null, "range": {"lines": [99, 103], "bytes": [3497, 3710]}, "parent": "sym:modules/inventory/view.py:InventoryView"}
{"id": "pkg:QDoubleValidator", "kind": "pkg", "name": "QDoubleValidator", "path": null, "summary": "External package 'QDoubleValidator' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dv", "kind": "pkg", "name": "dv", "path": null, "summary": "External package 'dv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/login/__init__.py", "kind": "module", "name": "modules.login", "path": "modules/login/__init__.py", "summary": "Login module package exports.  - LoginController: orchestrates the login flow (reads users from DB, verifies password). - LoginForm: simple username/password dialog (Qt). Imported lazily to stay usable   in headless/test environments where Qt might not be available.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/login/controller.py", "kind": "module", "name": "modules.login.controller", "path": "modules/login/controller.py", "summary": "Module modules.login.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/login/controller.py:LoginController", "kind": "class", "name": "LoginController", "path": "modules/login/controller.py", "summary": "Login flow using LoginRepo for all DB I/O.  Public attrs (set after each prompt()):   - last_error_code: str | None   - last_error_message: str | None   - last_username: str | None", "tags": null, "range": {"lines": [11, 132], "bytes": [233, 5102]}, "parent": "mod:modules/login/controller.py"}
{"id": "sym:modules/login/controller.py:LoginController.__init__", "kind": "function", "name": "LoginController.__init__", "path": "modules/login/controller.py", "summary": "Method LoginController.__init__.", "tags": null, "range": {"lines": [25, 32], "bytes": [653, 969]}, "parent": "sym:modules/login/controller.py:LoginController"}
{"id": "sym:modules/login/controller.py:LoginController.prompt", "kind": "function", "name": "LoginController.prompt", "path": "modules/login/controller.py", "summary": "Show the dialog and attempt login. Returns a user dict on success, or None on failure/cancel. On failure, last_error_code / last_error_message / last_username are set.", "tags": null, "range": {"lines": [36, 102], "bytes": [1048, 3857]}, "parent": "sym:modules/login/controller.py:LoginController"}
{"id": "sym:modules/login/controller.py:LoginController._reset_last_error", "kind": "function", "name": "LoginController._reset_last_error", "path": "modules/login/controller.py", "summary": "Method LoginController._reset_last_error.", "tags": null, "range": {"lines": [106, 109], "bytes": [3935, 4085]}, "parent": "sym:modules/login/controller.py:LoginController"}
{"id": "sym:modules/login/controller.py:LoginController._fail", "kind": "function", "name": "LoginController._fail", "path": "modules/login/controller.py", "summary": "Method LoginController._fail.", "tags": null, "range": {"lines": [111, 118], "bytes": [4086, 4511]}, "parent": "sym:modules/login/controller.py:LoginController"}
{"id": "sym:modules/login/controller.py:LoginController._is_currently_locked", "kind": "function", "name": "LoginController._is_currently_locked", "path": "modules/login/controller.py", "summary": "Return True if locked_until is set in the future relative to CURRENT_TIMESTAMP. Use SQLite to compare timestamps to avoid client TZ parsing assumptions.", "tags": null, "range": {"lines": [120, 132], "bytes": [4512, 5102]}, "parent": "sym:modules/login/controller.py:LoginController"}
{"id": "pkg:LoginRepo", "kind": "pkg", "name": "LoginRepo", "path": null, "summary": "External package 'LoginRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:LoginForm", "kind": "pkg", "name": "LoginForm", "path": null, "summary": "External package 'LoginForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:verify_password", "kind": "pkg", "name": "verify_password", "path": null, "summary": "External package 'verify_password' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:u", "kind": "pkg", "name": "u", "path": null, "summary": "External package 'u' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:user_row", "kind": "pkg", "name": "user_row", "path": null, "summary": "External package 'user_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/login/form.py", "kind": "module", "name": "modules.login.form", "path": "modules/login/form.py", "summary": "Module modules.login.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/login/form.py:LoginForm", "kind": "class", "name": "LoginForm", "path": "modules/login/form.py", "summary": "Class LoginForm.", "tags": null, "range": {"lines": [3, 19], "bytes": [81, 800]}, "parent": "mod:modules/login/form.py"}
{"id": "sym:modules/login/form.py:LoginForm.__init__", "kind": "function", "name": "LoginForm.__init__", "path": "modules/login/form.py", "summary": "Method LoginForm.__init__.", "tags": null, "range": {"lines": [4, 16], "bytes": [107, 688]}, "parent": "sym:modules/login/form.py:LoginForm"}
{"id": "sym:modules/login/form.py:LoginForm.get_values", "kind": "function", "name": "LoginForm.get_values", "path": "modules/login/form.py", "summary": "Method LoginForm.get_values.", "tags": null, "range": {"lines": [18, 19], "bytes": [689, 800]}, "parent": "sym:modules/login/form.py:LoginForm"}
{"id": "mod:modules/login/model.py", "kind": "module", "name": "modules.login.model", "path": "modules/login/model.py", "summary": "Module modules.login.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/login/model.py:UserSession", "kind": "class", "name": "UserSession", "path": "modules/login/model.py", "summary": "App-facing user object (no secrets).  Fields mirror what the controller returns on successful login.", "tags": null, "range": {"lines": [9, 37], "bytes": [184, 1064]}, "parent": "mod:modules/login/model.py"}
{"id": "sym:modules/login/model.py:UserSession.from_mapping", "kind": "function", "name": "UserSession.from_mapping", "path": "modules/login/model.py", "summary": "Build from any dict/mapping with the expected keys. Safe to use with sqlite3.Row or a plain dict.", "tags": null, "range": {"lines": [24, 37], "bytes": [554, 1064]}, "parent": "sym:modules/login/model.py:UserSession"}
{"id": "pkg:cls", "kind": "pkg", "name": "cls", "path": null, "summary": "External package 'cls' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/login/view.py", "kind": "module", "name": "modules.login.view", "path": "modules/login/view.py", "summary": "Module modules.login.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/login/view.py:LoginDialog", "kind": "class", "name": "LoginDialog", "path": "modules/login/view.py", "summary": "Enhanced login dialog (UI-only).  API kept compatible with the basic form:   - exec() -> int (Accepted / Rejected)   - get_values() -> tuple[str, str]  Extra helpers the controller MAY use (optional):   - set_error(msg: str | None)   - set_info(msg: str | None)   - show_busy(is_busy: bool)  No database or business log…", "tags": null, "range": {"lines": [12, 142], "bytes": [304, 4868]}, "parent": "mod:modules/login/view.py"}
{"id": "sym:modules/login/view.py:LoginDialog.__init__", "kind": "function", "name": "LoginDialog.__init__", "path": "modules/login/view.py", "summary": "Method LoginDialog.__init__.", "tags": null, "range": {"lines": [28, 102], "bytes": [713, 3470]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "sym:modules/login/view.py:LoginDialog.get_values", "kind": "function", "name": "LoginDialog.get_values", "path": "modules/login/view.py", "summary": "Returns (username, password) without trimming password. Username is stripped by the controller if desired.", "tags": null, "range": {"lines": [106, 111], "bytes": [3511, 3761]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "sym:modules/login/view.py:LoginDialog.set_error", "kind": "function", "name": "LoginDialog.set_error", "path": "modules/login/view.py", "summary": "Show or clear an error banner.", "tags": null, "range": {"lines": [113, 120], "bytes": [3762, 4051]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "sym:modules/login/view.py:LoginDialog.set_info", "kind": "function", "name": "LoginDialog.set_info", "path": "modules/login/view.py", "summary": "Show or clear an informational banner.", "tags": null, "range": {"lines": [122, 129], "bytes": [4052, 4344]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "sym:modules/login/view.py:LoginDialog.show_busy", "kind": "function", "name": "LoginDialog.show_busy", "path": "modules/login/view.py", "summary": "Simple busy state: disable inputs and buttons. (No spinner to keep dependencies minimal.)", "tags": null, "range": {"lines": [131, 137], "bytes": [4345, 4675]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "sym:modules/login/view.py:LoginDialog._toggle_password_visibility", "kind": "function", "name": "LoginDialog._toggle_password_visibility", "path": "modules/login/view.py", "summary": "Method LoginDialog._toggle_password_visibility.", "tags": null, "range": {"lines": [141, 142], "bytes": [4715, 4868]}, "parent": "sym:modules/login/view.py:LoginDialog"}
{"id": "pkg:pw_row", "kind": "pkg", "name": "pw_row", "path": null, "summary": "External package 'pw_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pw_container", "kind": "pkg", "name": "pw_container", "path": null, "summary": "External package 'pw_container' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/__init__.py", "kind": "module", "name": "modules.product", "path": "modules/product/__init__.py", "summary": "Product module package exports.  - ProductController: orchestrates product CRUD and UoM role management. - Optional UI parts (ProductView, ProductForm, UomPicker, UomManagerDialog)   and models (ProductsTableModel, ProductFilterProxy) are imported defensively   so tests/headless environments can import this package wi…", "tags": null, "range": null, "parent": null}
{"id": "pkg:uom_management", "kind": "pkg", "name": "uom_management", "path": null, "summary": "External package 'uom_management' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/controller.py", "kind": "module", "name": "modules.product.controller", "path": "modules/product/controller.py", "summary": "Module modules.product.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/product/controller.py:ProductController", "kind": "class", "name": "ProductController", "path": "modules/product/controller.py", "summary": "Class ProductController.", "tags": null, "range": {"lines": [12, 127], "bytes": [371, 4668]}, "parent": "mod:modules/product/controller.py"}
{"id": "sym:modules/product/controller.py:ProductController.__init__", "kind": "function", "name": "ProductController.__init__", "path": "modules/product/controller.py", "summary": "Method ProductController.__init__.", "tags": null, "range": {"lines": [13, 19], "bytes": [408, 681]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController.get_widget", "kind": "function", "name": "ProductController.get_widget", "path": "modules/product/controller.py", "summary": "Method ProductController.get_widget.", "tags": null, "range": {"lines": [21, 22], "bytes": [682, 744]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._connect_signals", "kind": "function", "name": "ProductController._connect_signals", "path": "modules/product/controller.py", "summary": "Method ProductController._connect_signals.", "tags": null, "range": {"lines": [24, 32], "bytes": [745, 1155]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._build_model", "kind": "function", "name": "ProductController._build_model", "path": "modules/product/controller.py", "summary": "Method ProductController._build_model.", "tags": null, "range": {"lines": [34, 42], "bytes": [1156, 1582]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._reload", "kind": "function", "name": "ProductController._reload", "path": "modules/product/controller.py", "summary": "Method ProductController._reload.", "tags": null, "range": {"lines": [44, 45], "bytes": [1583, 1634]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._apply_filter", "kind": "function", "name": "ProductController._apply_filter", "path": "modules/product/controller.py", "summary": "Method ProductController._apply_filter.", "tags": null, "range": {"lines": [47, 48], "bytes": [1635, 1747]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._selected_id", "kind": "function", "name": "ProductController._selected_id", "path": "modules/product/controller.py", "summary": "Method ProductController._selected_id.", "tags": null, "range": {"lines": [50, 55], "bytes": [1748, 2012]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._add", "kind": "function", "name": "ProductController._add", "path": "modules/product/controller.py", "summary": "Method ProductController._add.", "tags": null, "range": {"lines": [57, 81], "bytes": [2013, 3042]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._edit", "kind": "function", "name": "ProductController._edit", "path": "modules/product/controller.py", "summary": "Method ProductController._edit.", "tags": null, "range": {"lines": [83, 118], "bytes": [3043, 4379]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "sym:modules/product/controller.py:ProductController._delete", "kind": "function", "name": "ProductController._delete", "path": "modules/product/controller.py", "summary": "Method ProductController._delete.", "tags": null, "range": {"lines": [120, 127], "bytes": [4380, 4668]}, "parent": "sym:modules/product/controller.py:ProductController"}
{"id": "pkg:ProductView", "kind": "pkg", "name": "ProductView", "path": null, "summary": "External package 'ProductView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ProductsTableModel", "kind": "pkg", "name": "ProductsTableModel", "path": null, "summary": "External package 'ProductsTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:src_index", "kind": "pkg", "name": "src_index", "path": null, "summary": "External package 'src_index' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ProductForm", "kind": "pkg", "name": "ProductForm", "path": null, "summary": "External package 'ProductForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:all_alts", "kind": "pkg", "name": "all_alts", "path": null, "summary": "External package 'all_alts' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/details.py", "kind": "module", "name": "modules.product.details", "path": "modules/product/details.py", "summary": "Module modules.product.details.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/form.py", "kind": "module", "name": "modules.product.form", "path": "modules/product/form.py", "summary": "Module modules.product.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/product/form.py:UomPicker", "kind": "class", "name": "UomPicker", "path": "modules/product/form.py", "summary": "Editable combo with DB suggestions + inline create. Works even when you click 'Add Alternate' (no need to press Enter).", "tags": null, "range": {"lines": [10, 60], "bytes": [410, 2240]}, "parent": "mod:modules/product/form.py"}
{"id": "sym:modules/product/form.py:UomPicker.__init__", "kind": "function", "name": "UomPicker.__init__", "path": "modules/product/form.py", "summary": "Method UomPicker.__init__.", "tags": null, "range": {"lines": [15, 22], "bytes": [582, 847]}, "parent": "sym:modules/product/form.py:UomPicker"}
{"id": "sym:modules/product/form.py:UomPicker._reload", "kind": "function", "name": "UomPicker._reload", "path": "modules/product/form.py", "summary": "Method UomPicker._reload.", "tags": null, "range": {"lines": [24, 34], "bytes": [856, 1292]}, "parent": "sym:modules/product/form.py:UomPicker"}
{"id": "sym:modules/product/form.py:UomPicker._ensure_current_exists", "kind": "function", "name": "UomPicker._ensure_current_exists", "path": "modules/product/form.py", "summary": "If the typed text doesn't match the selected item, create/select it.", "tags": null, "range": {"lines": [36, 54], "bytes": [1301, 2004]}, "parent": "sym:modules/product/form.py:UomPicker"}
{"id": "sym:modules/product/form.py:UomPicker.current_uom_id", "kind": "function", "name": "UomPicker.current_uom_id", "path": "modules/product/form.py", "summary": "Method UomPicker.current_uom_id.", "tags": null, "range": {"lines": [56, 60], "bytes": [2017, 2240]}, "parent": "sym:modules/product/form.py:UomPicker"}
{"id": "sym:modules/product/form.py:ProductForm", "kind": "class", "name": "ProductForm", "path": "modules/product/form.py", "summary": "Class ProductForm.", "tags": null, "range": {"lines": [62, 374], "bytes": [2241, 15462]}, "parent": "mod:modules/product/form.py"}
{"id": "sym:modules/product/form.py:ProductForm.__init__", "kind": "function", "name": "ProductForm.__init__", "path": "modules/product/form.py", "summary": "Method ProductForm.__init__.", "tags": null, "range": {"lines": [63, 215], "bytes": [2269, 9184]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._toggle_blocks", "kind": "function", "name": "ProductForm._toggle_blocks", "path": "modules/product/form.py", "summary": "Method ProductForm._toggle_blocks.", "tags": null, "range": {"lines": [218, 225], "bytes": [9229, 9659]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._uom_name", "kind": "function", "name": "ProductForm._uom_name", "path": "modules/product/form.py", "summary": "Method ProductForm._uom_name.", "tags": null, "range": {"lines": [227, 231], "bytes": [9672, 9864]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._append_unique", "kind": "function", "name": "ProductForm._append_unique", "path": "modules/product/form.py", "summary": "Method ProductForm._append_unique.", "tags": null, "range": {"lines": [233, 238], "bytes": [9873, 10141]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._refresh_tables", "kind": "function", "name": "ProductForm._refresh_tables", "path": "modules/product/form.py", "summary": "Method ProductForm._refresh_tables.", "tags": null, "range": {"lines": [240, 245], "bytes": [10150, 10492]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._selected_table_and_row", "kind": "function", "name": "ProductForm._selected_table_and_row", "path": "modules/product/form.py", "summary": "Return ('sales', row) based on which table actually has a selection.", "tags": null, "range": {"lines": [247, 252], "bytes": [10505, 10774]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._ensure_base_selected", "kind": "function", "name": "ProductForm._ensure_base_selected", "path": "modules/product/form.py", "summary": "Method ProductForm._ensure_base_selected.", "tags": null, "range": {"lines": [255, 258], "bytes": [10835, 11006]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._add_sales_alt", "kind": "function", "name": "ProductForm._add_sales_alt", "path": "modules/product/form.py", "summary": "Method ProductForm._add_sales_alt.", "tags": null, "range": {"lines": [260, 271], "bytes": [11015, 11532]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._remove_selected_alt", "kind": "function", "name": "ProductForm._remove_selected_alt", "path": "modules/product/form.py", "summary": "Method ProductForm._remove_selected_alt.", "tags": null, "range": {"lines": [273, 288], "bytes": [11541, 12214]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm._set_selected_as_base", "kind": "function", "name": "ProductForm._set_selected_as_base", "path": "modules/product/form.py", "summary": "Method ProductForm._set_selected_as_base.", "tags": null, "range": {"lines": [290, 317], "bytes": [12223, 13390]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm.get_product_payload", "kind": "function", "name": "ProductForm.get_product_payload", "path": "modules/product/form.py", "summary": "Method ProductForm.get_product_payload.", "tags": null, "range": {"lines": [320, 363], "bytes": [13448, 15157]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm.accept", "kind": "function", "name": "ProductForm.accept", "path": "modules/product/form.py", "summary": "Method ProductForm.accept.", "tags": null, "range": {"lines": [365, 371], "bytes": [15166, 15402]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "sym:modules/product/form.py:ProductForm.payload", "kind": "function", "name": "ProductForm.payload", "path": "modules/product/form.py", "summary": "Method ProductForm.payload.", "tags": null, "range": {"lines": [373, 374], "bytes": [15411, 15462]}, "parent": "sym:modules/product/form.py:ProductForm"}
{"id": "pkg:typed", "kind": "pkg", "name": "typed", "path": null, "summary": "External package 'typed' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:name_row", "kind": "pkg", "name": "name_row", "path": null, "summary": "External package 'name_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:min_stock_row", "kind": "pkg", "name": "min_stock_row", "path": null, "summary": "External package 'min_stock_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:flagrow", "kind": "pkg", "name": "flagrow", "path": null, "summary": "External package 'flagrow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:UomPicker", "kind": "pkg", "name": "UomPicker", "path": null, "summary": "External package 'UomPicker' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:srow", "kind": "pkg", "name": "srow", "path": null, "summary": "External package 'srow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sl", "kind": "pkg", "name": "sl", "path": null, "summary": "External package 'sl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:actrow", "kind": "pkg", "name": "actrow", "path": null, "summary": "External package 'actrow' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:next", "kind": "pkg", "name": "next", "path": null, "summary": "External package 'next' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:role", "kind": "pkg", "name": "role", "path": null, "summary": "External package 'role' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lst", "kind": "pkg", "name": "lst", "path": null, "summary": "External package 'lst' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:is_positive_number", "kind": "pkg", "name": "is_positive_number", "path": null, "summary": "External package 'is_positive_number' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tbl", "kind": "pkg", "name": "tbl", "path": null, "summary": "External package 'tbl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/model.py", "kind": "module", "name": "modules.product.model", "path": "modules/product/model.py", "summary": "Module modules.product.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/product/model.py:ProductsTableModel", "kind": "class", "name": "ProductsTableModel", "path": "modules/product/model.py", "summary": "Class ProductsTableModel.", "tags": null, "range": {"lines": [4, 43], "bytes": [124, 1575]}, "parent": "mod:modules/product/model.py"}
{"id": "sym:modules/product/model.py:ProductsTableModel.__init__", "kind": "function", "name": "ProductsTableModel.__init__", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.__init__.", "tags": null, "range": {"lines": [7, 9], "bytes": [245, 343]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.rowCount", "kind": "function", "name": "ProductsTableModel.rowCount", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.rowCount.", "tags": null, "range": {"lines": [12, 13], "bytes": [374, 452]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.columnCount", "kind": "function", "name": "ProductsTableModel.columnCount", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.columnCount.", "tags": null, "range": {"lines": [15, 16], "bytes": [461, 544]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.data", "kind": "function", "name": "ProductsTableModel.data", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.data.", "tags": null, "range": {"lines": [18, 25], "bytes": [553, 905]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.headerData", "kind": "function", "name": "ProductsTableModel.headerData", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.headerData.", "tags": null, "range": {"lines": [27, 30], "bytes": [914, 1154]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.at", "kind": "function", "name": "ProductsTableModel.at", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.at.", "tags": null, "range": {"lines": [32, 33], "bytes": [1163, 1233]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.replace", "kind": "function", "name": "ProductsTableModel.replace", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.replace.", "tags": null, "range": {"lines": [35, 38], "bytes": [1242, 1372]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductsTableModel.row_as_text", "kind": "function", "name": "ProductsTableModel.row_as_text", "path": "modules/product/model.py", "summary": "Method ProductsTableModel.row_as_text.", "tags": null, "range": {"lines": [41, 43], "bytes": [1414, 1575]}, "parent": "sym:modules/product/model.py:ProductsTableModel"}
{"id": "sym:modules/product/model.py:ProductFilterProxy", "kind": "class", "name": "ProductFilterProxy", "path": "modules/product/model.py", "summary": "Class ProductFilterProxy.", "tags": null, "range": {"lines": [48, 57], "bytes": [1684, 2093]}, "parent": "mod:modules/product/model.py"}
{"id": "sym:modules/product/model.py:ProductFilterProxy.filterAcceptsRow", "kind": "function", "name": "ProductFilterProxy.filterAcceptsRow", "path": "modules/product/model.py", "summary": "Method ProductFilterProxy.filterAcceptsRow.", "tags": null, "range": {"lines": [49, 57], "bytes": [1733, 2093]}, "parent": "sym:modules/product/model.py:ProductFilterProxy"}
{"id": "pkg:pattern", "kind": "pkg", "name": "pattern", "path": null, "summary": "External package 'pattern' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hasMatch", "kind": "pkg", "name": "hasMatch", "path": null, "summary": "External package 'hasMatch' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:match", "kind": "pkg", "name": "match", "path": null, "summary": "External package 'match' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/uom_management.py", "kind": "module", "name": "modules.product.uom_management", "path": "modules/product/uom_management.py", "summary": "Module modules.product.uom_management.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog", "kind": "class", "name": "UomManagerDialog", "path": "modules/product/uom_management.py", "summary": "Class UomManagerDialog.", "tags": null, "range": {"lines": [23, 181], "bytes": [839, 7306]}, "parent": "mod:modules/product/uom_management.py"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog.__init__", "kind": "function", "name": "UomManagerDialog.__init__", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog.__init__.", "tags": null, "range": {"lines": [24, 78], "bytes": [872, 3063]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog._reload", "kind": "function", "name": "UomManagerDialog._reload", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog._reload.", "tags": null, "range": {"lines": [80, 94], "bytes": [3064, 3772]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog._selected_map_id_and_uom", "kind": "function", "name": "UomManagerDialog._selected_map_id_and_uom", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog._selected_map_id_and_uom.", "tags": null, "range": {"lines": [96, 103], "bytes": [3773, 4079]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog._set_base", "kind": "function", "name": "UomManagerDialog._set_base", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog._set_base.", "tags": null, "range": {"lines": [105, 123], "bytes": [4080, 4833]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog._remove_alt", "kind": "function", "name": "UomManagerDialog._remove_alt", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog._remove_alt.", "tags": null, "range": {"lines": [125, 136], "bytes": [4834, 5400]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:UomManagerDialog._add_alt", "kind": "function", "name": "UomManagerDialog._add_alt", "path": "modules/product/uom_management.py", "summary": "Method UomManagerDialog._add_alt.", "tags": null, "range": {"lines": [138, 181], "bytes": [5401, 7306]}, "parent": "sym:modules/product/uom_management.py:UomManagerDialog"}
{"id": "sym:modules/product/uom_management.py:_is_pos", "kind": "function", "name": "_is_pos", "path": "modules/product/uom_management.py", "summary": "Function _is_pos.", "tags": null, "range": {"lines": [16, 20], "bytes": [693, 837]}, "parent": "mod:modules/product/uom_management.py"}
{"id": "pkg:add_row", "kind": "pkg", "name": "add_row", "path": null, "summary": "External package 'add_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:startswith", "kind": "pkg", "name": "startswith", "path": null, "summary": "External package 'startswith' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/product/view.py", "kind": "module", "name": "modules.product.view", "path": "modules/product/view.py", "summary": "Module modules.product.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/product/view.py:ProductView", "kind": "class", "name": "ProductView", "path": "modules/product/view.py", "summary": "Class ProductView.", "tags": null, "range": {"lines": [4, 26], "bytes": [141, 945]}, "parent": "mod:modules/product/view.py"}
{"id": "sym:modules/product/view.py:ProductView.__init__", "kind": "function", "name": "ProductView.__init__", "path": "modules/product/view.py", "summary": "Method ProductView.__init__.", "tags": null, "range": {"lines": [5, 26], "bytes": [169, 945]}, "parent": "sym:modules/product/view.py:ProductView"}
{"id": "mod:modules/purchase/__init__.py", "kind": "module", "name": "modules.purchase", "path": "modules/purchase/__init__.py", "summary": "Purchase module package exports.  Always available: - PurchaseController  Optional UI/model components (imported defensively so environments without Qt can still import this package): - PurchaseView - PurchasesTableModel - PurchaseItemsModel - PurchaseForm - PurchaseReturnForm - PurchasePaymentDialog - PurchaseDetails…", "tags": null, "range": null, "parent": null}
{"id": "pkg:return_form", "kind": "pkg", "name": "return_form", "path": null, "summary": "External package 'return_form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:item_form", "kind": "pkg", "name": "item_form", "path": null, "summary": "External package 'item_form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/controller.py", "kind": "module", "name": "modules.purchase.controller", "path": "modules/purchase/controller.py", "summary": "Module modules.purchase.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/controller.py:PurchaseController", "kind": "class", "name": "PurchaseController", "path": "modules/purchase/controller.py", "summary": "Class PurchaseController.", "tags": null, "range": {"lines": [48, 870], "bytes": [1923, 36987]}, "parent": "mod:modules/purchase/controller.py"}
{"id": "sym:modules/purchase/controller.py:PurchaseController.__init__", "kind": "function", "name": "PurchaseController.__init__", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController.__init__.", "tags": null, "range": {"lines": [49, 59], "bytes": [1961, 2395]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController.get_widget", "kind": "function", "name": "PurchaseController.get_widget", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController.get_widget.", "tags": null, "range": {"lines": [61, 62], "bytes": [2396, 2458]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._wire", "kind": "function", "name": "PurchaseController._wire", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._wire.", "tags": null, "range": {"lines": [64, 70], "bytes": [2459, 2827]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._build_model", "kind": "function", "name": "PurchaseController._build_model", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._build_model.", "tags": null, "range": {"lines": [72, 86], "bytes": [2828, 3478]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._reload", "kind": "function", "name": "PurchaseController._reload", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._reload.", "tags": null, "range": {"lines": [88, 94], "bytes": [3479, 3707]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._apply_filter", "kind": "function", "name": "PurchaseController._apply_filter", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._apply_filter.", "tags": null, "range": {"lines": [96, 97], "bytes": [3708, 3820]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._selected_row_dict", "kind": "function", "name": "PurchaseController._selected_row_dict", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._selected_row_dict.", "tags": null, "range": {"lines": [99, 104], "bytes": [3821, 4061]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._sync_details", "kind": "function", "name": "PurchaseController._sync_details", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._sync_details.", "tags": null, "range": {"lines": [106, 112], "bytes": [4062, 4328]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._returnable_map", "kind": "function", "name": "PurchaseController._returnable_map", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._returnable_map.", "tags": null, "range": {"lines": [115, 132], "bytes": [4393, 5121]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._get_payment", "kind": "function", "name": "PurchaseController._get_payment", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._get_payment.", "tags": null, "range": {"lines": [135, 146], "bytes": [5203, 5681]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._fetch_purchase_financials", "kind": "function", "name": "PurchaseController._fetch_purchase_financials", "path": "modules/purchase/controller.py", "summary": "Returns: total_amount, paid_amount, advance_payment_applied, calculated_total_amount, remaining_due remaining_due = calculated_total_amount - paid_amount - advance_payment_applied (clamped ≥ 0)", "tags": null, "range": {"lines": [149, 185], "bytes": [5757, 7345]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._remaining_due_header", "kind": "function", "name": "PurchaseController._remaining_due_header", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._remaining_due_header.", "tags": null, "range": {"lines": [188, 206], "bytes": [7425, 8165]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._vendor_credit_balance", "kind": "function", "name": "PurchaseController._vendor_credit_balance", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._vendor_credit_balance.", "tags": null, "range": {"lines": [209, 213], "bytes": [8210, 8394]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._add", "kind": "function", "name": "PurchaseController._add", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._add.", "tags": null, "range": {"lines": [216, 384], "bytes": [8424, 16722]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._edit", "kind": "function", "name": "PurchaseController._edit", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._edit.", "tags": null, "range": {"lines": [386, 444], "bytes": [16723, 18801]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._delete", "kind": "function", "name": "PurchaseController._delete", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._delete.", "tags": null, "range": {"lines": [446, 453], "bytes": [18802, 19129]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._return", "kind": "function", "name": "PurchaseController._return", "path": "modules/purchase/controller.py", "summary": "Method PurchaseController._return.", "tags": null, "range": {"lines": [456, 513], "bytes": [19162, 21181]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController.apply_vendor_credit", "kind": "function", "name": "PurchaseController.apply_vendor_credit", "path": "modules/purchase/controller.py", "summary": "Apply existing vendor credit to the selected purchase. - Positive `amount` is required. - Pre-check against min(vendor credit balance, remaining due per header). - Does NOT touch header money fields; DB triggers roll up advance_payment_applied.", "tags": null, "range": {"lines": [516, 567], "bytes": [21252, 23577]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._payment", "kind": "function", "name": "PurchaseController._payment", "path": "modules/purchase/controller.py", "summary": "Record a payment (or refund) using PurchasePaymentsRepo.  Preferred: open the vendor money dialog (mode=\"payment\") and forward its payload to the repo. Fallback: keep the legacy amount-only dialog to avoid breaking existing flows.  Added:   - Pre-check amount vs remaining due (header-based) to mirror trigger math.   -…", "tags": null, "range": {"lines": [570, 720], "bytes": [23648, 30359]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController.mark_payment_cleared", "kind": "function", "name": "PurchaseController.mark_payment_cleared", "path": "modules/purchase/controller.py", "summary": "Mark a pending payment as CLEARED. - Requires the payment to belong to the currently selected purchase. - Sets cleared_date to today if not provided.", "tags": null, "range": {"lines": [723, 753], "bytes": [30435, 31785]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController.mark_payment_bounced", "kind": "function", "name": "PurchaseController.mark_payment_bounced", "path": "modules/purchase/controller.py", "summary": "Mark a pending payment as BOUNCED. - Requires the payment to belong to the currently selected purchase. - Does not set cleared_date.", "tags": null, "range": {"lines": [755, 784], "bytes": [31786, 33047]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._list_company_bank_accounts", "kind": "function", "name": "PurchaseController._list_company_bank_accounts", "path": "modules/purchase/controller.py", "summary": "Returns [{id, name}] for company bank accounts. Lazy-imports a bank accounts repo if present. Safe empty list on failure.", "tags": null, "range": {"lines": [787, 810], "bytes": [33121, 34253]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._list_vendor_bank_accounts", "kind": "function", "name": "PurchaseController._list_vendor_bank_accounts", "path": "modules/purchase/controller.py", "summary": "Returns [{id, name}] for a vendor's bank accounts (if your app supports it). Safe empty list on failure or if repo not present.", "tags": null, "range": {"lines": [812, 841], "bytes": [34254, 35695]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:PurchaseController._list_open_purchases_for_vendor", "kind": "function", "name": "PurchaseController._list_open_purchases_for_vendor", "path": "modules/purchase/controller.py", "summary": "Returns a list of open purchases for a vendor with remaining due > 0. Shape: {purchase_id, date, total, paid, remaining_due}", "tags": null, "range": {"lines": [843, 870], "bytes": [35696, 36987]}, "parent": "sym:modules/purchase/controller.py:PurchaseController"}
{"id": "sym:modules/purchase/controller.py:new_purchase_id", "kind": "function", "name": "new_purchase_id", "path": "modules/purchase/controller.py", "summary": "Function new_purchase_id.", "tags": null, "range": {"lines": [33, 45], "bytes": [1438, 1921]}, "parent": "mod:modules/purchase/controller.py"}
{"id": "pkg:vendor", "kind": "pkg", "name": "vendor", "path": null, "summary": "External package 'vendor' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:date_str", "kind": "pkg", "name": "date_str", "path": null, "summary": "External package 'date_str' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseView", "kind": "pkg", "name": "PurchaseView", "path": null, "summary": "External package 'PurchaseView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchasesRepo", "kind": "pkg", "name": "PurchasesRepo", "path": null, "summary": "External package 'PurchasesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorsRepo", "kind": "pkg", "name": "VendorsRepo", "path": null, "summary": "External package 'VendorsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchasesTableModel", "kind": "pkg", "name": "PurchasesTableModel", "path": null, "summary": "External package 'PurchasesTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseForm", "kind": "pkg", "name": "PurchaseForm", "path": null, "summary": "External package 'PurchaseForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseHeader", "kind": "pkg", "name": "PurchaseHeader", "path": null, "summary": "External package 'PurchaseHeader' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseItem", "kind": "pkg", "name": "PurchaseItem", "path": null, "summary": "External package 'PurchaseItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:items_for_form", "kind": "pkg", "name": "items_for_form", "path": null, "summary": "External package 'items_for_form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseReturnForm", "kind": "pkg", "name": "PurchaseReturnForm", "path": null, "summary": "External package 'PurchaseReturnForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:open_vendor_money_form", "kind": "pkg", "name": "open_vendor_money_form", "path": null, "summary": "External package 'open_vendor_money_form' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:method", "kind": "pkg", "name": "method", "path": null, "summary": "External package 'method' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchasePaymentDialog", "kind": "pkg", "name": "PurchasePaymentDialog", "path": null, "summary": "External package 'PurchasePaymentDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:BankAccountsRepo", "kind": "pkg", "name": "BankAccountsRepo", "path": null, "summary": "External package 'BankAccountsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorBankAccountsRepo", "kind": "pkg", "name": "VendorBankAccountsRepo", "path": null, "summary": "External package 'VendorBankAccountsRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/details.py", "kind": "module", "name": "modules.purchase.details", "path": "modules/purchase/details.py", "summary": "Module modules.purchase.details.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/details.py:PurchaseDetails", "kind": "class", "name": "PurchaseDetails", "path": "modules/purchase/details.py", "summary": "Class PurchaseDetails.", "tags": null, "range": {"lines": [5, 46], "bytes": [153, 1960]}, "parent": "mod:modules/purchase/details.py"}
{"id": "sym:modules/purchase/details.py:PurchaseDetails.__init__", "kind": "function", "name": "PurchaseDetails.__init__", "path": "modules/purchase/details.py", "summary": "Method PurchaseDetails.__init__.", "tags": null, "range": {"lines": [6, 29], "bytes": [185, 1130]}, "parent": "sym:modules/purchase/details.py:PurchaseDetails"}
{"id": "sym:modules/purchase/details.py:PurchaseDetails.set_data", "kind": "function", "name": "PurchaseDetails.set_data", "path": "modules/purchase/details.py", "summary": "Method PurchaseDetails.set_data.", "tags": null, "range": {"lines": [31, 46], "bytes": [1139, 1960]}, "parent": "sym:modules/purchase/details.py:PurchaseDetails"}
{"id": "mod:modules/purchase/form.py", "kind": "module", "name": "modules.purchase.form", "path": "modules/purchase/form.py", "summary": "Module modules.purchase.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/form.py:PurchaseForm", "kind": "class", "name": "PurchaseForm", "path": "modules/purchase/form.py", "summary": "Class PurchaseForm.", "tags": null, "range": {"lines": [14, 546], "bytes": [579, 22528]}, "parent": "mod:modules/purchase/form.py"}
{"id": "sym:modules/purchase/form.py:PurchaseForm.__init__", "kind": "function", "name": "PurchaseForm.__init__", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm.__init__.", "tags": null, "range": {"lines": [18, 194], "bytes": [719, 8094]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._reload_company_accounts", "kind": "function", "name": "PurchaseForm._reload_company_accounts", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._reload_company_accounts.", "tags": null, "range": {"lines": [197, 207], "bytes": [8169, 8611]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._reload_vendor_accounts", "kind": "function", "name": "PurchaseForm._reload_vendor_accounts", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._reload_vendor_accounts.", "tags": null, "range": {"lines": [209, 229], "bytes": [8612, 9417]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._refresh_ip_visibility", "kind": "function", "name": "PurchaseForm._refresh_ip_visibility", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._refresh_ip_visibility.", "tags": null, "range": {"lines": [231, 253], "bytes": [9418, 10811]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._all_products", "kind": "function", "name": "PurchaseForm._all_products", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._all_products.", "tags": null, "range": {"lines": [256, 257], "bytes": [10866, 10940]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._base_uom_id", "kind": "function", "name": "PurchaseForm._base_uom_id", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._base_uom_id.", "tags": null, "range": {"lines": [259, 263], "bytes": [10941, 11176]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._delete_row_for_button", "kind": "function", "name": "PurchaseForm._delete_row_for_button", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._delete_row_for_button.", "tags": null, "range": {"lines": [265, 271], "bytes": [11177, 11488]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._add_row", "kind": "function", "name": "PurchaseForm._add_row", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._add_row.", "tags": null, "range": {"lines": [273, 322], "bytes": [11489, 13492]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._reindex_rows", "kind": "function", "name": "PurchaseForm._reindex_rows", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._reindex_rows.", "tags": null, "range": {"lines": [324, 327], "bytes": [13493, 13659]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._rebuild_table", "kind": "function", "name": "PurchaseForm._rebuild_table", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._rebuild_table.", "tags": null, "range": {"lines": [329, 338], "bytes": [13660, 13967]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._cell_changed", "kind": "function", "name": "PurchaseForm._cell_changed", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._cell_changed.", "tags": null, "range": {"lines": [340, 347], "bytes": [13968, 14309]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._recalc_row", "kind": "function", "name": "PurchaseForm._recalc_row", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._recalc_row.", "tags": null, "range": {"lines": [349, 374], "bytes": [14310, 15044]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._calc_subtotal", "kind": "function", "name": "PurchaseForm._calc_subtotal", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._calc_subtotal.", "tags": null, "range": {"lines": [376, 385], "bytes": [15045, 15395]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._refresh_totals", "kind": "function", "name": "PurchaseForm._refresh_totals", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._refresh_totals.", "tags": null, "range": {"lines": [387, 391], "bytes": [15396, 15594]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm._row_payload", "kind": "function", "name": "PurchaseForm._row_payload", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm._row_payload.", "tags": null, "range": {"lines": [394, 420], "bytes": [15637, 16562]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm.get_payload", "kind": "function", "name": "PurchaseForm.get_payload", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm.get_payload.", "tags": null, "range": {"lines": [422, 537], "bytes": [16563, 22341]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm.accept", "kind": "function", "name": "PurchaseForm.accept", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm.accept.", "tags": null, "range": {"lines": [539, 543], "bytes": [22342, 22475]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:PurchaseForm.payload", "kind": "function", "name": "PurchaseForm.payload", "path": "modules/purchase/form.py", "summary": "Method PurchaseForm.payload.", "tags": null, "range": {"lines": [545, 546], "bytes": [22476, 22528]}, "parent": "sym:modules/purchase/form.py:PurchaseForm"}
{"id": "sym:modules/purchase/form.py:add_pair", "kind": "function", "name": "add_pair", "path": "modules/purchase/form.py", "summary": "Function add_pair.", "tags": null, "range": {"lines": [51, 54], "bytes": [1985, 2147]}, "parent": "mod:modules/purchase/form.py"}
{"id": "sym:modules/purchase/form.py:add_ip", "kind": "function", "name": "add_ip", "path": "modules/purchase/form.py", "summary": "Function add_ip.", "tags": null, "range": {"lines": [123, 126], "bytes": [5158, 5320]}, "parent": "mod:modules/purchase/form.py"}
{"id": "sym:modules/purchase/form.py:on_prod_changed", "kind": "function", "name": "on_prod_changed", "path": "modules/purchase/form.py", "summary": "Function on_prod_changed.", "tags": null, "range": {"lines": [304, 307], "bytes": [12644, 12871]}, "parent": "mod:modules/purchase/form.py"}
{"id": "sym:modules/purchase/form.py:num", "kind": "function", "name": "num", "path": "modules/purchase/form.py", "summary": "Function num.", "tags": null, "range": {"lines": [400, 405], "bytes": [15851, 16051]}, "parent": "mod:modules/purchase/form.py"}
{"id": "sym:modules/purchase/form.py:mark", "kind": "function", "name": "mark", "path": "modules/purchase/form.py", "summary": "Function mark.", "tags": null, "range": {"lines": [361, 364], "bytes": [14613, 14761]}, "parent": "mod:modules/purchase/form.py"}
{"id": "pkg:main_layout", "kind": "pkg", "name": "main_layout", "path": null, "summary": "External package 'main_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hg", "kind": "pkg", "name": "hg", "path": null, "summary": "External package 'hg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ib", "kind": "pkg", "name": "ib", "path": null, "summary": "External package 'ib' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:header", "kind": "pkg", "name": "header", "path": null, "summary": "External package 'header' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:row_btns", "kind": "pkg", "name": "row_btns", "path": null, "summary": "External package 'row_btns' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tot", "kind": "pkg", "name": "tot", "path": null, "summary": "External package 'tot' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ipg", "kind": "pkg", "name": "ipg", "path": null, "summary": "External package 'ipg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:button_box", "kind": "pkg", "name": "button_box", "path": null, "summary": "External package 'button_box' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QScrollArea", "kind": "pkg", "name": "QScrollArea", "path": null, "summary": "External package 'QScrollArea' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:scroll_area", "kind": "pkg", "name": "scroll_area", "path": null, "summary": "External package 'scroll_area' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:final_layout", "kind": "pkg", "name": "final_layout", "path": null, "summary": "External package 'final_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:num", "kind": "pkg", "name": "num", "path": null, "summary": "External package 'num' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cmb_prod", "kind": "pkg", "name": "cmb_prod", "path": null, "summary": "External package 'cmb_prod' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn_del", "kind": "pkg", "name": "btn_del", "path": null, "summary": "External package 'btn_del' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setData", "kind": "pkg", "name": "setData", "path": null, "summary": "External package 'setData' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pre", "kind": "pkg", "name": "pre", "path": null, "summary": "External package 'pre' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setText", "kind": "pkg", "name": "setText", "path": null, "summary": "External package 'setText' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lt_item", "kind": "pkg", "name": "lt_item", "path": null, "summary": "External package 'lt_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:qty_it", "kind": "pkg", "name": "qty_it", "path": null, "summary": "External package 'qty_it' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:buy_it", "kind": "pkg", "name": "buy_it", "path": null, "summary": "External package 'buy_it' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sale_it", "kind": "pkg", "name": "sale_it", "path": null, "summary": "External package 'sale_it' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/item_form.py", "kind": "module", "name": "modules.purchase.item_form", "path": "modules/purchase/item_form.py", "summary": "Module modules.purchase.item_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm", "kind": "class", "name": "PurchaseItemForm", "path": "modules/purchase/item_form.py", "summary": "Class PurchaseItemForm.", "tags": null, "range": {"lines": [6, 271], "bytes": [261, 10630]}, "parent": "mod:modules/purchase/item_form.py"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm.__init__", "kind": "function", "name": "PurchaseItemForm.__init__", "path": "modules/purchase/item_form.py", "summary": "Method PurchaseItemForm.__init__.", "tags": null, "range": {"lines": [7, 66], "bytes": [294, 3060]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm._fetch_product_record", "kind": "function", "name": "PurchaseItemForm._fetch_product_record", "path": "modules/purchase/item_form.py", "summary": "Fetch product record with base UoM information using multiple fallback approaches. Returns dict with product info or None if not found.", "tags": null, "range": {"lines": [68, 116], "bytes": [3065, 4959]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm._resolve_base_uom", "kind": "function", "name": "PurchaseItemForm._resolve_base_uom", "path": "modules/purchase/item_form.py", "summary": "Try repo.get_base_uom(product_id) first. If not available, scan repo.product_uoms(product_id) for is_base=1. Returns (uom_id, unit_name) or None if not found.", "tags": null, "range": {"lines": [118, 144], "bytes": [4964, 6008]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm._on_product_changed", "kind": "function", "name": "PurchaseItemForm._on_product_changed", "path": "modules/purchase/item_form.py", "summary": "Load ONLY the base UoM for the currently selected product (sync, no timers).", "tags": null, "range": {"lines": [146, 218], "bytes": [6013, 8975]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm.get_payload", "kind": "function", "name": "PurchaseItemForm.get_payload", "path": "modules/purchase/item_form.py", "summary": "Method PurchaseItemForm.get_payload.", "tags": null, "range": {"lines": [220, 261], "bytes": [8980, 10423]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm.accept", "kind": "function", "name": "PurchaseItemForm.accept", "path": "modules/purchase/item_form.py", "summary": "Method PurchaseItemForm.accept.", "tags": null, "range": {"lines": [263, 268], "bytes": [10428, 10573]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "sym:modules/purchase/item_form.py:PurchaseItemForm.payload", "kind": "function", "name": "PurchaseItemForm.payload", "path": "modules/purchase/item_form.py", "summary": "Method PurchaseItemForm.payload.", "tags": null, "range": {"lines": [270, 271], "bytes": [10578, 10630]}, "parent": "sym:modules/purchase/item_form.py:PurchaseItemForm"}
{"id": "mod:modules/purchase/items.py", "kind": "module", "name": "modules.purchase.items", "path": "modules/purchase/items.py", "summary": "Module modules.purchase.items.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/items.py:PurchaseItemsView", "kind": "class", "name": "PurchaseItemsView", "path": "modules/purchase/items.py", "summary": "Class PurchaseItemsView.", "tags": null, "range": {"lines": [5, 16], "bytes": [134, 545]}, "parent": "mod:modules/purchase/items.py"}
{"id": "sym:modules/purchase/items.py:PurchaseItemsView.__init__", "kind": "function", "name": "PurchaseItemsView.__init__", "path": "modules/purchase/items.py", "summary": "Method PurchaseItemsView.__init__.", "tags": null, "range": {"lines": [6, 12], "bytes": [168, 424]}, "parent": "sym:modules/purchase/items.py:PurchaseItemsView"}
{"id": "sym:modules/purchase/items.py:PurchaseItemsView.set_rows", "kind": "function", "name": "PurchaseItemsView.set_rows", "path": "modules/purchase/items.py", "summary": "Method PurchaseItemsView.set_rows.", "tags": null, "range": {"lines": [14, 16], "bytes": [425, 545]}, "parent": "sym:modules/purchase/items.py:PurchaseItemsView"}
{"id": "pkg:PurchaseItemsModel", "kind": "pkg", "name": "PurchaseItemsModel", "path": null, "summary": "External package 'PurchaseItemsModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/model.py", "kind": "module", "name": "modules.purchase.model", "path": "modules/purchase/model.py", "summary": "Module modules.purchase.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel", "kind": "class", "name": "PurchasesTableModel", "path": "modules/purchase/model.py", "summary": "Class PurchasesTableModel.", "tags": null, "range": {"lines": [4, 32], "bytes": [104, 1378]}, "parent": "mod:modules/purchase/model.py"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.__init__", "kind": "function", "name": "PurchasesTableModel.__init__", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.__init__.", "tags": null, "range": {"lines": [6, 8], "bytes": [235, 330]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.rowCount", "kind": "function", "name": "PurchasesTableModel.rowCount", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.rowCount.", "tags": null, "range": {"lines": [9, 9], "bytes": [330, 399]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.columnCount", "kind": "function", "name": "PurchasesTableModel.columnCount", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.columnCount.", "tags": null, "range": {"lines": [10, 10], "bytes": [399, 473]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.data", "kind": "function", "name": "PurchasesTableModel.data", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.data.", "tags": null, "range": {"lines": [11, 22], "bytes": [473, 944]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.headerData", "kind": "function", "name": "PurchasesTableModel.headerData", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.headerData.", "tags": null, "range": {"lines": [23, 26], "bytes": [944, 1184]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.at", "kind": "function", "name": "PurchasesTableModel.at", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.at.", "tags": null, "range": {"lines": [27, 28], "bytes": [1184, 1251]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchasesTableModel.replace", "kind": "function", "name": "PurchasesTableModel.replace", "path": "modules/purchase/model.py", "summary": "Method PurchasesTableModel.replace.", "tags": null, "range": {"lines": [29, 32], "bytes": [1251, 1378]}, "parent": "sym:modules/purchase/model.py:PurchasesTableModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel", "kind": "class", "name": "PurchaseItemsModel", "path": "modules/purchase/model.py", "summary": "Class PurchaseItemsModel.", "tags": null, "range": {"lines": [34, 62], "bytes": [1379, 2855]}, "parent": "mod:modules/purchase/model.py"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.__init__", "kind": "function", "name": "PurchaseItemsModel.__init__", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.__init__.", "tags": null, "range": {"lines": [36, 38], "bytes": [1524, 1619]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.rowCount", "kind": "function", "name": "PurchaseItemsModel.rowCount", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.rowCount.", "tags": null, "range": {"lines": [39, 39], "bytes": [1619, 1688]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.columnCount", "kind": "function", "name": "PurchaseItemsModel.columnCount", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.columnCount.", "tags": null, "range": {"lines": [40, 40], "bytes": [1688, 1762]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.data", "kind": "function", "name": "PurchaseItemsModel.data", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.data.", "tags": null, "range": {"lines": [41, 54], "bytes": [1762, 2488]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.headerData", "kind": "function", "name": "PurchaseItemsModel.headerData", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.headerData.", "tags": null, "range": {"lines": [55, 58], "bytes": [2488, 2728]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "sym:modules/purchase/model.py:PurchaseItemsModel.replace", "kind": "function", "name": "PurchaseItemsModel.replace", "path": "modules/purchase/model.py", "summary": "Method PurchaseItemsModel.replace.", "tags": null, "range": {"lines": [59, 62], "bytes": [2728, 2855]}, "parent": "sym:modules/purchase/model.py:PurchaseItemsModel"}
{"id": "mod:modules/purchase/payments.py", "kind": "module", "name": "modules.purchase.payments", "path": "modules/purchase/payments.py", "summary": "Module modules.purchase.payments.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/payments.py:PurchasePaymentDialog", "kind": "class", "name": "PurchasePaymentDialog", "path": "modules/purchase/payments.py", "summary": "Class PurchasePaymentDialog.", "tags": null, "range": {"lines": [4, 36], "bytes": [153, 1266]}, "parent": "mod:modules/purchase/payments.py"}
{"id": "sym:modules/purchase/payments.py:PurchasePaymentDialog.__init__", "kind": "function", "name": "PurchasePaymentDialog.__init__", "path": "modules/purchase/payments.py", "summary": "Method PurchasePaymentDialog.__init__.", "tags": null, "range": {"lines": [5, 23], "bytes": [191, 946]}, "parent": "sym:modules/purchase/payments.py:PurchasePaymentDialog"}
{"id": "sym:modules/purchase/payments.py:PurchasePaymentDialog.value", "kind": "function", "name": "PurchasePaymentDialog.value", "path": "modules/purchase/payments.py", "summary": "Method PurchasePaymentDialog.value.", "tags": null, "range": {"lines": [25, 28], "bytes": [947, 1097]}, "parent": "sym:modules/purchase/payments.py:PurchasePaymentDialog"}
{"id": "sym:modules/purchase/payments.py:PurchasePaymentDialog.accept", "kind": "function", "name": "PurchasePaymentDialog.accept", "path": "modules/purchase/payments.py", "summary": "Method PurchasePaymentDialog.accept.", "tags": null, "range": {"lines": [30, 34], "bytes": [1098, 1223]}, "parent": "sym:modules/purchase/payments.py:PurchasePaymentDialog"}
{"id": "sym:modules/purchase/payments.py:PurchasePaymentDialog.payload", "kind": "function", "name": "PurchasePaymentDialog.payload", "path": "modules/purchase/payments.py", "summary": "Method PurchasePaymentDialog.payload.", "tags": null, "range": {"lines": [36, 36], "bytes": [1224, 1266]}, "parent": "sym:modules/purchase/payments.py:PurchasePaymentDialog"}
{"id": "mod:modules/purchase/return.py", "kind": "module", "name": "modules.purchase.return", "path": "modules/purchase/return.py", "summary": "Module modules.purchase.return.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/return_credits.py", "kind": "module", "name": "modules.purchase.return_credits", "path": "modules/purchase/return_credits.py", "summary": "Module modules.purchase.return_credits.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/return_form.py", "kind": "module", "name": "modules.purchase.return_form", "path": "modules/purchase/return_form.py", "summary": "Module modules.purchase.return_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm", "kind": "class", "name": "PurchaseReturnForm", "path": "modules/purchase/return_form.py", "summary": "Class PurchaseReturnForm.", "tags": null, "range": {"lines": [16, 537], "bytes": [457, 19914]}, "parent": "mod:modules/purchase/return_form.py"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm.__init__", "kind": "function", "name": "PurchaseReturnForm.__init__", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm.__init__.", "tags": null, "range": {"lines": [39, 170], "bytes": [988, 5940]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._load_company_accounts", "kind": "function", "name": "PurchaseReturnForm._load_company_accounts", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._load_company_accounts.", "tags": null, "range": {"lines": [173, 191], "bytes": [5985, 6761]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._load_vendor_accounts", "kind": "function", "name": "PurchaseReturnForm._load_vendor_accounts", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._load_vendor_accounts.", "tags": null, "range": {"lines": [193, 211], "bytes": [6762, 7652]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm.set_items", "kind": "function", "name": "PurchaseReturnForm.set_items", "path": "modules/purchase/return_form.py", "summary": "Accepts flexible keys:   item_id; product_name/name/product; unit_name/uom_name/uom;   quantity/qty/qty_purchased; returned_so_far/returned/qty_returned; returnable;   purchase_price/buy/buy_price/unit_price/unit_cost/cost_price; item_discount/discount/disc", "tags": null, "range": {"lines": [214, 279], "bytes": [7687, 10821]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._snapshot_qtys", "kind": "function", "name": "PurchaseReturnForm._snapshot_qtys", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._snapshot_qtys.", "tags": null, "range": {"lines": [282, 286], "bytes": [10869, 11082]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._poll_scan_qty", "kind": "function", "name": "PurchaseReturnForm._poll_scan_qty", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._poll_scan_qty.", "tags": null, "range": {"lines": [288, 293], "bytes": [11083, 11322]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._cell_changed", "kind": "function", "name": "PurchaseReturnForm._cell_changed", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._cell_changed.", "tags": null, "range": {"lines": [295, 299], "bytes": [11323, 11522]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._item_changed", "kind": "function", "name": "PurchaseReturnForm._item_changed", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._item_changed.", "tags": null, "range": {"lines": [301, 305], "bytes": [11523, 11739]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._meta_for_row", "kind": "function", "name": "PurchaseReturnForm._meta_for_row", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._meta_for_row.", "tags": null, "range": {"lines": [307, 315], "bytes": [11740, 12191]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._recalc_row", "kind": "function", "name": "PurchaseReturnForm._recalc_row", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._recalc_row.", "tags": null, "range": {"lines": [317, 335], "bytes": [12192, 12938]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._recalc_all", "kind": "function", "name": "PurchaseReturnForm._recalc_all", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._recalc_all.", "tags": null, "range": {"lines": [337, 341], "bytes": [12939, 13099]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._refresh_totals", "kind": "function", "name": "PurchaseReturnForm._refresh_totals", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._refresh_totals.", "tags": null, "range": {"lines": [343, 356], "bytes": [13100, 13671]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._toggle_mode", "kind": "function", "name": "PurchaseReturnForm._toggle_mode", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._toggle_mode.", "tags": null, "range": {"lines": [359, 364], "bytes": [13711, 13951]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._default_instrument_date", "kind": "function", "name": "PurchaseReturnForm._default_instrument_date", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._default_instrument_date.", "tags": null, "range": {"lines": [366, 368], "bytes": [13952, 14102]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._current_settlement_mode", "kind": "function", "name": "PurchaseReturnForm._current_settlement_mode", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._current_settlement_mode.", "tags": null, "range": {"lines": [370, 376], "bytes": [14103, 14360]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm.get_payload", "kind": "function", "name": "PurchaseReturnForm.get_payload", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm.get_payload.", "tags": null, "range": {"lines": [379, 481], "bytes": [14397, 18154]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm.accept", "kind": "function", "name": "PurchaseReturnForm.accept", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm.accept.", "tags": null, "range": {"lines": [483, 488], "bytes": [18155, 18300]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm.payload", "kind": "function", "name": "PurchaseReturnForm.payload", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm.payload.", "tags": null, "range": {"lines": [490, 491], "bytes": [18301, 18353]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:PurchaseReturnForm._validate", "kind": "function", "name": "PurchaseReturnForm._validate", "path": "modules/purchase/return_form.py", "summary": "Method PurchaseReturnForm._validate.", "tags": null, "range": {"lines": [494, 537], "bytes": [18405, 19914]}, "parent": "sym:modules/purchase/return_form.py:PurchaseReturnForm"}
{"id": "sym:modules/purchase/return_form.py:_first_key", "kind": "function", "name": "_first_key", "path": "modules/purchase/return_form.py", "summary": "Function _first_key.", "tags": null, "range": {"lines": [9, 13], "bytes": [307, 455]}, "parent": "mod:modules/purchase/return_form.py"}
{"id": "sym:modules/purchase/return_form.py:ro", "kind": "function", "name": "ro", "path": "modules/purchase/return_form.py", "summary": "Function ro.", "tags": null, "range": {"lines": [248, 251], "bytes": [9443, 9604]}, "parent": "mod:modules/purchase/return_form.py"}
{"id": "pkg:tot_bar", "kind": "pkg", "name": "tot_bar", "path": null, "summary": "External package 'tot_bar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:mode_row", "kind": "pkg", "name": "mode_row", "path": null, "summary": "External package 'mode_row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sb", "kind": "pkg", "name": "sb", "path": null, "summary": "External package 'sb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rp", "kind": "pkg", "name": "rp", "path": null, "summary": "External package 'rp' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTimer", "kind": "pkg", "name": "QTimer", "path": null, "summary": "External package 'QTimer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:x", "kind": "pkg", "name": "x", "path": null, "summary": "External package 'x' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:id_item", "kind": "pkg", "name": "id_item", "path": null, "summary": "External package 'id_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:q_item", "kind": "pkg", "name": "q_item", "path": null, "summary": "External package 'q_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v_item", "kind": "pkg", "name": "v_item", "path": null, "summary": "External package 'v_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:id_cell", "kind": "pkg", "name": "id_cell", "path": null, "summary": "External package 'id_cell' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:meta", "kind": "pkg", "name": "meta", "path": null, "summary": "External package 'meta' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QBrush", "kind": "pkg", "name": "QBrush", "path": null, "summary": "External package 'QBrush' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it_val", "kind": "pkg", "name": "it_val", "path": null, "summary": "External package 'it_val' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:method_txt", "kind": "pkg", "name": "method_txt", "path": null, "summary": "External package 'method_txt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it_qty", "kind": "pkg", "name": "it_qty", "path": null, "summary": "External package 'it_qty' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:btn_ok", "kind": "pkg", "name": "btn_ok", "path": null, "summary": "External package 'btn_ok' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/purchase/view.py", "kind": "module", "name": "modules.purchase.view", "path": "modules/purchase/view.py", "summary": "Module modules.purchase.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/purchase/view.py:PurchaseView", "kind": "class", "name": "PurchaseView", "path": "modules/purchase/view.py", "summary": "Class PurchaseView.", "tags": null, "range": {"lines": [7, 34], "bytes": [256, 1531]}, "parent": "mod:modules/purchase/view.py"}
{"id": "sym:modules/purchase/view.py:PurchaseView.__init__", "kind": "function", "name": "PurchaseView.__init__", "path": "modules/purchase/view.py", "summary": "Method PurchaseView.__init__.", "tags": null, "range": {"lines": [8, 34], "bytes": [285, 1531]}, "parent": "sym:modules/purchase/view.py:PurchaseView"}
{"id": "pkg:V", "kind": "pkg", "name": "V", "path": null, "summary": "External package 'V' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseItemsView", "kind": "pkg", "name": "PurchaseItemsView", "path": null, "summary": "External package 'PurchaseItemsView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseDetails", "kind": "pkg", "name": "PurchaseDetails", "path": null, "summary": "External package 'PurchaseDetails' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/__init__.py", "kind": "module", "name": "modules.reporting", "path": "modules/reporting/__init__.py", "summary": "Reporting module package.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/controller.py", "kind": "module", "name": "modules.reporting.controller", "path": "modules/reporting/controller.py", "summary": "Module modules.reporting.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/controller.py:ReportingController", "kind": "class", "name": "ReportingController", "path": "modules/reporting/controller.py", "summary": "Classic tabbed Reporting module.  Tabs (in order):   1) Vendor Aging   2) Customer Aging   3) Inventory   4) Expenses   5) Financials (Income Statement)   6) Sales Reports   7) Purchase Reports   8) Payment Reports", "tags": null, "range": {"lines": [45, 195], "bytes": [1207, 6598]}, "parent": "mod:modules/reporting/controller.py"}
{"id": "sym:modules/reporting/controller.py:ReportingController.__init__", "kind": "function", "name": "ReportingController.__init__", "path": "modules/reporting/controller.py", "summary": "Method ReportingController.__init__.", "tags": null, "range": {"lines": [60, 159], "bytes": [1518, 5278]}, "parent": "sym:modules/reporting/controller.py:ReportingController"}
{"id": "sym:modules/reporting/controller.py:ReportingController.get_widget", "kind": "function", "name": "ReportingController.get_widget", "path": "modules/reporting/controller.py", "summary": "Method ReportingController.get_widget.", "tags": null, "range": {"lines": [161, 162], "bytes": [5279, 5342]}, "parent": "sym:modules/reporting/controller.py:ReportingController"}
{"id": "sym:modules/reporting/controller.py:ReportingController._on_tab_changed", "kind": "function", "name": "ReportingController._on_tab_changed", "path": "modules/reporting/controller.py", "summary": "Method ReportingController._on_tab_changed.", "tags": null, "range": {"lines": [165, 166], "bytes": [5358, 5461]}, "parent": "sym:modules/reporting/controller.py:ReportingController"}
{"id": "sym:modules/reporting/controller.py:ReportingController._safe_refresh", "kind": "function", "name": "ReportingController._safe_refresh", "path": "modules/reporting/controller.py", "summary": "Method ReportingController._safe_refresh.", "tags": null, "range": {"lines": [168, 189], "bytes": [5462, 6337]}, "parent": "sym:modules/reporting/controller.py:ReportingController"}
{"id": "sym:modules/reporting/controller.py:ReportingController.open_sub", "kind": "function", "name": "ReportingController.open_sub", "path": "modules/reporting/controller.py", "summary": "Method ReportingController.open_sub.", "tags": null, "range": {"lines": [192, 195], "bytes": [6410, 6598]}, "parent": "sym:modules/reporting/controller.py:ReportingController"}
{"id": "sym:modules/reporting/controller.py:_placeholder_tab", "kind": "function", "name": "_placeholder_tab", "path": "modules/reporting/controller.py", "summary": "Function _placeholder_tab.", "tags": null, "range": {"lines": [15, 21], "bytes": [335, 505]}, "parent": "mod:modules/reporting/controller.py"}
{"id": "sym:modules/reporting/controller.py:_safe_import_widget", "kind": "function", "name": "_safe_import_widget", "path": "modules/reporting/controller.py", "summary": "Import a QWidget class safely. On failure, print a traceback to stderr and return a small placeholder tab so the module keeps loading.", "tags": null, "range": {"lines": [24, 42], "bytes": [507, 1205]}, "parent": "mod:modules/reporting/controller.py"}
{"id": "pkg:Cls", "kind": "pkg", "name": "Cls", "path": null, "summary": "External package 'Cls' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:widget", "kind": "pkg", "name": "widget", "path": null, "summary": "External package 'widget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/customer_aging_reports.py", "kind": "module", "name": "modules.reporting.customer_aging_reports", "path": "modules/reporting/customer_aging_reports.py", "summary": "Module modules.reporting.customer_aging_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/customer_aging_reports.py:_Customer", "kind": "class", "name": "_Customer", "path": "modules/reporting/customer_aging_reports.py", "summary": "Class _Customer.", "tags": null, "range": {"lines": [51, 53], "bytes": [1316, 1359]}, "parent": "mod:modules/reporting/customer_aging_reports.py"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports", "kind": "class", "name": "CustomerAgingReports", "path": "modules/reporting/customer_aging_reports.py", "summary": "Pure computation for Customer Aging built on top of ReportingRepo.", "tags": null, "range": {"lines": [60, 199], "bytes": [1446, 6522]}, "parent": "mod:modules/reporting/customer_aging_reports.py"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports.__init__", "kind": "function", "name": "CustomerAgingReports.__init__", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingReports.__init__.", "tags": null, "range": {"lines": [65, 67], "bytes": [1562, 1685]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports._list_customers", "kind": "function", "name": "CustomerAgingReports._list_customers", "path": "modules/reporting/customer_aging_reports.py", "summary": "Minimal reader for customers (id + name) used by the UI 'All' mode. Adjust column names here if your customer table differs.", "tags": null, "range": {"lines": [69, 76], "bytes": [1686, 2118]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports.compute_aging_snapshot", "kind": "function", "name": "CustomerAgingReports.compute_aging_snapshot", "path": "modules/reporting/customer_aging_reports.py", "summary": "Returns one row per customer:   {     \"customer_id\": int,     \"name\": str,     \"total_due\": float,     \"b0_30\": float,     \"b31_60\": float,     \"b61_90\": float,     \"b91_plus\": float,     \"available_credit\": float   } Only documents with positive remaining are considered.", "tags": null, "range": {"lines": [78, 159], "bytes": [2119, 5058]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports.list_open_invoices", "kind": "function", "name": "CustomerAgingReports.list_open_invoices", "path": "modules/reporting/customer_aging_reports.py", "summary": "Returns open sales documents for a customer as of date (remaining > 0), with:   {     \"doc_no\": str,     \"date\": \"YYYY-MM-DD\",     \"total_amount\": float,     \"paid_amount\": float,     \"advance_payment_applied\": float,     \"remaining\": float,     \"days_outstanding\": int   }", "tags": null, "range": {"lines": [161, 199], "bytes": [5059, 6522]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingReports"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab", "kind": "class", "name": "CustomerAgingTab", "path": "modules/reporting/customer_aging_reports.py", "summary": "UI wrapper for Customer Aging:   - Toolbar: As-of date, Customer (All / one), Refresh, Print/PDF   - Top table: Aging snapshot (AgingSnapshotTableModel)   - Bottom table: Open invoices for selected row (OpenInvoicesTableModel)", "tags": null, "range": {"lines": [205, 446], "bytes": [6605, 15583]}, "parent": "mod:modules/reporting/customer_aging_reports.py"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab.__init__", "kind": "function", "name": "CustomerAgingTab.__init__", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab.__init__.", "tags": null, "range": {"lines": [213, 222], "bytes": [6898, 7263]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._build_ui", "kind": "function", "name": "CustomerAgingTab._build_ui", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._build_ui.", "tags": null, "range": {"lines": [225, 288], "bytes": [7296, 9393]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._wire_signals", "kind": "function", "name": "CustomerAgingTab._wire_signals", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._wire_signals.", "tags": null, "range": {"lines": [290, 299], "bytes": [9394, 9863]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._reload_customers", "kind": "function", "name": "CustomerAgingTab._reload_customers", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._reload_customers.", "tags": null, "range": {"lines": [301, 311], "bytes": [9864, 10335]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab.refresh", "kind": "function", "name": "CustomerAgingTab.refresh", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab.refresh.", "tags": null, "range": {"lines": [440, 441], "bytes": [15259, 15395]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._autosize", "kind": "function", "name": "CustomerAgingTab._autosize", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._autosize.", "tags": null, "range": {"lines": [344, 346], "bytes": [11559, 11703]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._on_print_pdf", "kind": "function", "name": "CustomerAgingTab._on_print_pdf", "path": "modules/reporting/customer_aging_reports.py", "summary": "Export the current snapshot (and, if present, the open invoices) to a single PDF.", "tags": null, "range": {"lines": [349, 376], "bytes": [11716, 12905]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._html_from_model", "kind": "function", "name": "CustomerAgingTab._html_from_model", "path": "modules/reporting/customer_aging_reports.py", "summary": "Create a lightweight HTML table from the current model/selection.", "tags": null, "range": {"lines": [378, 400], "bytes": [12906, 13847]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._render_pdf", "kind": "function", "name": "CustomerAgingTab._render_pdf", "path": "modules/reporting/customer_aging_reports.py", "summary": "Render the supplied HTML to PDF using QTextDocument and QPrinter.", "tags": null, "range": {"lines": [402, 417], "bytes": [13848, 14405]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._on_snapshot_selection", "kind": "function", "name": "CustomerAgingTab._on_snapshot_selection", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._on_snapshot_selection.", "tags": null, "range": {"lines": [419, 424], "bytes": [14406, 14669]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._load_invoices_for_row", "kind": "function", "name": "CustomerAgingTab._load_invoices_for_row", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._load_invoices_for_row.", "tags": null, "range": {"lines": [426, 436], "bytes": [14670, 15193]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab._refresh_impl", "kind": "function", "name": "CustomerAgingTab._refresh_impl", "path": "modules/reporting/customer_aging_reports.py", "summary": "Method CustomerAgingTab._refresh_impl.", "tags": null, "range": {"lines": [444, 446], "bytes": [15467, 15583]}, "parent": "sym:modules/reporting/customer_aging_reports.py:CustomerAgingTab"}
{"id": "sym:modules/reporting/customer_aging_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/customer_aging_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [40, 44], "bytes": [1066, 1222]}, "parent": "mod:modules/reporting/customer_aging_reports.py"}
{"id": "sym:modules/reporting/customer_aging_reports.py:_parse_iso", "kind": "function", "name": "_parse_iso", "path": "modules/reporting/customer_aging_reports.py", "summary": "Function _parse_iso.", "tags": null, "range": {"lines": [56, 57], "bytes": [1361, 1444]}, "parent": "mod:modules/reporting/customer_aging_reports.py"}
{"id": "pkg:ReportingRepo", "kind": "pkg", "name": "ReportingRepo", "path": null, "summary": "External package 'ReportingRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Customer", "kind": "pkg", "name": "_Customer", "path": null, "summary": "External package '_Customer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:CustomerAgingReports", "kind": "pkg", "name": "CustomerAgingReports", "path": null, "summary": "External package 'CustomerAgingReports' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:AgingSnapshotTableModel", "kind": "pkg", "name": "AgingSnapshotTableModel", "path": null, "summary": "External package 'AgingSnapshotTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:OpenInvoicesTableModel", "kind": "pkg", "name": "OpenInvoicesTableModel", "path": null, "summary": "External package 'OpenInvoicesTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:html", "kind": "pkg", "name": "html", "path": null, "summary": "External package 'html' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTextDocument", "kind": "pkg", "name": "QTextDocument", "path": null, "summary": "External package 'QTextDocument' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:doc", "kind": "pkg", "name": "doc", "path": null, "summary": "External package 'doc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QPrinter", "kind": "pkg", "name": "QPrinter", "path": null, "summary": "External package 'QPrinter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:printer", "kind": "pkg", "name": "printer", "path": null, "summary": "External package 'printer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/expense_reports.py", "kind": "module", "name": "modules.reporting.expense_reports", "path": "modules/reporting/expense_reports.py", "summary": "Module modules.reporting.expense_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReports", "kind": "class", "name": "ExpenseReports", "path": "modules/reporting/expense_reports.py", "summary": "Thin logic layer for Expense reporting built on top of ReportingRepo.", "tags": null, "range": {"lines": [48, 104], "bytes": [1220, 3241]}, "parent": "mod:modules/reporting/expense_reports.py"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReports.__init__", "kind": "function", "name": "ExpenseReports.__init__", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReports.__init__.", "tags": null, "range": {"lines": [53, 56], "bytes": [1333, 1500]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReports"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReports.summary_by_category", "kind": "function", "name": "ExpenseReports.summary_by_category", "path": "modules/reporting/expense_reports.py", "summary": "Return rows:   { category_id, category_name, total_amount }", "tags": null, "range": {"lines": [58, 73], "bytes": [1501, 2066]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReports"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReports.list_expenses", "kind": "function", "name": "ExpenseReports.list_expenses", "path": "modules/reporting/expense_reports.py", "summary": "Return rows:   { expense_id, date, category_name, description, amount } Ordered by date desc, id desc (enforced in repo).", "tags": null, "range": {"lines": [75, 95], "bytes": [2067, 2849]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReports"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReports.list_categories", "kind": "function", "name": "ExpenseReports.list_categories", "path": "modules/reporting/expense_reports.py", "summary": "Read categories for the combo box. Expected table: expense_categories(id, name)", "tags": null, "range": {"lines": [98, 104], "bytes": [2892, 3241]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReports"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab", "kind": "class", "name": "ExpenseReportsTab", "path": "modules/reporting/expense_reports.py", "summary": "Expense Reports UI:   - Toolbar: From/To date, Category (All or one), Refresh, Print/PDF   - Top table: summary by category (% computed in model)   - Bottom table: raw expense lines   - Footer: grand total label (sum of summary)", "tags": null, "range": {"lines": [110, 349], "bytes": [3324, 11874]}, "parent": "mod:modules/reporting/expense_reports.py"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab.__init__", "kind": "function", "name": "ExpenseReportsTab.__init__", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab.__init__.", "tags": null, "range": {"lines": [119, 129], "bytes": [3624, 3971]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._build_ui", "kind": "function", "name": "ExpenseReportsTab._build_ui", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab._build_ui.", "tags": null, "range": {"lines": [132, 211], "bytes": [4004, 6693]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._wire_signals", "kind": "function", "name": "ExpenseReportsTab._wire_signals", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab._wire_signals.", "tags": null, "range": {"lines": [213, 219], "bytes": [6694, 7061]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._reload_categories", "kind": "function", "name": "ExpenseReportsTab._reload_categories", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab._reload_categories.", "tags": null, "range": {"lines": [221, 231], "bytes": [7062, 7507]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab.refresh", "kind": "function", "name": "ExpenseReportsTab.refresh", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab.refresh.", "tags": null, "range": {"lines": [344, 345], "bytes": [11616, 11752]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._autosize", "kind": "function", "name": "ExpenseReportsTab._autosize", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab._autosize.", "tags": null, "range": {"lines": [256, 258], "bytes": [8434, 8578]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._on_print_pdf", "kind": "function", "name": "ExpenseReportsTab._on_print_pdf", "path": "modules/reporting/expense_reports.py", "summary": "Export summary + lines to a single PDF.", "tags": null, "range": {"lines": [263, 294], "bytes": [8620, 9939]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._html_from_model", "kind": "function", "name": "ExpenseReportsTab._html_from_model", "path": "modules/reporting/expense_reports.py", "summary": "Lightweight HTML table dump of a QTableView's model.", "tags": null, "range": {"lines": [296, 318], "bytes": [9940, 10868]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._render_pdf", "kind": "function", "name": "ExpenseReportsTab._render_pdf", "path": "modules/reporting/expense_reports.py", "summary": "Render given HTML to PDF via QTextDocument/QPrinter.", "tags": null, "range": {"lines": [320, 335], "bytes": [10869, 11413]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab.refresh_tab", "kind": "function", "name": "ExpenseReportsTab.refresh_tab", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab.refresh_tab.", "tags": null, "range": {"lines": [339, 340], "bytes": [11459, 11517]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab._refresh_impl", "kind": "function", "name": "ExpenseReportsTab._refresh_impl", "path": "modules/reporting/expense_reports.py", "summary": "Method ExpenseReportsTab._refresh_impl.", "tags": null, "range": {"lines": [347, 349], "bytes": [11753, 11874]}, "parent": "sym:modules/reporting/expense_reports.py:ExpenseReportsTab"}
{"id": "sym:modules/reporting/expense_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/expense_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [35, 39], "bytes": [876, 1032]}, "parent": "mod:modules/reporting/expense_reports.py"}
{"id": "pkg:ExpenseReports", "kind": "pkg", "name": "ExpenseReports", "path": null, "summary": "External package 'ExpenseReports' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpenseSummaryTableModel", "kind": "pkg", "name": "ExpenseSummaryTableModel", "path": null, "summary": "External package 'ExpenseSummaryTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpenseListTableModel", "kind": "pkg", "name": "ExpenseListTableModel", "path": null, "summary": "External package 'ExpenseListTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/financial_reports.py", "kind": "module", "name": "modules.reporting.financial_reports", "path": "modules/reporting/financial_reports.py", "summary": "Module modules.reporting.financial_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports", "kind": "class", "name": "FinancialReports", "path": "modules/reporting/financial_reports.py", "summary": "Financial aggregates on top of ReportingRepo.  - AR/AP snapshot as-of - Income Statement (Revenue/COGS/Expenses/Operating Income) - Cash view: collections/disbursements by cleared_date", "tags": null, "range": {"lines": [45, 176], "bytes": [1180, 5908]}, "parent": "mod:modules/reporting/financial_reports.py"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports.__init__", "kind": "function", "name": "FinancialReports.__init__", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReports.__init__.", "tags": null, "range": {"lines": [54, 57], "bytes": [1422, 1589]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReports"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports._pk_col", "kind": "function", "name": "FinancialReports._pk_col", "path": "modules/reporting/financial_reports.py", "summary": "Return the primary key column name for a table, using PRAGMA table_info. Falls back to common patterns if PRAGMA doesn't flag a PK.", "tags": null, "range": {"lines": [61, 76], "bytes": [1615, 2332]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReports"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports.ar_ap_snapshot_as_of", "kind": "function", "name": "FinancialReports.ar_ap_snapshot_as_of", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReports.ar_ap_snapshot_as_of.", "tags": null, "range": {"lines": [80, 106], "bytes": [2376, 3619]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReports"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports.income_statement", "kind": "function", "name": "FinancialReports.income_statement", "path": "modules/reporting/financial_reports.py", "summary": "Returns:   {     'Revenue': float,     'COGS': float,     'Gross Profit': float,     'Expenses': [{'category': str, 'amount': float}, ...],     'total_expenses': float,     'Operating Income': float   }", "tags": null, "range": {"lines": [110, 143], "bytes": [3654, 4795]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReports"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReports.cash_collections_disbursements", "kind": "function", "name": "FinancialReports.cash_collections_disbursements", "path": "modules/reporting/financial_reports.py", "summary": "Returns:   {     'collections': [{'date': 'YYYY-MM-DD', 'amount': float}, ...],     'total_collections': float,     'disbursements': [{'date': 'YYYY-MM-DD', 'amount': float}, ...],     'total_disbursements': float   }", "tags": null, "range": {"lines": [147, 176], "bytes": [4823, 5908]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReports"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel", "kind": "class", "name": "_DateAmountTableModel", "path": "modules/reporting/financial_reports.py", "summary": "Minimal 2-column table model for:   Date | Amount", "tags": null, "range": {"lines": [182, 227], "bytes": [5991, 7583]}, "parent": "mod:modules/reporting/financial_reports.py"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.__init__", "kind": "function", "name": "_DateAmountTableModel.__init__", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.__init__.", "tags": null, "range": {"lines": [190, 192], "bytes": [6150, 6307]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.set_rows", "kind": "function", "name": "_DateAmountTableModel.set_rows", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.set_rows.", "tags": null, "range": {"lines": [194, 197], "bytes": [6308, 6450]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.rowCount", "kind": "function", "name": "_DateAmountTableModel.rowCount", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.rowCount.", "tags": null, "range": {"lines": [200, 201], "bytes": [6470, 6607]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.columnCount", "kind": "function", "name": "_DateAmountTableModel.columnCount", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.columnCount.", "tags": null, "range": {"lines": [203, 204], "bytes": [6608, 6734]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.headerData", "kind": "function", "name": "_DateAmountTableModel.headerData", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.headerData.", "tags": null, "range": {"lines": [206, 211], "bytes": [6735, 7003]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel.data", "kind": "function", "name": "_DateAmountTableModel.data", "path": "modules/reporting/financial_reports.py", "summary": "Method _DateAmountTableModel.data.", "tags": null, "range": {"lines": [213, 227], "bytes": [7004, 7583]}, "parent": "sym:modules/reporting/financial_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab", "kind": "class", "name": "FinancialReportsTab", "path": "modules/reporting/financial_reports.py", "summary": "Financial Reports UI:   - Header: AR/AP snapshot (as-of)   - Sub-tabs:       1) Income Statement (date_from/date_to)       2) Cash View (date_from/date_to)", "tags": null, "range": {"lines": [233, 583], "bytes": [7666, 21057]}, "parent": "mod:modules/reporting/financial_reports.py"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab.__init__", "kind": "function", "name": "FinancialReportsTab.__init__", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab.__init__.", "tags": null, "range": {"lines": [242, 255], "bytes": [7895, 8376]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._build_ui", "kind": "function", "name": "FinancialReportsTab._build_ui", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._build_ui.", "tags": null, "range": {"lines": [258, 398], "bytes": [8409, 13366]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._wire_signals", "kind": "function", "name": "FinancialReportsTab._wire_signals", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._wire_signals.", "tags": null, "range": {"lines": [400, 416], "bytes": [13367, 14242]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab.refresh", "kind": "function", "name": "FinancialReportsTab.refresh", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab.refresh.", "tags": null, "range": {"lines": [421, 424], "bytes": [14294, 14410]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab.refresh_ar_ap", "kind": "function", "name": "FinancialReportsTab.refresh_ar_ap", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab.refresh_ar_ap.", "tags": null, "range": {"lines": [428, 436], "bytes": [14442, 14903]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab.refresh_stmt", "kind": "function", "name": "FinancialReportsTab.refresh_stmt", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab.refresh_stmt.", "tags": null, "range": {"lines": [440, 461], "bytes": [14939, 16012]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab.refresh_cash", "kind": "function", "name": "FinancialReportsTab.refresh_cash", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab.refresh_cash.", "tags": null, "range": {"lines": [465, 483], "bytes": [16041, 16856]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._on_print_ar_ap", "kind": "function", "name": "FinancialReportsTab._on_print_ar_ap", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._on_print_ar_ap.", "tags": null, "range": {"lines": [487, 496], "bytes": [16889, 17464]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._on_print_stmt", "kind": "function", "name": "FinancialReportsTab._on_print_stmt", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._on_print_stmt.", "tags": null, "range": {"lines": [498, 512], "bytes": [17465, 18211]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._on_print_cash", "kind": "function", "name": "FinancialReportsTab._on_print_cash", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._on_print_cash.", "tags": null, "range": {"lines": [514, 536], "bytes": [18212, 19406]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._autosize", "kind": "function", "name": "FinancialReportsTab._autosize", "path": "modules/reporting/financial_reports.py", "summary": "Method FinancialReportsTab._autosize.", "tags": null, "range": {"lines": [540, 542], "bytes": [19439, 19583]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._html_from_model", "kind": "function", "name": "FinancialReportsTab._html_from_model", "path": "modules/reporting/financial_reports.py", "summary": "Lightweight HTML table dump of a QTableView's model.", "tags": null, "range": {"lines": [544, 566], "bytes": [19584, 20512]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:FinancialReportsTab._render_pdf", "kind": "function", "name": "FinancialReportsTab._render_pdf", "path": "modules/reporting/financial_reports.py", "summary": "Render given HTML to PDF via QTextDocument/QPrinter.", "tags": null, "range": {"lines": [568, 583], "bytes": [20513, 21057]}, "parent": "sym:modules/reporting/financial_reports.py:FinancialReportsTab"}
{"id": "sym:modules/reporting/financial_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/financial_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [32, 36], "bytes": [826, 982]}, "parent": "mod:modules/reporting/financial_reports.py"}
{"id": "pkg:expenses", "kind": "pkg", "name": "expenses", "path": null, "summary": "External package 'expenses' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cols", "kind": "pkg", "name": "cols", "path": null, "summary": "External package 'cols' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:disb", "kind": "pkg", "name": "disb", "path": null, "summary": "External package 'disb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:FinancialReports", "kind": "pkg", "name": "FinancialReports", "path": null, "summary": "External package 'FinancialReports' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hdr_bar", "kind": "pkg", "name": "hdr_bar", "path": null, "summary": "External package 'hdr_bar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:FinancialStatementTableModel", "kind": "pkg", "name": "FinancialStatementTableModel", "path": null, "summary": "External package 'FinancialStatementTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v1", "kind": "pkg", "name": "v1", "path": null, "summary": "External package 'v1' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar1", "kind": "pkg", "name": "bar1", "path": null, "summary": "External package 'bar1' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:v2", "kind": "pkg", "name": "v2", "path": null, "summary": "External package 'v2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar2", "kind": "pkg", "name": "bar2", "path": null, "summary": "External package 'bar2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_DateAmountTableModel", "kind": "pkg", "name": "_DateAmountTableModel", "path": null, "summary": "External package '_DateAmountTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:splitter", "kind": "pkg", "name": "splitter", "path": null, "summary": "External package 'splitter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:foot", "kind": "pkg", "name": "foot", "path": null, "summary": "External package 'foot' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/inventory_reports.py", "kind": "module", "name": "modules.reporting.inventory_reports", "path": "modules/reporting/inventory_reports.py", "summary": "Module modules.reporting.inventory_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports", "kind": "class", "name": "InventoryReports", "path": "modules/reporting/inventory_reports.py", "summary": "Thin logic layer built on ReportingRepo for inventory reporting.", "tags": null, "range": {"lines": [50, 202], "bytes": [1258, 7267]}, "parent": "mod:modules/reporting/inventory_reports.py"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.__init__", "kind": "function", "name": "InventoryReports.__init__", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports.__init__.", "tags": null, "range": {"lines": [55, 58], "bytes": [1368, 1535]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.stock_on_hand_current", "kind": "function", "name": "InventoryReports.stock_on_hand_current", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports.stock_on_hand_current.", "tags": null, "range": {"lines": [60, 108], "bytes": [1536, 3488]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.stock_on_hand_as_of", "kind": "function", "name": "InventoryReports.stock_on_hand_as_of", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports.stock_on_hand_as_of.", "tags": null, "range": {"lines": [110, 152], "bytes": [3489, 5203]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.transactions", "kind": "function", "name": "InventoryReports.transactions", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports.transactions.", "tags": null, "range": {"lines": [154, 172], "bytes": [5204, 6170]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.valuation_history", "kind": "function", "name": "InventoryReports.valuation_history", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports.valuation_history.", "tags": null, "range": {"lines": [174, 188], "bytes": [6171, 6770]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports.list_products", "kind": "function", "name": "InventoryReports.list_products", "path": "modules/reporting/inventory_reports.py", "summary": "Read products for pickers. Expected table: products(product_id, name)", "tags": null, "range": {"lines": [191, 199], "bytes": [6785, 7150]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReports._product_name_map", "kind": "function", "name": "InventoryReports._product_name_map", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReports._product_name_map.", "tags": null, "range": {"lines": [201, 202], "bytes": [7151, 7267]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReports"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel", "kind": "class", "name": "ValuationHistoryTableModel", "path": "modules/reporting/inventory_reports.py", "summary": "Simple list model for valuation history:   Date | Qty (base) | Unit Value | Total Value", "tags": null, "range": {"lines": [208, 263], "bytes": [7350, 9326]}, "parent": "mod:modules/reporting/inventory_reports.py"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.__init__", "kind": "function", "name": "ValuationHistoryTableModel.__init__", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.__init__.", "tags": null, "range": {"lines": [216, 218], "bytes": [7585, 7742]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.set_rows", "kind": "function", "name": "ValuationHistoryTableModel.set_rows", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.set_rows.", "tags": null, "range": {"lines": [220, 223], "bytes": [7743, 7885]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.rowCount", "kind": "function", "name": "ValuationHistoryTableModel.rowCount", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.rowCount.", "tags": null, "range": {"lines": [226, 227], "bytes": [7914, 8051]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.columnCount", "kind": "function", "name": "ValuationHistoryTableModel.columnCount", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.columnCount.", "tags": null, "range": {"lines": [229, 230], "bytes": [8052, 8178]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.headerData", "kind": "function", "name": "ValuationHistoryTableModel.headerData", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.headerData.", "tags": null, "range": {"lines": [232, 237], "bytes": [8179, 8447]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel.data", "kind": "function", "name": "ValuationHistoryTableModel.data", "path": "modules/reporting/inventory_reports.py", "summary": "Method ValuationHistoryTableModel.data.", "tags": null, "range": {"lines": [239, 263], "bytes": [8448, 9326]}, "parent": "sym:modules/reporting/inventory_reports.py:ValuationHistoryTableModel"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab", "kind": "class", "name": "InventoryReportsTab", "path": "modules/reporting/inventory_reports.py", "summary": "Inventory Reports UI with three sub-tabs:   1) Stock on Hand (Current / As-of)   2) Transactions (date range + product)   3) Valuation History (product + limit)", "tags": null, "range": {"lines": [269, 635], "bytes": [9409, 23207]}, "parent": "mod:modules/reporting/inventory_reports.py"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab.__init__", "kind": "function", "name": "InventoryReportsTab.__init__", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab.__init__.", "tags": null, "range": {"lines": [277, 289], "bytes": [9639, 10071]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._build_ui", "kind": "function", "name": "InventoryReportsTab._build_ui", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._build_ui.", "tags": null, "range": {"lines": [292, 431], "bytes": [10104, 15203]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._wire_signals", "kind": "function", "name": "InventoryReportsTab._wire_signals", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._wire_signals.", "tags": null, "range": {"lines": [433, 451], "bytes": [15204, 16258]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._load_products", "kind": "function", "name": "InventoryReportsTab._load_products", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._load_products.", "tags": null, "range": {"lines": [453, 479], "bytes": [16259, 17166]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._on_stock_toggle", "kind": "function", "name": "InventoryReportsTab._on_stock_toggle", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._on_stock_toggle.", "tags": null, "range": {"lines": [483, 486], "bytes": [17202, 17400]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab.refresh_stock", "kind": "function", "name": "InventoryReportsTab.refresh_stock", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab.refresh_stock.", "tags": null, "range": {"lines": [489, 497], "bytes": [17413, 17807]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._on_print_stock", "kind": "function", "name": "InventoryReportsTab._on_print_stock", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._on_print_stock.", "tags": null, "range": {"lines": [499, 514], "bytes": [17808, 18602]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab.refresh_txn", "kind": "function", "name": "InventoryReportsTab.refresh_txn", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab.refresh_txn.", "tags": null, "range": {"lines": [519, 527], "bytes": [18649, 19096]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._on_print_txn", "kind": "function", "name": "InventoryReportsTab._on_print_txn", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._on_print_txn.", "tags": null, "range": {"lines": [529, 545], "bytes": [19097, 19976]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab.refresh_val", "kind": "function", "name": "InventoryReportsTab.refresh_val", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab.refresh_val.", "tags": null, "range": {"lines": [550, 560], "bytes": [20028, 20468]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._on_print_val", "kind": "function", "name": "InventoryReportsTab._on_print_val", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._on_print_val.", "tags": null, "range": {"lines": [562, 576], "bytes": [20469, 21217]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._autosize", "kind": "function", "name": "InventoryReportsTab._autosize", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab._autosize.", "tags": null, "range": {"lines": [580, 582], "bytes": [21250, 21394]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._html_from_model", "kind": "function", "name": "InventoryReportsTab._html_from_model", "path": "modules/reporting/inventory_reports.py", "summary": "Lightweight HTML table dump of a QTableView's model.", "tags": null, "range": {"lines": [584, 606], "bytes": [21395, 22323]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab._render_pdf", "kind": "function", "name": "InventoryReportsTab._render_pdf", "path": "modules/reporting/inventory_reports.py", "summary": "Render given HTML to PDF via QTextDocument/QPrinter.", "tags": null, "range": {"lines": [608, 623], "bytes": [22324, 22868]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab.refresh", "kind": "function", "name": "InventoryReportsTab.refresh", "path": "modules/reporting/inventory_reports.py", "summary": "Method InventoryReportsTab.refresh.", "tags": null, "range": {"lines": [627, 635], "bytes": [22922, 23207]}, "parent": "sym:modules/reporting/inventory_reports.py:InventoryReportsTab"}
{"id": "sym:modules/reporting/inventory_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/inventory_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [34, 38], "bytes": [856, 1012]}, "parent": "mod:modules/reporting/inventory_reports.py"}
{"id": "pkg:id_to_name", "kind": "pkg", "name": "id_to_name", "path": null, "summary": "External package 'id_to_name' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InventoryReports", "kind": "pkg", "name": "InventoryReports", "path": null, "summary": "External package 'InventoryReports' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:layout_stock", "kind": "pkg", "name": "layout_stock", "path": null, "summary": "External package 'layout_stock' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar_s", "kind": "pkg", "name": "bar_s", "path": null, "summary": "External package 'bar_s' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QRadioButton", "kind": "pkg", "name": "QRadioButton", "path": null, "summary": "External package 'QRadioButton' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QButtonGroup", "kind": "pkg", "name": "QButtonGroup", "path": null, "summary": "External package 'QButtonGroup' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InventoryStockOnHandTableModel", "kind": "pkg", "name": "InventoryStockOnHandTableModel", "path": null, "summary": "External package 'InventoryStockOnHandTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:layout_txn", "kind": "pkg", "name": "layout_txn", "path": null, "summary": "External package 'layout_txn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar_t", "kind": "pkg", "name": "bar_t", "path": null, "summary": "External package 'bar_t' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InventoryTransactionsTableModel", "kind": "pkg", "name": "InventoryTransactionsTableModel", "path": null, "summary": "External package 'InventoryTransactionsTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:layout_val", "kind": "pkg", "name": "layout_val", "path": null, "summary": "External package 'layout_val' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bar_v", "kind": "pkg", "name": "bar_v", "path": null, "summary": "External package 'bar_v' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ValuationHistoryTableModel", "kind": "pkg", "name": "ValuationHistoryTableModel", "path": null, "summary": "External package 'ValuationHistoryTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/model.py", "kind": "module", "name": "modules.reporting.model", "path": "modules/reporting/model.py", "summary": "Module modules.reporting.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel", "kind": "class", "name": "AgingSnapshotTableModel", "path": "modules/reporting/model.py", "summary": "Class AgingSnapshotTableModel.", "tags": null, "range": {"lines": [22, 65], "bytes": [635, 2439]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.__init__", "kind": "function", "name": "AgingSnapshotTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.__init__.", "tags": null, "range": {"lines": [25, 27], "bytes": [783, 940]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.set_rows", "kind": "function", "name": "AgingSnapshotTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.set_rows.", "tags": null, "range": {"lines": [29, 32], "bytes": [941, 1083]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.rowCount", "kind": "function", "name": "AgingSnapshotTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.rowCount.", "tags": null, "range": {"lines": [34, 35], "bytes": [1084, 1221]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.columnCount", "kind": "function", "name": "AgingSnapshotTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.columnCount.", "tags": null, "range": {"lines": [37, 38], "bytes": [1222, 1364]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.headerData", "kind": "function", "name": "AgingSnapshotTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.headerData.", "tags": null, "range": {"lines": [40, 45], "bytes": [1365, 1633]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:AgingSnapshotTableModel.data", "kind": "function", "name": "AgingSnapshotTableModel.data", "path": "modules/reporting/model.py", "summary": "Method AgingSnapshotTableModel.data.", "tags": null, "range": {"lines": [47, 65], "bytes": [1634, 2439]}, "parent": "sym:modules/reporting/model.py:AgingSnapshotTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel", "kind": "class", "name": "OpenInvoicesTableModel", "path": "modules/reporting/model.py", "summary": "Class OpenInvoicesTableModel.", "tags": null, "range": {"lines": [70, 113], "bytes": [2522, 4334]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.__init__", "kind": "function", "name": "OpenInvoicesTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.__init__.", "tags": null, "range": {"lines": [73, 75], "bytes": [2676, 2833]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.set_rows", "kind": "function", "name": "OpenInvoicesTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.set_rows.", "tags": null, "range": {"lines": [77, 80], "bytes": [2834, 2976]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.rowCount", "kind": "function", "name": "OpenInvoicesTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.rowCount.", "tags": null, "range": {"lines": [82, 83], "bytes": [2977, 3114]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.columnCount", "kind": "function", "name": "OpenInvoicesTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.columnCount.", "tags": null, "range": {"lines": [85, 86], "bytes": [3115, 3257]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.headerData", "kind": "function", "name": "OpenInvoicesTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.headerData.", "tags": null, "range": {"lines": [88, 93], "bytes": [3258, 3526]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:OpenInvoicesTableModel.data", "kind": "function", "name": "OpenInvoicesTableModel.data", "path": "modules/reporting/model.py", "summary": "Method OpenInvoicesTableModel.data.", "tags": null, "range": {"lines": [95, 113], "bytes": [3527, 4334]}, "parent": "sym:modules/reporting/model.py:OpenInvoicesTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel", "kind": "class", "name": "ExpenseSummaryTableModel", "path": "modules/reporting/model.py", "summary": "Class ExpenseSummaryTableModel.", "tags": null, "range": {"lines": [118, 159], "bytes": [4417, 6051]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.__init__", "kind": "function", "name": "ExpenseSummaryTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.__init__.", "tags": null, "range": {"lines": [121, 123], "bytes": [4522, 4679]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.set_rows", "kind": "function", "name": "ExpenseSummaryTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.set_rows.", "tags": null, "range": {"lines": [125, 128], "bytes": [4680, 4822]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.rowCount", "kind": "function", "name": "ExpenseSummaryTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.rowCount.", "tags": null, "range": {"lines": [130, 131], "bytes": [4823, 4960]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.columnCount", "kind": "function", "name": "ExpenseSummaryTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.columnCount.", "tags": null, "range": {"lines": [133, 134], "bytes": [4961, 5087]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.headerData", "kind": "function", "name": "ExpenseSummaryTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.headerData.", "tags": null, "range": {"lines": [136, 141], "bytes": [5088, 5356]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseSummaryTableModel.data", "kind": "function", "name": "ExpenseSummaryTableModel.data", "path": "modules/reporting/model.py", "summary": "Method ExpenseSummaryTableModel.data.", "tags": null, "range": {"lines": [143, 159], "bytes": [5357, 6051]}, "parent": "sym:modules/reporting/model.py:ExpenseSummaryTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel", "kind": "class", "name": "ExpenseListTableModel", "path": "modules/reporting/model.py", "summary": "Class ExpenseListTableModel.", "tags": null, "range": {"lines": [164, 208], "bytes": [6134, 7864]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.__init__", "kind": "function", "name": "ExpenseListTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.__init__.", "tags": null, "range": {"lines": [167, 169], "bytes": [6251, 6408]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.set_rows", "kind": "function", "name": "ExpenseListTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.set_rows.", "tags": null, "range": {"lines": [171, 174], "bytes": [6409, 6551]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.rowCount", "kind": "function", "name": "ExpenseListTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.rowCount.", "tags": null, "range": {"lines": [176, 177], "bytes": [6552, 6689]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.columnCount", "kind": "function", "name": "ExpenseListTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.columnCount.", "tags": null, "range": {"lines": [179, 180], "bytes": [6690, 6816]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.headerData", "kind": "function", "name": "ExpenseListTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.headerData.", "tags": null, "range": {"lines": [182, 187], "bytes": [6817, 7085]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:ExpenseListTableModel.data", "kind": "function", "name": "ExpenseListTableModel.data", "path": "modules/reporting/model.py", "summary": "Method ExpenseListTableModel.data.", "tags": null, "range": {"lines": [189, 208], "bytes": [7086, 7864]}, "parent": "sym:modules/reporting/model.py:ExpenseListTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel", "kind": "class", "name": "InventoryStockOnHandTableModel", "path": "modules/reporting/model.py", "summary": "Class InventoryStockOnHandTableModel.", "tags": null, "range": {"lines": [213, 260], "bytes": [7947, 9862]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.__init__", "kind": "function", "name": "InventoryStockOnHandTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.__init__.", "tags": null, "range": {"lines": [216, 218], "bytes": [8094, 8251]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.set_rows", "kind": "function", "name": "InventoryStockOnHandTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.set_rows.", "tags": null, "range": {"lines": [220, 223], "bytes": [8252, 8394]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.rowCount", "kind": "function", "name": "InventoryStockOnHandTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.rowCount.", "tags": null, "range": {"lines": [225, 226], "bytes": [8395, 8532]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.columnCount", "kind": "function", "name": "InventoryStockOnHandTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.columnCount.", "tags": null, "range": {"lines": [228, 229], "bytes": [8533, 8659]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.headerData", "kind": "function", "name": "InventoryStockOnHandTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.headerData.", "tags": null, "range": {"lines": [231, 236], "bytes": [8660, 8928]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel.data", "kind": "function", "name": "InventoryStockOnHandTableModel.data", "path": "modules/reporting/model.py", "summary": "Method InventoryStockOnHandTableModel.data.", "tags": null, "range": {"lines": [238, 260], "bytes": [8929, 9862]}, "parent": "sym:modules/reporting/model.py:InventoryStockOnHandTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel", "kind": "class", "name": "InventoryTransactionsTableModel", "path": "modules/reporting/model.py", "summary": "Class InventoryTransactionsTableModel.", "tags": null, "range": {"lines": [265, 316], "bytes": [9945, 11960]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.__init__", "kind": "function", "name": "InventoryTransactionsTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.__init__.", "tags": null, "range": {"lines": [268, 270], "bytes": [10094, 10251]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.set_rows", "kind": "function", "name": "InventoryTransactionsTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.set_rows.", "tags": null, "range": {"lines": [272, 275], "bytes": [10252, 10394]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.rowCount", "kind": "function", "name": "InventoryTransactionsTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.rowCount.", "tags": null, "range": {"lines": [277, 278], "bytes": [10395, 10532]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.columnCount", "kind": "function", "name": "InventoryTransactionsTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.columnCount.", "tags": null, "range": {"lines": [280, 281], "bytes": [10533, 10659]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.headerData", "kind": "function", "name": "InventoryTransactionsTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.headerData.", "tags": null, "range": {"lines": [283, 288], "bytes": [10660, 10928]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:InventoryTransactionsTableModel.data", "kind": "function", "name": "InventoryTransactionsTableModel.data", "path": "modules/reporting/model.py", "summary": "Method InventoryTransactionsTableModel.data.", "tags": null, "range": {"lines": [290, 316], "bytes": [10929, 11960]}, "parent": "sym:modules/reporting/model.py:InventoryTransactionsTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel", "kind": "class", "name": "FinancialStatementTableModel", "path": "modules/reporting/model.py", "summary": "Class FinancialStatementTableModel.", "tags": null, "range": {"lines": [321, 360], "bytes": [12043, 13587]}, "parent": "mod:modules/reporting/model.py"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.__init__", "kind": "function", "name": "FinancialStatementTableModel.__init__", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.__init__.", "tags": null, "range": {"lines": [324, 326], "bytes": [12139, 12296]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.set_rows", "kind": "function", "name": "FinancialStatementTableModel.set_rows", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.set_rows.", "tags": null, "range": {"lines": [328, 331], "bytes": [12297, 12439]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.rowCount", "kind": "function", "name": "FinancialStatementTableModel.rowCount", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.rowCount.", "tags": null, "range": {"lines": [333, 334], "bytes": [12440, 12577]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.columnCount", "kind": "function", "name": "FinancialStatementTableModel.columnCount", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.columnCount.", "tags": null, "range": {"lines": [336, 337], "bytes": [12578, 12704]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.headerData", "kind": "function", "name": "FinancialStatementTableModel.headerData", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.headerData.", "tags": null, "range": {"lines": [339, 344], "bytes": [12705, 12973]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:FinancialStatementTableModel.data", "kind": "function", "name": "FinancialStatementTableModel.data", "path": "modules/reporting/model.py", "summary": "Method FinancialStatementTableModel.data.", "tags": null, "range": {"lines": [346, 360], "bytes": [12974, 13587]}, "parent": "sym:modules/reporting/model.py:FinancialStatementTableModel"}
{"id": "sym:modules/reporting/model.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/model.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [13, 17], "bytes": [396, 552]}, "parent": "mod:modules/reporting/model.py"}
{"id": "mod:modules/reporting/payment_reports.py", "kind": "module", "name": "modules.reporting.payment_reports", "path": "modules/reporting/payment_reports.py", "summary": "Module modules.reporting.payment_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel", "kind": "class", "name": "_DateAmountTableModel", "path": "modules/reporting/payment_reports.py", "summary": "Class _DateAmountTableModel.", "tags": null, "range": {"lines": [42, 81], "bytes": [1099, 2590]}, "parent": "mod:modules/reporting/payment_reports.py"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.__init__", "kind": "function", "name": "_DateAmountTableModel.__init__", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.__init__.", "tags": null, "range": {"lines": [45, 47], "bytes": [1183, 1340]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.set_rows", "kind": "function", "name": "_DateAmountTableModel.set_rows", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.set_rows.", "tags": null, "range": {"lines": [49, 52], "bytes": [1341, 1483]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.rowCount", "kind": "function", "name": "_DateAmountTableModel.rowCount", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.rowCount.", "tags": null, "range": {"lines": [55, 56], "bytes": [1503, 1640]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.columnCount", "kind": "function", "name": "_DateAmountTableModel.columnCount", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.columnCount.", "tags": null, "range": {"lines": [58, 59], "bytes": [1641, 1767]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.headerData", "kind": "function", "name": "_DateAmountTableModel.headerData", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.headerData.", "tags": null, "range": {"lines": [61, 66], "bytes": [1768, 2036]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel.data", "kind": "function", "name": "_DateAmountTableModel.data", "path": "modules/reporting/payment_reports.py", "summary": "Method _DateAmountTableModel.data.", "tags": null, "range": {"lines": [68, 81], "bytes": [2037, 2590]}, "parent": "sym:modules/reporting/payment_reports.py:_DateAmountTableModel"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab", "kind": "class", "name": "PaymentReportsTab", "path": "modules/reporting/payment_reports.py", "summary": "Payments reports (schema-safe):   • Collections by cleared date (from sale_payments, clearing_state='cleared')   • Disbursements by cleared date (from purchase_payments, clearing_state='cleared')  All data comes from ReportingRepo:   - sale_collections_by_day(date_from, date_to)   - purchase_disbursements_by_day(date_…", "tags": null, "range": {"lines": [86, 341], "bytes": [2672, 12362]}, "parent": "mod:modules/reporting/payment_reports.py"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab.__init__", "kind": "function", "name": "PaymentReportsTab.__init__", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab.__init__.", "tags": null, "range": {"lines": [97, 109], "bytes": [3085, 3513]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._build_ui", "kind": "function", "name": "PaymentReportsTab._build_ui", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._build_ui.", "tags": null, "range": {"lines": [112, 199], "bytes": [3533, 6565]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._wire_signals", "kind": "function", "name": "PaymentReportsTab._wire_signals", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._wire_signals.", "tags": null, "range": {"lines": [201, 206], "bytes": [6566, 6908]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab.set_filters", "kind": "function", "name": "PaymentReportsTab.set_filters", "path": "modules/reporting/payment_reports.py", "summary": "Optional integration point: if another screen calls set_filters(), we accept date_from/date_to (YYYY-MM-DD). Others are ignored.", "tags": null, "range": {"lines": [209, 224], "bytes": [6983, 7613]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab.refresh", "kind": "function", "name": "PaymentReportsTab.refresh", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab.refresh.", "tags": null, "range": {"lines": [228, 259], "bytes": [7655, 8981]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._on_export_pdf", "kind": "function", "name": "PaymentReportsTab._on_export_pdf", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._on_export_pdf.", "tags": null, "range": {"lines": [262, 270], "bytes": [9013, 9430]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._on_export_csv", "kind": "function", "name": "PaymentReportsTab._on_export_csv", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._on_export_csv.", "tags": null, "range": {"lines": [272, 292], "bytes": [9431, 10404]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._html_export", "kind": "function", "name": "PaymentReportsTab._html_export", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._html_export.", "tags": null, "range": {"lines": [294, 322], "bytes": [10405, 11728]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._render_pdf", "kind": "function", "name": "PaymentReportsTab._render_pdf", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._render_pdf.", "tags": null, "range": {"lines": [324, 336], "bytes": [11729, 12188]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:PaymentReportsTab._autosize", "kind": "function", "name": "PaymentReportsTab._autosize", "path": "modules/reporting/payment_reports.py", "summary": "Method PaymentReportsTab._autosize.", "tags": null, "range": {"lines": [339, 341], "bytes": [12218, 12362]}, "parent": "sym:modules/reporting/payment_reports.py:PaymentReportsTab"}
{"id": "sym:modules/reporting/payment_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/payment_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [31, 35], "bytes": [793, 949]}, "parent": "mod:modules/reporting/payment_reports.py"}
{"id": "sym:modules/reporting/payment_reports.py:_apply_date", "kind": "function", "name": "_apply_date", "path": "modules/reporting/payment_reports.py", "summary": "Function _apply_date.", "tags": null, "range": {"lines": [214, 221], "bytes": [7202, 7522]}, "parent": "mod:modules/reporting/payment_reports.py"}
{"id": "sym:modules/reporting/payment_reports.py:_table", "kind": "function", "name": "_table", "path": "modules/reporting/payment_reports.py", "summary": "Function _table.", "tags": null, "range": {"lines": [298, 307], "bytes": [10551, 11105]}, "parent": "mod:modules/reporting/payment_reports.py"}
{"id": "pkg:filters", "kind": "pkg", "name": "filters", "path": null, "summary": "External package 'filters' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rows_c", "kind": "pkg", "name": "rows_c", "path": null, "summary": "External package 'rows_c' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rows_d", "kind": "pkg", "name": "rows_d", "path": null, "summary": "External package 'rows_d' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/purchase_reports.py", "kind": "module", "name": "modules.reporting.purchase_reports", "path": "modules/reporting/purchase_reports.py", "summary": "Module modules.reporting.purchase_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel", "kind": "class", "name": "_SimpleTableModel", "path": "modules/reporting/purchase_reports.py", "summary": "Class _SimpleTableModel.", "tags": null, "range": {"lines": [32, 84], "bytes": [1108, 3116]}, "parent": "mod:modules/reporting/purchase_reports.py"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.__init__", "kind": "function", "name": "_SimpleTableModel.__init__", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.__init__.", "tags": null, "range": {"lines": [33, 45], "bytes": [1154, 1729]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.set_rows", "kind": "function", "name": "_SimpleTableModel.set_rows", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.set_rows.", "tags": null, "range": {"lines": [47, 50], "bytes": [1730, 1882]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.rowCount", "kind": "function", "name": "_SimpleTableModel.rowCount", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.rowCount.", "tags": null, "range": {"lines": [53, 54], "bytes": [1892, 2029]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.columnCount", "kind": "function", "name": "_SimpleTableModel.columnCount", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.columnCount.", "tags": null, "range": {"lines": [56, 57], "bytes": [2030, 2173]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.headerData", "kind": "function", "name": "_SimpleTableModel.headerData", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.headerData.", "tags": null, "range": {"lines": [59, 64], "bytes": [2174, 2443]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel.data", "kind": "function", "name": "_SimpleTableModel.data", "path": "modules/reporting/purchase_reports.py", "summary": "Method _SimpleTableModel.data.", "tags": null, "range": {"lines": [66, 84], "bytes": [2444, 3116]}, "parent": "sym:modules/reporting/purchase_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab", "kind": "class", "name": "PurchaseReportsTab", "path": "modules/reporting/purchase_reports.py", "summary": "Rich purchase analytics:    1) Purchases by Period (daily/monthly/yearly)   2) Purchases by Vendor   3) Purchases by Product   4) Purchases by Category   5) Top Vendors   6) Top Products   7) Returns Summary   8) Status Breakdown   9) Open Purchases  10) Drill-down Purchases  11) Payments Timeline (cleared cash outflo…", "tags": null, "range": {"lines": [88, 650], "bytes": [3197, 27873]}, "parent": "mod:modules/reporting/purchase_reports.py"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab.__init__", "kind": "function", "name": "PurchaseReportsTab.__init__", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab.__init__.", "tags": null, "range": {"lines": [105, 113], "bytes": [3627, 3902]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._fix_width", "kind": "function", "name": "PurchaseReportsTab._fix_width", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._fix_width.", "tags": null, "range": {"lines": [116, 119], "bytes": [3934, 4111]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._row", "kind": "function", "name": "PurchaseReportsTab._row", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._row.", "tags": null, "range": {"lines": [121, 132], "bytes": [4112, 4540]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._build_ui", "kind": "function", "name": "PurchaseReportsTab._build_ui", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._build_ui.", "tags": null, "range": {"lines": [134, 298], "bytes": [4541, 11279]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._wire", "kind": "function", "name": "PurchaseReportsTab._wire", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._wire.", "tags": null, "range": {"lines": [300, 303], "bytes": [11280, 11472]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._vendor_id", "kind": "function", "name": "PurchaseReportsTab._vendor_id", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._vendor_id.", "tags": null, "range": {"lines": [306, 308], "bytes": [11526, 11642]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._product_id", "kind": "function", "name": "PurchaseReportsTab._product_id", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._product_id.", "tags": null, "range": {"lines": [310, 312], "bytes": [11643, 11761]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._category_value", "kind": "function", "name": "PurchaseReportsTab._category_value", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._category_value.", "tags": null, "range": {"lines": [314, 316], "bytes": [11762, 11914]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._load_categories", "kind": "function", "name": "PurchaseReportsTab._load_categories", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._load_categories.", "tags": null, "range": {"lines": [318, 327], "bytes": [11915, 12423]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab.refresh", "kind": "function", "name": "PurchaseReportsTab.refresh", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab.refresh.", "tags": null, "range": {"lines": [331, 586], "bytes": [12512, 25253]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._active_table", "kind": "function", "name": "PurchaseReportsTab._active_table", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._active_table.", "tags": null, "range": {"lines": [589, 596], "bytes": [25329, 25601]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._export_pdf", "kind": "function", "name": "PurchaseReportsTab._export_pdf", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._export_pdf.", "tags": null, "range": {"lines": [598, 630], "bytes": [25602, 27022]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab._export_csv", "kind": "function", "name": "PurchaseReportsTab._export_csv", "path": "modules/reporting/purchase_reports.py", "summary": "Method PurchaseReportsTab._export_csv.", "tags": null, "range": {"lines": [632, 650], "bytes": [27023, 27873]}, "parent": "sym:modules/reporting/purchase_reports.py:PurchaseReportsTab"}
{"id": "sym:modules/reporting/purchase_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/purchase_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [24, 28], "bytes": [873, 1029]}, "parent": "mod:modules/reporting/purchase_reports.py"}
{"id": "sym:modules/reporting/purchase_reports.py:_add_tab", "kind": "function", "name": "_add_tab", "path": "modules/reporting/purchase_reports.py", "summary": "Function _add_tab.", "tags": null, "range": {"lines": [229, 242], "bytes": [8004, 8738]}, "parent": "mod:modules/reporting/purchase_reports.py"}
{"id": "sym:modules/reporting/purchase_reports.py:set_rows", "kind": "function", "name": "set_rows", "path": "modules/reporting/purchase_reports.py", "summary": "Function set_rows.", "tags": null, "range": {"lines": [341, 346], "bytes": [12913, 13218]}, "parent": "mod:modules/reporting/purchase_reports.py"}
{"id": "pkg:hl", "kind": "pkg", "name": "hl", "path": null, "summary": "External package 'hl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QSpinBox", "kind": "pkg", "name": "QSpinBox", "path": null, "summary": "External package 'QSpinBox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:al", "kind": "pkg", "name": "al", "path": null, "summary": "External package 'al' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_SimpleTableModel", "kind": "pkg", "name": "_SimpleTableModel", "path": null, "summary": "External package '_SimpleTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:format", "kind": "pkg", "name": "format", "path": null, "summary": "External package 'format' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:page", "kind": "pkg", "name": "page", "path": null, "summary": "External package 'page' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/quotation_reports.py", "kind": "module", "name": "modules.reporting.quotation_reports", "path": "modules/reporting/quotation_reports.py", "summary": "Module modules.reporting.quotation_reports.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/report_filters_form.py", "kind": "module", "name": "modules.reporting.report_filters_form", "path": "modules/reporting/report_filters_form.py", "summary": "Module modules.reporting.report_filters_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/report_filters_form.py:ReportMeta", "kind": "class", "name": "ReportMeta", "path": "modules/reporting/report_filters_form.py", "summary": "Class ReportMeta.", "tags": null, "range": {"lines": [31, 37], "bytes": [1009, 1173]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm", "kind": "class", "name": "ReportFiltersForm", "path": "modules/reporting/report_filters_form.py", "summary": "Two-tab UX:   - Tab 1: \"Select & Filter\" → catalog (left) + large filter form (right)   - Tab 2: \"View Report\" → big results area with Back / Refresh / Export  Apply Filters loads/updates the selected report and auto-switches to tab 2.", "tags": null, "range": {"lines": [170, 611], "bytes": [6742, 23303]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm.__init__", "kind": "function", "name": "ReportFiltersForm.__init__", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm.__init__.", "tags": null, "range": {"lines": [179, 189], "bytes": [7049, 7494]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._build_ui", "kind": "function", "name": "ReportFiltersForm._build_ui", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._build_ui.", "tags": null, "range": {"lines": [193, 373], "bytes": [7517, 14087]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._placeholder", "kind": "function", "name": "ReportFiltersForm._placeholder", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._placeholder.", "tags": null, "range": {"lines": [375, 383], "bytes": [14088, 14361]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._populate_catalog", "kind": "function", "name": "ReportFiltersForm._populate_catalog", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._populate_catalog.", "tags": null, "range": {"lines": [387, 402], "bytes": [14389, 15149]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._on_search_changed", "kind": "function", "name": "ReportFiltersForm._on_search_changed", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._on_search_changed.", "tags": null, "range": {"lines": [405, 419], "bytes": [15162, 15849]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._on_report_selected", "kind": "function", "name": "ReportFiltersForm._on_report_selected", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._on_report_selected.", "tags": null, "range": {"lines": [422, 431], "bytes": [15862, 16352]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._collect_filters_from_form", "kind": "function", "name": "ReportFiltersForm._collect_filters_from_form", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._collect_filters_from_form.", "tags": null, "range": {"lines": [435, 451], "bytes": [16380, 17267]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._apply_filters_to_form", "kind": "function", "name": "ReportFiltersForm._apply_filters_to_form", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._apply_filters_to_form.", "tags": null, "range": {"lines": [453, 484], "bytes": [17268, 18562]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._reset_filters", "kind": "function", "name": "ReportFiltersForm._reset_filters", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._reset_filters.", "tags": null, "range": {"lines": [487, 497], "bytes": [18575, 19020]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._key_for", "kind": "function", "name": "ReportFiltersForm._key_for", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._key_for.", "tags": null, "range": {"lines": [501, 502], "bytes": [19055, 19147]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._apply_filters_and_switch", "kind": "function", "name": "ReportFiltersForm._apply_filters_and_switch", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._apply_filters_and_switch.", "tags": null, "range": {"lines": [505, 529], "bytes": [19160, 20122]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._refresh_current", "kind": "function", "name": "ReportFiltersForm._refresh_current", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._refresh_current.", "tags": null, "range": {"lines": [534, 537], "bytes": [20168, 20299]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._export_pdf", "kind": "function", "name": "ReportFiltersForm._export_pdf", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._export_pdf.", "tags": null, "range": {"lines": [540, 553], "bytes": [20312, 20846]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._export_csv", "kind": "function", "name": "ReportFiltersForm._export_csv", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._export_csv.", "tags": null, "range": {"lines": [556, 581], "bytes": [20859, 21985]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm._best_effort_html_dump", "kind": "function", "name": "ReportFiltersForm._best_effort_html_dump", "path": "modules/reporting/report_filters_form.py", "summary": "Method ReportFiltersForm._best_effort_html_dump.", "tags": null, "range": {"lines": [585, 611], "bytes": [22023, 23303]}, "parent": "sym:modules/reporting/report_filters_form.py:ReportFiltersForm"}
{"id": "sym:modules/reporting/report_filters_form.py:_html_to_pdf", "kind": "function", "name": "_html_to_pdf", "path": "modules/reporting/report_filters_form.py", "summary": "Function _html_to_pdf.", "tags": null, "range": {"lines": [19, 28], "bytes": [586, 997]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_safe_import_widget", "kind": "function", "name": "_safe_import_widget", "path": "modules/reporting/report_filters_form.py", "summary": "Function _safe_import_widget.", "tags": null, "range": {"lines": [39, 55], "bytes": [1174, 1799]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_call_if_has", "kind": "function", "name": "_call_if_has", "path": "modules/reporting/report_filters_form.py", "summary": "Function _call_if_has.", "tags": null, "range": {"lines": [57, 62], "bytes": [1800, 1988]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_force_refresh_without_recursion", "kind": "function", "name": "_force_refresh_without_recursion", "path": "modules/reporting/report_filters_form.py", "summary": "Run a report widget's _refresh_impl() once, without letting it recurse into refresh().  Many report tabs wrap refresh with a decorator that makes _refresh_impl() call self.refresh() again. Depending on how it's defined, 'refresh' can exist as:   - a class method (descriptor), and/or   - an instance attribute assigned …", "tags": null, "range": {"lines": [64, 116], "bytes": [1989, 3856]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_qdate_str", "kind": "function", "name": "_qdate_str", "path": "modules/reporting/report_filters_form.py", "summary": "Function _qdate_str.", "tags": null, "range": {"lines": [118, 119], "bytes": [3857, 3928]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_val_or_none", "kind": "function", "name": "_val_or_none", "path": "modules/reporting/report_filters_form.py", "summary": "Function _val_or_none.", "tags": null, "range": {"lines": [436, 438], "bytes": [16440, 16569]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_set_date", "kind": "function", "name": "_set_date", "path": "modules/reporting/report_filters_form.py", "summary": "Function _set_date.", "tags": null, "range": {"lines": [454, 461], "bytes": [17339, 17665]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "sym:modules/reporting/report_filters_form.py:_set_spin", "kind": "function", "name": "_set_spin", "path": "modules/reporting/report_filters_form.py", "summary": "Function _set_spin.", "tags": null, "range": {"lines": [463, 465], "bytes": [17666, 17824]}, "parent": "mod:modules/reporting/report_filters_form.py"}
{"id": "pkg:impl", "kind": "pkg", "name": "impl", "path": null, "summary": "External package 'impl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:delattr", "kind": "pkg", "name": "delattr", "path": null, "summary": "External package 'delattr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_today", "kind": "pkg", "name": "_today", "path": null, "summary": "External package '_today' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ReportMeta", "kind": "pkg", "name": "ReportMeta", "path": null, "summary": "External package 'ReportMeta' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:t1_lay", "kind": "pkg", "name": "t1_lay", "path": null, "summary": "External package 't1_lay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:t1_splitter", "kind": "pkg", "name": "t1_splitter", "path": null, "summary": "External package 't1_splitter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:left_lay", "kind": "pkg", "name": "left_lay", "path": null, "summary": "External package 'left_lay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTreeWidget", "kind": "pkg", "name": "QTreeWidget", "path": null, "summary": "External package 'QTreeWidget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:filt_frame", "kind": "pkg", "name": "filt_frame", "path": null, "summary": "External package 'filt_frame' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:filt_outer", "kind": "pkg", "name": "filt_outer", "path": null, "summary": "External package 'filt_outer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sa", "kind": "pkg", "name": "sa", "path": null, "summary": "External package 'sa' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:t2_lay", "kind": "pkg", "name": "t2_lay", "path": null, "summary": "External package 't2_lay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTreeWidgetItem", "kind": "pkg", "name": "QTreeWidgetItem", "path": null, "summary": "External package 'QTreeWidgetItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cat_item", "kind": "pkg", "name": "cat_item", "path": null, "summary": "External package 'cat_item' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cat", "kind": "pkg", "name": "cat", "path": null, "summary": "External package 'cat' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:filt", "kind": "pkg", "name": "filt", "path": null, "summary": "External package 'filt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:spin", "kind": "pkg", "name": "spin", "path": null, "summary": "External package 'spin' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/sales_reports.py", "kind": "module", "name": "modules.reporting.sales_reports", "path": "modules/reporting/sales_reports.py", "summary": "Module modules.reporting.sales_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel", "kind": "class", "name": "_SimpleTableModel", "path": "modules/reporting/sales_reports.py", "summary": "Class _SimpleTableModel.", "tags": null, "range": {"lines": [36, 92], "bytes": [1190, 3392]}, "parent": "mod:modules/reporting/sales_reports.py"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.__init__", "kind": "function", "name": "_SimpleTableModel.__init__", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.__init__.", "tags": null, "range": {"lines": [37, 49], "bytes": [1236, 1811]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.set_rows", "kind": "function", "name": "_SimpleTableModel.set_rows", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.set_rows.", "tags": null, "range": {"lines": [51, 54], "bytes": [1812, 1964]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.rowCount", "kind": "function", "name": "_SimpleTableModel.rowCount", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.rowCount.", "tags": null, "range": {"lines": [56, 57], "bytes": [1965, 2102]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.columnCount", "kind": "function", "name": "_SimpleTableModel.columnCount", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.columnCount.", "tags": null, "range": {"lines": [59, 60], "bytes": [2103, 2246]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.headerData", "kind": "function", "name": "_SimpleTableModel.headerData", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.headerData.", "tags": null, "range": {"lines": [62, 67], "bytes": [2247, 2516]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:_SimpleTableModel.data", "kind": "function", "name": "_SimpleTableModel.data", "path": "modules/reporting/sales_reports.py", "summary": "Method _SimpleTableModel.data.", "tags": null, "range": {"lines": [69, 92], "bytes": [2517, 3392]}, "parent": "sym:modules/reporting/sales_reports.py:_SimpleTableModel"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab", "kind": "class", "name": "SalesReportsTab", "path": "modules/reporting/sales_reports.py", "summary": "Class SalesReportsTab.", "tags": null, "range": {"lines": [96, 527], "bytes": [3470, 22411]}, "parent": "mod:modules/reporting/sales_reports.py"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab.__init__", "kind": "function", "name": "SalesReportsTab.__init__", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab.__init__.", "tags": null, "range": {"lines": [97, 106], "bytes": [3502, 3817]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._fix_width", "kind": "function", "name": "SalesReportsTab._fix_width", "path": "modules/reporting/sales_reports.py", "summary": "Clamp a widget to a fixed, compact width.", "tags": null, "range": {"lines": [109, 113], "bytes": [3861, 4094]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._build_row", "kind": "function", "name": "SalesReportsTab._build_row", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._build_row.", "tags": null, "range": {"lines": [115, 126], "bytes": [4095, 4590]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._build_ui", "kind": "function", "name": "SalesReportsTab._build_ui", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._build_ui.", "tags": null, "range": {"lines": [128, 328], "bytes": [4591, 13610]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._wire", "kind": "function", "name": "SalesReportsTab._wire", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._wire.", "tags": null, "range": {"lines": [330, 333], "bytes": [13611, 13817]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._statuses", "kind": "function", "name": "SalesReportsTab._statuses", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._statuses.", "tags": null, "range": {"lines": [336, 342], "bytes": [13870, 14115]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._customer_id", "kind": "function", "name": "SalesReportsTab._customer_id", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._customer_id.", "tags": null, "range": {"lines": [344, 346], "bytes": [14116, 14236]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._product_id", "kind": "function", "name": "SalesReportsTab._product_id", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._product_id.", "tags": null, "range": {"lines": [348, 350], "bytes": [14237, 14355]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._category_value", "kind": "function", "name": "SalesReportsTab._category_value", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._category_value.", "tags": null, "range": {"lines": [352, 356], "bytes": [14356, 14541]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._load_categories", "kind": "function", "name": "SalesReportsTab._load_categories", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._load_categories.", "tags": null, "range": {"lines": [359, 377], "bytes": [14591, 15363]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab.refresh", "kind": "function", "name": "SalesReportsTab.refresh", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab.refresh.", "tags": null, "range": {"lines": [381, 462], "bytes": [15431, 19771]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._active_table", "kind": "function", "name": "SalesReportsTab._active_table", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._active_table.", "tags": null, "range": {"lines": [465, 472], "bytes": [19823, 20095]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._export_pdf", "kind": "function", "name": "SalesReportsTab._export_pdf", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._export_pdf.", "tags": null, "range": {"lines": [474, 507], "bytes": [20096, 21563]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:SalesReportsTab._export_csv", "kind": "function", "name": "SalesReportsTab._export_csv", "path": "modules/reporting/sales_reports.py", "summary": "Method SalesReportsTab._export_csv.", "tags": null, "range": {"lines": [509, 527], "bytes": [21564, 22411]}, "parent": "sym:modules/reporting/sales_reports.py:SalesReportsTab"}
{"id": "sym:modules/reporting/sales_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/sales_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [24, 28], "bytes": [841, 997]}, "parent": "mod:modules/reporting/sales_reports.py"}
{"id": "sym:modules/reporting/sales_reports.py:_add_tab", "kind": "function", "name": "_add_tab", "path": "modules/reporting/sales_reports.py", "summary": "Function _add_tab.", "tags": null, "range": {"lines": [262, 275], "bytes": [9585, 10319]}, "parent": "mod:modules/reporting/sales_reports.py"}
{"id": "sym:modules/reporting/sales_reports.py:load_into", "kind": "function", "name": "load_into", "path": "modules/reporting/sales_reports.py", "summary": "Function load_into.", "tags": null, "range": {"lines": [391, 426], "bytes": [15864, 17572]}, "parent": "mod:modules/reporting/sales_reports.py"}
{"id": "pkg:endswith", "kind": "pkg", "name": "endswith", "path": null, "summary": "External package 'endswith' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:srl", "kind": "pkg", "name": "srl", "path": null, "summary": "External package 'srl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ol", "kind": "pkg", "name": "ol", "path": null, "summary": "External package 'ol' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:resizeColumnsToContents", "kind": "pkg", "name": "resizeColumnsToContents", "path": null, "summary": "External package 'resizeColumnsToContents' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:horizontalHeader", "kind": "pkg", "name": "horizontalHeader", "path": null, "summary": "External package 'horizontalHeader' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/vendor_aging_reports.py", "kind": "module", "name": "modules.reporting.vendor_aging_reports", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Module modules.reporting.vendor_aging_reports.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab", "kind": "class", "name": "VendorAgingTab", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Vendor Aging:   - Top: filter bar (As of, Refresh, Export)   - Splitter:       * Top table: per-vendor aging buckets (Total Due, 0–30, 31–60, 61–90, 91+, Available Credit)       * Bottom table: open purchase headers for the selected vendor  Notes on math:   - Remaining due uses the same definition as the DB trigger:  …", "tags": null, "range": {"lines": [55, 397], "bytes": [1513, 15106]}, "parent": "mod:modules/reporting/vendor_aging_reports.py"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab.__init__", "kind": "function", "name": "VendorAgingTab.__init__", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab.__init__.", "tags": null, "range": {"lines": [70, 81], "bytes": [2175, 2543]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._build_ui", "kind": "function", "name": "VendorAgingTab._build_ui", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._build_ui.", "tags": null, "range": {"lines": [85, 136], "bytes": [2617, 4453]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._wire", "kind": "function", "name": "VendorAgingTab._wire", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._wire.", "tags": null, "range": {"lines": [138, 142], "bytes": [4454, 4736]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab.refresh", "kind": "function", "name": "VendorAgingTab.refresh", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Rebuild the aging snapshot and re-bind selection.", "tags": null, "range": {"lines": [150, 172], "bytes": [4954, 5870]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._build_vendor_aging", "kind": "function", "name": "VendorAgingTab._build_vendor_aging", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Build rows for AgingSnapshotTableModel:   keys: name, total_due, b_0_30, b_31_60, b_61_90, b_91_plus, available_credit", "tags": null, "range": {"lines": [174, 235], "bytes": [5871, 8429]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._load_open_for_row", "kind": "function", "name": "VendorAgingTab._load_open_for_row", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Populate bottom table with open purchases for the selected vendor.", "tags": null, "range": {"lines": [237, 271], "bytes": [8430, 9913]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._on_aging_selection_changed", "kind": "function", "name": "VendorAgingTab._on_aging_selection_changed", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Selection in aging table changed → reload open items for that vendor.", "tags": null, "range": {"lines": [276, 288], "bytes": [10003, 10530]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._html_from_table", "kind": "function", "name": "VendorAgingTab._html_from_table", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._html_from_table.", "tags": null, "range": {"lines": [292, 311], "bytes": [10608, 11484]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._render_pdf", "kind": "function", "name": "VendorAgingTab._render_pdf", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._render_pdf.", "tags": null, "range": {"lines": [313, 325], "bytes": [11485, 11944]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._on_export_pdf", "kind": "function", "name": "VendorAgingTab._on_export_pdf", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._on_export_pdf.", "tags": null, "range": {"lines": [328, 342], "bytes": [11957, 12704]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._on_export_csv", "kind": "function", "name": "VendorAgingTab._on_export_csv", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._on_export_csv.", "tags": null, "range": {"lines": [345, 377], "bytes": [12717, 14430]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab._autosize", "kind": "function", "name": "VendorAgingTab._autosize", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Method VendorAgingTab._autosize.", "tags": null, "range": {"lines": [381, 383], "bytes": [14508, 14652]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab.set_filters", "kind": "function", "name": "VendorAgingTab.set_filters", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Recognized:   - as_of: 'YYYY-MM-DD'", "tags": null, "range": {"lines": [386, 397], "bytes": [14726, 15106]}, "parent": "sym:modules/reporting/vendor_aging_reports.py:VendorAgingTab"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Function fmt_money.", "tags": null, "range": {"lines": [32, 36], "bytes": [810, 966]}, "parent": "mod:modules/reporting/vendor_aging_reports.py"}
{"id": "sym:modules/reporting/vendor_aging_reports.py:_days_between", "kind": "function", "name": "_days_between", "path": "modules/reporting/vendor_aging_reports.py", "summary": "Inclusive day span: (as_of - older_date).", "tags": null, "range": {"lines": [45, 52], "bytes": [1175, 1511]}, "parent": "mod:modules/reporting/vendor_aging_reports.py"}
{"id": "pkg:opens", "kind": "pkg", "name": "opens", "path": null, "summary": "External package 'opens' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:m2", "kind": "pkg", "name": "m2", "path": null, "summary": "External package 'm2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:as_of", "kind": "pkg", "name": "as_of", "path": null, "summary": "External package 'as_of' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/reporting/view.py", "kind": "module", "name": "modules.reporting.view", "path": "modules/reporting/view.py", "summary": "Module modules.reporting.view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/__init__.py", "kind": "module", "name": "modules.sales", "path": "modules/sales/__init__.py", "summary": "Sales module package exports.  Always available: - SalesController  Optional UI/model components (imported defensively so environments without Qt can still import this package): - SalesView - PaymentsView - PaymentsTableModel - SalesTableModel - SaleItemsModel - SaleForm - SaleReturnForm - SaleDetails - SaleItemsView", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/controller.py", "kind": "module", "name": "modules.sales.controller", "path": "modules/sales/controller.py", "summary": "Module modules.sales.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/controller.py:SalesController", "kind": "class", "name": "SalesController", "path": "modules/sales/controller.py", "summary": "Class SalesController.", "tags": null, "range": {"lines": [42, 1099], "bytes": [1365, 41844]}, "parent": "mod:modules/sales/controller.py"}
{"id": "sym:modules/sales/controller.py:SalesController.__init__", "kind": "function", "name": "SalesController.__init__", "path": "modules/sales/controller.py", "summary": "Method SalesController.__init__.", "tags": null, "range": {"lines": [43, 69], "bytes": [1400, 2431]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._get_db_path_from_conn", "kind": "function", "name": "SalesController._get_db_path_from_conn", "path": "modules/sales/controller.py", "summary": "Returns the file path for the 'main' database of this connection. Falls back to ':memory:' if not available.", "tags": null, "range": {"lines": [74, 88], "bytes": [2529, 3118]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController.get_widget", "kind": "function", "name": "SalesController.get_widget", "path": "modules/sales/controller.py", "summary": "Method SalesController.get_widget.", "tags": null, "range": {"lines": [90, 91], "bytes": [3119, 3181]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._wire", "kind": "function", "name": "SalesController._wire", "path": "modules/sales/controller.py", "summary": "Method SalesController._wire.", "tags": null, "range": {"lines": [95, 118], "bytes": [3261, 4380]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._on_mode_changed", "kind": "function", "name": "SalesController._on_mode_changed", "path": "modules/sales/controller.py", "summary": "Method SalesController._on_mode_changed.", "tags": null, "range": {"lines": [120, 130], "bytes": [4381, 4860]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._on_search_changed", "kind": "function", "name": "SalesController._on_search_changed", "path": "modules/sales/controller.py", "summary": "Method SalesController._on_search_changed.", "tags": null, "range": {"lines": [132, 134], "bytes": [4861, 4968]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._on_selection_changed", "kind": "function", "name": "SalesController._on_selection_changed", "path": "modules/sales/controller.py", "summary": "Method SalesController._on_selection_changed.", "tags": null, "range": {"lines": [136, 139], "bytes": [4969, 5130]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._update_action_states", "kind": "function", "name": "SalesController._update_action_states", "path": "modules/sales/controller.py", "summary": "Guard toolbar buttons by selection and mode.", "tags": null, "range": {"lines": [141, 163], "bytes": [5131, 6133]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._build_model", "kind": "function", "name": "SalesController._build_model", "path": "modules/sales/controller.py", "summary": "Build the table model using server-side search (preferred). Falls back to list_* if search API is unavailable.", "tags": null, "range": {"lines": [165, 216], "bytes": [6134, 8398]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._reload", "kind": "function", "name": "SalesController._reload", "path": "modules/sales/controller.py", "summary": "Method SalesController._reload.", "tags": null, "range": {"lines": [218, 224], "bytes": [8399, 8671]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._selected_row", "kind": "function", "name": "SalesController._selected_row", "path": "modules/sales/controller.py", "summary": "Method SalesController._selected_row.", "tags": null, "range": {"lines": [226, 234], "bytes": [8672, 8974]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._fetch_sale_financials", "kind": "function", "name": "SalesController._fetch_sale_financials", "path": "modules/sales/controller.py", "summary": "Returns a dict with:   total_amount, paid_amount, advance_payment_applied,   calculated_total_amount, remaining_due remaining_due = calculated_total_amount - paid_amount - advance_payment_applied (clamped ≥ 0)", "tags": null, "range": {"lines": [237, 275], "bytes": [9053, 10671]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._sync_details", "kind": "function", "name": "SalesController._sync_details", "path": "modules/sales/controller.py", "summary": "Method SalesController._sync_details.", "tags": null, "range": {"lines": [277, 361], "bytes": [10672, 14362]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._open_sale_form", "kind": "function", "name": "SalesController._open_sale_form", "path": "modules/sales/controller.py", "summary": "Try to instantiate SaleForm with a few safe constructor variants. - If as_quotation=True, we first try passing mode='quotation', else fall back. - Keeps bank_accounts lazy path. Returns a dialog instance or None if all ctor attempts fail.", "tags": null, "range": {"lines": [365, 401], "bytes": [14442, 15898]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._list_company_bank_accounts", "kind": "function", "name": "SalesController._list_company_bank_accounts", "path": "modules/sales/controller.py", "summary": "Adapter used by customer.money dialog. Tries common repo shapes; returns list of {id, name}.", "tags": null, "range": {"lines": [405, 428], "bytes": [15978, 17127]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._list_sales_for_customer", "kind": "function", "name": "SalesController._list_sales_for_customer", "path": "modules/sales/controller.py", "summary": "Adapter used by customer.money dialog. Shape: {sale_id, doc_no, date, total, paid}", "tags": null, "range": {"lines": [430, 475], "bytes": [17128, 18960]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._eligible_sales_for_application", "kind": "function", "name": "SalesController._eligible_sales_for_application", "path": "modules/sales/controller.py", "summary": "Build a list of sales with remaining_due > 0 for apply-advance UI. Shape per input spec: at least {sale_id, date, remaining_due, total, paid}", "tags": null, "range": {"lines": [477, 497], "bytes": [18961, 19836]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._add", "kind": "function", "name": "SalesController._add", "path": "modules/sales/controller.py", "summary": "Method SalesController._add.", "tags": null, "range": {"lines": [501, 623], "bytes": [19916, 24375]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._edit", "kind": "function", "name": "SalesController._edit", "path": "modules/sales/controller.py", "summary": "Method SalesController._edit.", "tags": null, "range": {"lines": [625, 733], "bytes": [24376, 28234]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._delete", "kind": "function", "name": "SalesController._delete", "path": "modules/sales/controller.py", "summary": "Method SalesController._delete.", "tags": null, "range": {"lines": [735, 743], "bytes": [28235, 28552]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._convert_to_sale", "kind": "function", "name": "SalesController._convert_to_sale", "path": "modules/sales/controller.py", "summary": "Method SalesController._convert_to_sale.", "tags": null, "range": {"lines": [747, 774], "bytes": [28632, 29632]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._record_payment", "kind": "function", "name": "SalesController._record_payment", "path": "modules/sales/controller.py", "summary": "Open the customer payment UI for the selected sale (sales mode only). Route ONLY to the local Customer dialog + actions.", "tags": null, "range": {"lines": [778, 831], "bytes": [29711, 31806]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._print", "kind": "function", "name": "SalesController._print", "path": "modules/sales/controller.py", "summary": "Route to the appropriate template based on mode.", "tags": null, "range": {"lines": [833, 889], "bytes": [31807, 33938]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._on_apply_credit", "kind": "function", "name": "SalesController._on_apply_credit", "path": "modules/sales/controller.py", "summary": "Apply existing customer credit to the currently selected SALE.  Route ONLY to the local Customer dialog + actions.", "tags": null, "range": {"lines": [893, 955], "bytes": [34018, 36547]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:SalesController._return", "kind": "function", "name": "SalesController._return", "path": "modules/sales/controller.py", "summary": "Inventory: insert sale_return transactions. Money:   - For 'refund now': insert a negative Cash payment via SalePaymentsRepo.   - For the remainder: add a customer return credit via CustomerAdvancesRepo. Do NOT rewrite header totals/paid/status; DB and credit ledger are source of truth.", "tags": null, "range": {"lines": [959, 1099], "bytes": [36627, 41844]}, "parent": "sym:modules/sales/controller.py:SalesController"}
{"id": "sym:modules/sales/controller.py:new_sale_id", "kind": "function", "name": "new_sale_id", "path": "modules/sales/controller.py", "summary": "Function new_sale_id.", "tags": null, "range": {"lines": [17, 25], "bytes": [573, 931]}, "parent": "mod:modules/sales/controller.py"}
{"id": "sym:modules/sales/controller.py:new_quotation_id", "kind": "function", "name": "new_quotation_id", "path": "modules/sales/controller.py", "summary": "Quotation IDs use prefix QO + yyyymmdd + -NNNN", "tags": null, "range": {"lines": [28, 39], "bytes": [933, 1363]}, "parent": "mod:modules/sales/controller.py"}
{"id": "pkg:customer", "kind": "pkg", "name": "customer", "path": null, "summary": "External package 'customer' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:printing", "kind": "pkg", "name": "printing", "path": null, "summary": "External package 'printing' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SalesView", "kind": "pkg", "name": "SalesView", "path": null, "summary": "External package 'SalesView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SalesRepo", "kind": "pkg", "name": "SalesRepo", "path": null, "summary": "External package 'SalesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:norm", "kind": "pkg", "name": "norm", "path": null, "summary": "External package 'norm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SalesTableModel", "kind": "pkg", "name": "SalesTableModel", "path": null, "summary": "External package 'SalesTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pay_repo", "kind": "pkg", "name": "pay_repo", "path": null, "summary": "External package 'pay_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:adv_repo", "kind": "pkg", "name": "adv_repo", "path": null, "summary": "External package 'adv_repo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleForm", "kind": "pkg", "name": "SaleForm", "path": null, "summary": "External package 'SaleForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleHeader", "kind": "pkg", "name": "SaleHeader", "path": null, "summary": "External package 'SaleHeader' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleItem", "kind": "pkg", "name": "SaleItem", "path": null, "summary": "External package 'SaleItem' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:customer_actions", "kind": "pkg", "name": "customer_actions", "path": null, "summary": "External package 'customer_actions' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PrintingController", "kind": "pkg", "name": "PrintingController", "path": null, "summary": "External package 'PrintingController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pc", "kind": "pkg", "name": "pc", "path": null, "summary": "External package 'pc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InvoicePreview", "kind": "pkg", "name": "InvoicePreview", "path": null, "summary": "External package 'InvoicePreview' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleReturnForm", "kind": "pkg", "name": "SaleReturnForm", "path": null, "summary": "External package 'SaleReturnForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/details.py", "kind": "module", "name": "modules.sales.details", "path": "modules/sales/details.py", "summary": "Module modules.sales.details.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/details.py:SaleDetails", "kind": "class", "name": "SaleDetails", "path": "modules/sales/details.py", "summary": "Read-only panel showing the selected sale’s/quotation’s header facts, returns summary (hidden for quotations), a compact payments list (hidden for quotations), and the customer’s credit balance (if provided).  Expected keys in set_data(dict):   sale_id, date, customer_name, total_amount, order_discount, overall_discou…", "tags": null, "range": {"lines": [9, 236], "bytes": [217, 9361]}, "parent": "mod:modules/sales/details.py"}
{"id": "sym:modules/sales/details.py:SaleDetails.__init__", "kind": "function", "name": "SaleDetails.__init__", "path": "modules/sales/details.py", "summary": "Method SaleDetails.__init__.", "tags": null, "range": {"lines": [23, 82], "bytes": [978, 3368]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails._reset", "kind": "function", "name": "SaleDetails._reset", "path": "modules/sales/details.py", "summary": "Method SaleDetails._reset.", "tags": null, "range": {"lines": [86, 96], "bytes": [3447, 3956]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails._load_payments", "kind": "function", "name": "SaleDetails._load_payments", "path": "modules/sales/details.py", "summary": "Populate the compact payments table from a list of dict-like rows.", "tags": null, "range": {"lines": [98, 149], "bytes": [3957, 5970]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails._cell", "kind": "function", "name": "SaleDetails._cell", "path": "modules/sales/details.py", "summary": "Method SaleDetails._cell.", "tags": null, "range": {"lines": [152, 155], "bytes": [5989, 6149]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails._set_row_visible", "kind": "function", "name": "SaleDetails._set_row_visible", "path": "modules/sales/details.py", "summary": "Hide/show a row in the QFormLayout by hiding both the value and its label.", "tags": null, "range": {"lines": [159, 167], "bytes": [6229, 6620]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails._apply_doc_type_visibility", "kind": "function", "name": "SaleDetails._apply_doc_type_visibility", "path": "modules/sales/details.py", "summary": "For quotations: hide returns summary rows and the payments box. For sales: show them.", "tags": null, "range": {"lines": [169, 180], "bytes": [6621, 7154]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:SaleDetails.set_data", "kind": "function", "name": "SaleDetails.set_data", "path": "modules/sales/details.py", "summary": "Method SaleDetails.set_data.", "tags": null, "range": {"lines": [184, 236], "bytes": [7233, 9361]}, "parent": "sym:modules/sales/details.py:SaleDetails"}
{"id": "sym:modules/sales/details.py:_text", "kind": "function", "name": "_text", "path": "modules/sales/details.py", "summary": "Function _text.", "tags": null, "range": {"lines": [104, 105], "bytes": [4168, 4244]}, "parent": "mod:modules/sales/details.py"}
{"id": "pkg:pay_layout", "kind": "pkg", "name": "pay_layout", "path": null, "summary": "External package 'pay_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:amt_cell", "kind": "pkg", "name": "amt_cell", "path": null, "summary": "External package 'amt_cell' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:acct_bits", "kind": "pkg", "name": "acct_bits", "path": null, "summary": "External package 'acct_bits' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:field_widget", "kind": "pkg", "name": "field_widget", "path": null, "summary": "External package 'field_widget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:norm_rows", "kind": "pkg", "name": "norm_rows", "path": null, "summary": "External package 'norm_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/form.py", "kind": "module", "name": "modules.sales.form", "path": "modules/sales/form.py", "summary": "Module modules.sales.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/form.py:SaleForm", "kind": "class", "name": "SaleForm", "path": "modules/sales/form.py", "summary": "Class SaleForm.", "tags": null, "range": {"lines": [14, 609], "bytes": [607, 26580]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:SaleForm.__init__", "kind": "function", "name": "SaleForm.__init__", "path": "modules/sales/form.py", "summary": "Method SaleForm.__init__.", "tags": null, "range": {"lines": [18, 206], "bytes": [819, 10457]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._toggle_bank_fields", "kind": "function", "name": "SaleForm._toggle_bank_fields", "path": "modules/sales/form.py", "summary": "Method SaleForm._toggle_bank_fields.", "tags": null, "range": {"lines": [209, 214], "bytes": [10480, 10716]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._warn", "kind": "function", "name": "SaleForm._warn", "path": "modules/sales/form.py", "summary": "Show a friendly message, focus a widget, optionally select a row.", "tags": null, "range": {"lines": [216, 226], "bytes": [10717, 11236]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._all_products", "kind": "function", "name": "SaleForm._all_products", "path": "modules/sales/form.py", "summary": "Method SaleForm._all_products.", "tags": null, "range": {"lines": [228, 229], "bytes": [11237, 11311]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._base_uom_id", "kind": "function", "name": "SaleForm._base_uom_id", "path": "modules/sales/form.py", "summary": "Method SaleForm._base_uom_id.", "tags": null, "range": {"lines": [231, 235], "bytes": [11312, 11547]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._add_row", "kind": "function", "name": "SaleForm._add_row", "path": "modules/sales/form.py", "summary": "Method SaleForm._add_row.", "tags": null, "range": {"lines": [237, 378], "bytes": [11548, 17724]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._reindex", "kind": "function", "name": "SaleForm._reindex", "path": "modules/sales/form.py", "summary": "Method SaleForm._reindex.", "tags": null, "range": {"lines": [380, 383], "bytes": [17725, 17870]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._rebuild_table", "kind": "function", "name": "SaleForm._rebuild_table", "path": "modules/sales/form.py", "summary": "Method SaleForm._rebuild_table.", "tags": null, "range": {"lines": [385, 394], "bytes": [17871, 18178]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._cell_changed", "kind": "function", "name": "SaleForm._cell_changed", "path": "modules/sales/form.py", "summary": "Method SaleForm._cell_changed.", "tags": null, "range": {"lines": [396, 402], "bytes": [18179, 18490]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._recalc_row", "kind": "function", "name": "SaleForm._recalc_row", "path": "modules/sales/form.py", "summary": "Method SaleForm._recalc_row.", "tags": null, "range": {"lines": [405, 440], "bytes": [18574, 20078]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._calc_raw_subtotal", "kind": "function", "name": "SaleForm._calc_raw_subtotal", "path": "modules/sales/form.py", "summary": "Method SaleForm._calc_raw_subtotal.", "tags": null, "range": {"lines": [443, 452], "bytes": [20141, 20500]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._calc_line_discount", "kind": "function", "name": "SaleForm._calc_line_discount", "path": "modules/sales/form.py", "summary": "Method SaleForm._calc_line_discount.", "tags": null, "range": {"lines": [454, 463], "bytes": [20501, 20845]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm._refresh_totals", "kind": "function", "name": "SaleForm._refresh_totals", "path": "modules/sales/form.py", "summary": "Method SaleForm._refresh_totals.", "tags": null, "range": {"lines": [465, 476], "bytes": [20846, 21398]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm.get_payload", "kind": "function", "name": "SaleForm.get_payload", "path": "modules/sales/form.py", "summary": "Method SaleForm.get_payload.", "tags": null, "range": {"lines": [479, 600], "bytes": [21458, 26388]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm.accept", "kind": "function", "name": "SaleForm.accept", "path": "modules/sales/form.py", "summary": "Method SaleForm.accept.", "tags": null, "range": {"lines": [602, 606], "bytes": [26389, 26527]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:SaleForm.payload", "kind": "function", "name": "SaleForm.payload", "path": "modules/sales/form.py", "summary": "Method SaleForm.payload.", "tags": null, "range": {"lines": [608, 609], "bytes": [26528, 26580]}, "parent": "sym:modules/sales/form.py:SaleForm"}
{"id": "sym:modules/sales/form.py:_fill_contact_from_sel", "kind": "function", "name": "_fill_contact_from_sel", "path": "modules/sales/form.py", "summary": "Function _fill_contact_from_sel.", "tags": null, "range": {"lines": [58, 64], "bytes": [2674, 2975]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:_update_add_customer_state", "kind": "function", "name": "_update_add_customer_state", "path": "modules/sales/form.py", "summary": "Function _update_add_customer_state.", "tags": null, "range": {"lines": [68, 71], "bytes": [3148, 3440]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:_add_customer_now", "kind": "function", "name": "_add_customer_now", "path": "modules/sales/form.py", "summary": "Function _add_customer_now.", "tags": null, "range": {"lines": [76, 96], "bytes": [3630, 4790]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:kill", "kind": "function", "name": "kill", "path": "modules/sales/form.py", "summary": "Function kill.", "tags": null, "range": {"lines": [296, 297], "bytes": [13808, 13903]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:on_prod", "kind": "function", "name": "on_prod", "path": "modules/sales/form.py", "summary": "Function on_prod.", "tags": null, "range": {"lines": [301, 333], "bytes": [14048, 15784]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:on_alt_changed", "kind": "function", "name": "on_alt_changed", "path": "modules/sales/form.py", "summary": "Function on_alt_changed.", "tags": null, "range": {"lines": [335, 355], "bytes": [15785, 16660]}, "parent": "mod:modules/sales/form.py"}
{"id": "sym:modules/sales/form.py:num", "kind": "function", "name": "num", "path": "modules/sales/form.py", "summary": "Function num.", "tags": null, "range": {"lines": [504, 506], "bytes": [22416, 22579]}, "parent": "mod:modules/sales/form.py"}
{"id": "pkg:setPlaceholderText", "kind": "pkg", "name": "setPlaceholderText", "path": null, "summary": "External package 'setPlaceholderText' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:c", "kind": "pkg", "name": "c", "path": null, "summary": "External package 'c' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:names", "kind": "pkg", "name": "names", "path": null, "summary": "External package 'names' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QCompleter", "kind": "pkg", "name": "QCompleter", "path": null, "summary": "External package 'QCompleter' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:add", "kind": "pkg", "name": "add", "path": null, "summary": "External package 'add' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pay", "kind": "pkg", "name": "pay", "path": null, "summary": "External package 'pay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bank_layout", "kind": "pkg", "name": "bank_layout", "path": null, "summary": "External package 'bank_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:focus_widget", "kind": "pkg", "name": "focus_widget", "path": null, "summary": "External package 'focus_widget' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cmb", "kind": "pkg", "name": "cmb", "path": null, "summary": "External package 'cmb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:base_cell", "kind": "pkg", "name": "base_cell", "path": null, "summary": "External package 'base_cell' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:alt", "kind": "pkg", "name": "alt", "path": null, "summary": "External package 'alt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:avail", "kind": "pkg", "name": "avail", "path": null, "summary": "External package 'avail' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:qty", "kind": "pkg", "name": "qty", "path": null, "summary": "External package 'qty' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:unit", "kind": "pkg", "name": "unit", "path": null, "summary": "External package 'unit' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:disc", "kind": "pkg", "name": "disc", "path": null, "summary": "External package 'disc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:marg", "kind": "pkg", "name": "marg", "path": null, "summary": "External package 'marg' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ltot", "kind": "pkg", "name": "ltot", "path": null, "summary": "External package 'ltot' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:alt_cb", "kind": "pkg", "name": "alt_cb", "path": null, "summary": "External package 'alt_cb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it_m", "kind": "pkg", "name": "it_m", "path": null, "summary": "External package 'it_m' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:it_lt", "kind": "pkg", "name": "it_lt", "path": null, "summary": "External package 'it_lt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/item_form.py", "kind": "module", "name": "modules.sales.item_form", "path": "modules/sales/item_form.py", "summary": "Module modules.sales.item_form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/items.py", "kind": "module", "name": "modules.sales.items", "path": "modules/sales/items.py", "summary": "Module modules.sales.items.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/items.py:SaleItemsView", "kind": "class", "name": "SaleItemsView", "path": "modules/sales/items.py", "summary": "Class SaleItemsView.", "tags": null, "range": {"lines": [5, 15], "bytes": [130, 526]}, "parent": "mod:modules/sales/items.py"}
{"id": "sym:modules/sales/items.py:SaleItemsView.__init__", "kind": "function", "name": "SaleItemsView.__init__", "path": "modules/sales/items.py", "summary": "Method SaleItemsView.__init__.", "tags": null, "range": {"lines": [6, 11], "bytes": [160, 405]}, "parent": "sym:modules/sales/items.py:SaleItemsView"}
{"id": "sym:modules/sales/items.py:SaleItemsView.set_rows", "kind": "function", "name": "SaleItemsView.set_rows", "path": "modules/sales/items.py", "summary": "Method SaleItemsView.set_rows.", "tags": null, "range": {"lines": [13, 15], "bytes": [406, 526]}, "parent": "sym:modules/sales/items.py:SaleItemsView"}
{"id": "pkg:SaleItemsModel", "kind": "pkg", "name": "SaleItemsModel", "path": null, "summary": "External package 'SaleItemsModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/model.py", "kind": "module", "name": "modules.sales.model", "path": "modules/sales/model.py", "summary": "Module modules.sales.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/model.py:SalesTableModel", "kind": "class", "name": "SalesTableModel", "path": "modules/sales/model.py", "summary": "Class SalesTableModel.", "tags": null, "range": {"lines": [4, 58], "bytes": [104, 2541]}, "parent": "mod:modules/sales/model.py"}
{"id": "sym:modules/sales/model.py:SalesTableModel.__init__", "kind": "function", "name": "SalesTableModel.__init__", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.__init__.", "tags": null, "range": {"lines": [7, 8], "bytes": [217, 305]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.rowCount", "kind": "function", "name": "SalesTableModel.rowCount", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.rowCount.", "tags": null, "range": {"lines": [10, 10], "bytes": [306, 370]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.columnCount", "kind": "function", "name": "SalesTableModel.columnCount", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.columnCount.", "tags": null, "range": {"lines": [11, 11], "bytes": [370, 439]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.data", "kind": "function", "name": "SalesTableModel.data", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.data.", "tags": null, "range": {"lines": [13, 51], "bytes": [440, 2204]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.headerData", "kind": "function", "name": "SalesTableModel.headerData", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.headerData.", "tags": null, "range": {"lines": [53, 54], "bytes": [2205, 2368]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.at", "kind": "function", "name": "SalesTableModel.at", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.at.", "tags": null, "range": {"lines": [56, 56], "bytes": [2369, 2428]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SalesTableModel.replace", "kind": "function", "name": "SalesTableModel.replace", "path": "modules/sales/model.py", "summary": "Method SalesTableModel.replace.", "tags": null, "range": {"lines": [57, 58], "bytes": [2428, 2541]}, "parent": "sym:modules/sales/model.py:SalesTableModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel", "kind": "class", "name": "SaleItemsModel", "path": "modules/sales/model.py", "summary": "Class SaleItemsModel.", "tags": null, "range": {"lines": [61, 77], "bytes": [2543, 3633]}, "parent": "mod:modules/sales/model.py"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.__init__", "kind": "function", "name": "SaleItemsModel.__init__", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.__init__.", "tags": null, "range": {"lines": [63, 63], "bytes": [2664, 2744]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.rowCount", "kind": "function", "name": "SaleItemsModel.rowCount", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.rowCount.", "tags": null, "range": {"lines": [64, 64], "bytes": [2744, 2808]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.columnCount", "kind": "function", "name": "SaleItemsModel.columnCount", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.columnCount.", "tags": null, "range": {"lines": [65, 65], "bytes": [2808, 2877]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.data", "kind": "function", "name": "SaleItemsModel.data", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.data.", "tags": null, "range": {"lines": [66, 74], "bytes": [2877, 3367]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.headerData", "kind": "function", "name": "SaleItemsModel.headerData", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.headerData.", "tags": null, "range": {"lines": [75, 76], "bytes": [3367, 3530]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "sym:modules/sales/model.py:SaleItemsModel.replace", "kind": "function", "name": "SaleItemsModel.replace", "path": "modules/sales/model.py", "summary": "Method SaleItemsModel.replace.", "tags": null, "range": {"lines": [77, 77], "bytes": [3530, 3633]}, "parent": "sym:modules/sales/model.py:SaleItemsModel"}
{"id": "mod:modules/sales/return.py", "kind": "module", "name": "modules.sales.return", "path": "modules/sales/return.py", "summary": "Module modules.sales.return.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/return_form.py", "kind": "module", "name": "modules.sales.return_form", "path": "modules/sales/return_form.py", "summary": "Module modules.sales.return_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm", "kind": "class", "name": "SaleReturnForm", "path": "modules/sales/return_form.py", "summary": "Returned value (after order discount proration):     returned_value = sum(qty_return * (unit_price - item_discount)) * (total_after_od / net_subtotal)  Footer shows:   - Returned Value  (after OD proration)   - Cash Refund (now) -> operator-entered value, capped at min(Returned Value, Paid)  Quick mode:   If construct…", "tags": null, "range": {"lines": [11, 410], "bytes": [366, 16715]}, "parent": "mod:modules/sales/return_form.py"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm.__init__", "kind": "function", "name": "SaleReturnForm.__init__", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm.__init__.", "tags": null, "range": {"lines": [23, 123], "bytes": [832, 5218]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._is_sale_row", "kind": "function", "name": "SaleReturnForm._is_sale_row", "path": "modules/sales/return_form.py", "summary": "Best-effort check that the row represents a real sale (not a quotation).", "tags": null, "range": {"lines": [128, 140], "bytes": [5316, 5950]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._prime_with_sale_id", "kind": "function", "name": "SaleReturnForm._prime_with_sale_id", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._prime_with_sale_id.", "tags": null, "range": {"lines": [143, 183], "bytes": [5986, 7731]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._search", "kind": "function", "name": "SaleReturnForm._search", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._search.", "tags": null, "range": {"lines": [186, 206], "bytes": [7764, 8779]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._load_items", "kind": "function", "name": "SaleReturnForm._load_items", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._load_items.", "tags": null, "range": {"lines": [208, 272], "bytes": [8780, 11598]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._toggle_return_all", "kind": "function", "name": "SaleReturnForm._toggle_return_all", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._toggle_return_all.", "tags": null, "range": {"lines": [274, 284], "bytes": [11599, 12057]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._on_refund_toggle", "kind": "function", "name": "SaleReturnForm._on_refund_toggle", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._on_refund_toggle.", "tags": null, "range": {"lines": [286, 290], "bytes": [12058, 12248]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._on_cash_changed", "kind": "function", "name": "SaleReturnForm._on_cash_changed", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._on_cash_changed.", "tags": null, "range": {"lines": [292, 297], "bytes": [12249, 12570]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._order_factor", "kind": "function", "name": "SaleReturnForm._order_factor", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._order_factor.", "tags": null, "range": {"lines": [300, 303], "bytes": [12600, 12783]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._recalc", "kind": "function", "name": "SaleReturnForm._recalc", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._recalc.", "tags": null, "range": {"lines": [306, 354], "bytes": [12817, 14597]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm._update_note", "kind": "function", "name": "SaleReturnForm._update_note", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm._update_note.", "tags": null, "range": {"lines": [356, 375], "bytes": [14598, 15423]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm.get_payload", "kind": "function", "name": "SaleReturnForm.get_payload", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm.get_payload.", "tags": null, "range": {"lines": [378, 400], "bytes": [15448, 16502]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm.accept", "kind": "function", "name": "SaleReturnForm.accept", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm.accept.", "tags": null, "range": {"lines": [402, 407], "bytes": [16503, 16644]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "sym:modules/sales/return_form.py:SaleReturnForm.payload", "kind": "function", "name": "SaleReturnForm.payload", "path": "modules/sales/return_form.py", "summary": "Method SaleReturnForm.payload.", "tags": null, "range": {"lines": [409, 410], "bytes": [16645, 16715]}, "parent": "sym:modules/sales/return_form.py:SaleReturnForm"}
{"id": "pkg:opt", "kind": "pkg", "name": "opt", "path": null, "summary": "External package 'opt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bb", "kind": "pkg", "name": "bb", "path": null, "summary": "External package 'bb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:reversed", "kind": "pkg", "name": "reversed", "path": null, "summary": "External package 'reversed' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:t", "kind": "pkg", "name": "t", "path": null, "summary": "External package 't' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:qret", "kind": "pkg", "name": "qret", "path": null, "summary": "External package 'qret' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:target", "kind": "pkg", "name": "target", "path": null, "summary": "External package 'target' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:sold", "kind": "pkg", "name": "sold", "path": null, "summary": "External package 'sold' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lt", "kind": "pkg", "name": "lt", "path": null, "summary": "External package 'lt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/sales/view.py", "kind": "module", "name": "modules.sales.view", "path": "modules/sales/view.py", "summary": "Module modules.sales.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/sales/view.py:PaymentsTableModel", "kind": "class", "name": "PaymentsTableModel", "path": "modules/sales/view.py", "summary": "Read-only, compact payments table: Columns: Date, Method, Amount ±, State, Ref #, Bank Accepts rows as sqlite3.Row or dict with keys similar to sale_payments schema.", "tags": null, "range": {"lines": [12, 84], "bytes": [399, 2833]}, "parent": "mod:modules/sales/view.py"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.__init__", "kind": "function", "name": "PaymentsTableModel.__init__", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.__init__.", "tags": null, "range": {"lines": [20, 22], "bytes": [711, 826]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.rowCount", "kind": "function", "name": "PaymentsTableModel.rowCount", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.rowCount.", "tags": null, "range": {"lines": [24, 25], "bytes": [827, 904]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.columnCount", "kind": "function", "name": "PaymentsTableModel.columnCount", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.columnCount.", "tags": null, "range": {"lines": [27, 28], "bytes": [905, 987]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.headerData", "kind": "function", "name": "PaymentsTableModel.headerData", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.headerData.", "tags": null, "range": {"lines": [30, 33], "bytes": [988, 1228]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.data", "kind": "function", "name": "PaymentsTableModel.data", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.data.", "tags": null, "range": {"lines": [35, 79], "bytes": [1229, 2699]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsTableModel.replace", "kind": "function", "name": "PaymentsTableModel.replace", "path": "modules/sales/view.py", "summary": "Method PaymentsTableModel.replace.", "tags": null, "range": {"lines": [81, 84], "bytes": [2700, 2833]}, "parent": "sym:modules/sales/view.py:PaymentsTableModel"}
{"id": "sym:modules/sales/view.py:PaymentsView", "kind": "class", "name": "PaymentsView", "path": "modules/sales/view.py", "summary": "Small wrapper: a titled group box with a TableView and read-only model. Use .set_rows(rows) to populate.", "tags": null, "range": {"lines": [87, 106], "bytes": [2835, 3466]}, "parent": "mod:modules/sales/view.py"}
{"id": "sym:modules/sales/view.py:PaymentsView.__init__", "kind": "function", "name": "PaymentsView.__init__", "path": "modules/sales/view.py", "summary": "Method PaymentsView.__init__.", "tags": null, "range": {"lines": [92, 102], "bytes": [2993, 3345]}, "parent": "sym:modules/sales/view.py:PaymentsView"}
{"id": "sym:modules/sales/view.py:PaymentsView.set_rows", "kind": "function", "name": "PaymentsView.set_rows", "path": "modules/sales/view.py", "summary": "Method PaymentsView.set_rows.", "tags": null, "range": {"lines": [104, 106], "bytes": [3346, 3466]}, "parent": "sym:modules/sales/view.py:PaymentsView"}
{"id": "sym:modules/sales/view.py:SalesView", "kind": "class", "name": "SalesView", "path": "modules/sales/view.py", "summary": "Class SalesView.", "tags": null, "range": {"lines": [109, 250], "bytes": [3468, 8703]}, "parent": "mod:modules/sales/view.py"}
{"id": "sym:modules/sales/view.py:SalesView.__init__", "kind": "function", "name": "SalesView.__init__", "path": "modules/sales/view.py", "summary": "Method SalesView.__init__.", "tags": null, "range": {"lines": [113, 194], "bytes": [3586, 6532]}, "parent": "sym:modules/sales/view.py:SalesView"}
{"id": "sym:modules/sales/view.py:SalesView.current_doc_type", "kind": "function", "name": "SalesView.current_doc_type", "path": "modules/sales/view.py", "summary": "Return the current mode as 'sale' or 'quotation'.", "tags": null, "range": {"lines": [198, 200], "bytes": [6612, 6745]}, "parent": "sym:modules/sales/view.py:SalesView"}
{"id": "sym:modules/sales/view.py:SalesView.set_mode", "kind": "function", "name": "SalesView.set_mode", "path": "modules/sales/view.py", "summary": "Programmatically set the mode and update UI.", "tags": null, "range": {"lines": [202, 213], "bytes": [6746, 7237]}, "parent": "sym:modules/sales/view.py:SalesView"}
{"id": "sym:modules/sales/view.py:SalesView._on_mode_toggle", "kind": "function", "name": "SalesView._on_mode_toggle", "path": "modules/sales/view.py", "summary": "Method SalesView._on_mode_toggle.", "tags": null, "range": {"lines": [217, 222], "bytes": [7317, 7612]}, "parent": "sym:modules/sales/view.py:SalesView"}
{"id": "sym:modules/sales/view.py:SalesView._apply_mode_visibility", "kind": "function", "name": "SalesView._apply_mode_visibility", "path": "modules/sales/view.py", "summary": "Show/hide or enable/disable widgets based on current mode.", "tags": null, "range": {"lines": [224, 250], "bytes": [7613, 8703]}, "parent": "sym:modules/sales/view.py:SalesView"}
{"id": "sym:modules/sales/view.py:g", "kind": "function", "name": "g", "path": "modules/sales/view.py", "summary": "Function g.", "tags": null, "range": {"lines": [44, 50], "bytes": [1500, 1761]}, "parent": "mod:modules/sales/view.py"}
{"id": "pkg:PaymentsTableModel", "kind": "pkg", "name": "PaymentsTableModel", "path": null, "summary": "External package 'PaymentsTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:modebar", "kind": "pkg", "name": "modebar", "path": null, "summary": "External package 'modebar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:b", "kind": "pkg", "name": "b", "path": null, "summary": "External package 'b' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:W", "kind": "pkg", "name": "W", "path": null, "summary": "External package 'W' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lv", "kind": "pkg", "name": "lv", "path": null, "summary": "External package 'lv' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleItemsView", "kind": "pkg", "name": "SaleItemsView", "path": null, "summary": "External package 'SaleItemsView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PaymentsView", "kind": "pkg", "name": "PaymentsView", "path": null, "summary": "External package 'PaymentsView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SaleDetails", "kind": "pkg", "name": "SaleDetails", "path": null, "summary": "External package 'SaleDetails' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/__init__.py", "kind": "module", "name": "modules.system_logs", "path": "modules/system_logs/__init__.py", "summary": "Module modules.system_logs.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/audit_logs_view.py", "kind": "module", "name": "modules.system_logs.audit_logs_view", "path": "modules/system_logs/audit_logs_view.py", "summary": "Module modules.system_logs.audit_logs_view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/controller.py", "kind": "module", "name": "modules.system_logs.controller", "path": "modules/system_logs/controller.py", "summary": "Module modules.system_logs.controller.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/error_logs_view.py", "kind": "module", "name": "modules.system_logs.error_logs_view", "path": "modules/system_logs/error_logs_view.py", "summary": "Module modules.system_logs.error_logs_view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/model.py", "kind": "module", "name": "modules.system_logs.model", "path": "modules/system_logs/model.py", "summary": "Module modules.system_logs.model.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/system_logs/view.py", "kind": "module", "name": "modules.system_logs.view", "path": "modules/system_logs/view.py", "summary": "Module modules.system_logs.view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/__init__.py", "kind": "module", "name": "modules.users", "path": "modules/users/__init__.py", "summary": "Module modules.users.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/controller.py", "kind": "module", "name": "modules.users.controller", "path": "modules/users/controller.py", "summary": "Module modules.users.controller.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/form.py", "kind": "module", "name": "modules.users.form", "path": "modules/users/form.py", "summary": "Module modules.users.form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/model.py", "kind": "module", "name": "modules.users.model", "path": "modules/users/model.py", "summary": "Module modules.users.model.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/permission_form.py", "kind": "module", "name": "modules.users.permission_form", "path": "modules/users/permission_form.py", "summary": "Module modules.users.permission_form.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/users/view.py", "kind": "module", "name": "modules.users.view", "path": "modules/users/view.py", "summary": "Module modules.users.view.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/__init__.py", "kind": "module", "name": "modules.vendor", "path": "modules/vendor/__init__.py", "summary": "Module modules.vendor.", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/bank_accounts_dialog.py", "kind": "module", "name": "modules.vendor.bank_accounts_dialog", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Module modules.vendor.bank_accounts_dialog.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog", "kind": "class", "name": "AccountEditDialog", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Add/Edit a single vendor bank account (no 'primary' toggle here).", "tags": null, "range": {"lines": [14, 69], "bytes": [385, 2631]}, "parent": "mod:modules/vendor/bank_accounts_dialog.py"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog.__init__", "kind": "function", "name": "AccountEditDialog.__init__", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method AccountEditDialog.__init__.", "tags": null, "range": {"lines": [16, 51], "bytes": [495, 1935]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog.accept", "kind": "function", "name": "AccountEditDialog.accept", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method AccountEditDialog.accept.", "tags": null, "range": {"lines": [53, 66], "bytes": [1936, 2560]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog.payload", "kind": "function", "name": "AccountEditDialog.payload", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method AccountEditDialog.payload.", "tags": null, "range": {"lines": [68, 69], "bytes": [2561, 2631]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:AccountEditDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog", "kind": "class", "name": "VendorBankAccountsDialog", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Manage a vendor's bank accounts:   - List: Label, Bank, Account/IBAN, Primary, Active   - Add/Edit   - Activate/Deactivate   - Make Primary (force flip: clear others, set one)", "tags": null, "range": {"lines": [72, 277], "bytes": [2633, 10731]}, "parent": "mod:modules/vendor/bank_accounts_dialog.py"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog.__init__", "kind": "function", "name": "VendorBankAccountsDialog.__init__", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog.__init__.", "tags": null, "range": {"lines": [82, 130], "bytes": [2960, 4765]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._reload", "kind": "function", "name": "VendorBankAccountsDialog._reload", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._reload.", "tags": null, "range": {"lines": [132, 162], "bytes": [4766, 6089]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._selected_id", "kind": "function", "name": "VendorBankAccountsDialog._selected_id", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._selected_id.", "tags": null, "range": {"lines": [164, 169], "bytes": [6090, 6338]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._update_toggle_label", "kind": "function", "name": "VendorBankAccountsDialog._update_toggle_label", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._update_toggle_label.", "tags": null, "range": {"lines": [171, 178], "bytes": [6339, 6689]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._add", "kind": "function", "name": "VendorBankAccountsDialog._add", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._add.", "tags": null, "range": {"lines": [181, 194], "bytes": [6714, 7204]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._edit", "kind": "function", "name": "VendorBankAccountsDialog._edit", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._edit.", "tags": null, "range": {"lines": [196, 235], "bytes": [7205, 8917]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._toggle_active", "kind": "function", "name": "VendorBankAccountsDialog._toggle_active", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._toggle_active.", "tags": null, "range": {"lines": [237, 252], "bytes": [8918, 9645]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog._make_primary", "kind": "function", "name": "VendorBankAccountsDialog._make_primary", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog._make_primary.", "tags": null, "range": {"lines": [254, 272], "bytes": [9646, 10516]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog.showEvent", "kind": "function", "name": "VendorBankAccountsDialog.showEvent", "path": "modules/vendor/bank_accounts_dialog.py", "summary": "Method VendorBankAccountsDialog.showEvent.", "tags": null, "range": {"lines": [275, 277], "bytes": [10575, 10731]}, "parent": "sym:modules/vendor/bank_accounts_dialog.py:VendorBankAccountsDialog"}
{"id": "pkg:AccountEditDialog", "kind": "pkg", "name": "AccountEditDialog", "path": null, "summary": "External package 'AccountEditDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:selectionChanged", "kind": "pkg", "name": "selectionChanged", "path": null, "summary": "External package 'selectionChanged' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/controller.py", "kind": "module", "name": "modules.vendor.controller", "path": "modules/vendor/controller.py", "summary": "Module modules.vendor.controller.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/controller.py:VendorController", "kind": "class", "name": "VendorController", "path": "modules/vendor/controller.py", "summary": "Class VendorController.", "tags": null, "range": {"lines": [40, 935], "bytes": [1846, 38807]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "sym:modules/vendor/controller.py:VendorController.__init__", "kind": "function", "name": "VendorController.__init__", "path": "modules/vendor/controller.py", "summary": "Method VendorController.__init__.", "tags": null, "range": {"lines": [41, 49], "bytes": [1882, 2279]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.get_widget", "kind": "function", "name": "VendorController.get_widget", "path": "modules/vendor/controller.py", "summary": "Method VendorController.get_widget.", "tags": null, "range": {"lines": [51, 52], "bytes": [2280, 2342]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._wire", "kind": "function", "name": "VendorController._wire", "path": "modules/vendor/controller.py", "summary": "Method VendorController._wire.", "tags": null, "range": {"lines": [54, 76], "bytes": [2343, 3756]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._build_model", "kind": "function", "name": "VendorController._build_model", "path": "modules/vendor/controller.py", "summary": "Method VendorController._build_model.", "tags": null, "range": {"lines": [78, 93], "bytes": [3757, 4537]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._reload", "kind": "function", "name": "VendorController._reload", "path": "modules/vendor/controller.py", "summary": "Method VendorController._reload.", "tags": null, "range": {"lines": [95, 101], "bytes": [4538, 4784]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._apply_filter", "kind": "function", "name": "VendorController._apply_filter", "path": "modules/vendor/controller.py", "summary": "Method VendorController._apply_filter.", "tags": null, "range": {"lines": [103, 104], "bytes": [4785, 4897]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._selected_id", "kind": "function", "name": "VendorController._selected_id", "path": "modules/vendor/controller.py", "summary": "Method VendorController._selected_id.", "tags": null, "range": {"lines": [106, 111], "bytes": [4898, 5149]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._current_vendor_row", "kind": "function", "name": "VendorController._current_vendor_row", "path": "modules/vendor/controller.py", "summary": "Method VendorController._current_vendor_row.", "tags": null, "range": {"lines": [113, 115], "bytes": [5150, 5294]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._update_details", "kind": "function", "name": "VendorController._update_details", "path": "modules/vendor/controller.py", "summary": "Method VendorController._update_details.", "tags": null, "range": {"lines": [117, 118], "bytes": [5295, 5396]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._list_company_bank_accounts", "kind": "function", "name": "VendorController._list_company_bank_accounts", "path": "modules/vendor/controller.py", "summary": "Method VendorController._list_company_bank_accounts.", "tags": null, "range": {"lines": [121, 133], "bytes": [5494, 5942]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._list_vendor_bank_accounts", "kind": "function", "name": "VendorController._list_vendor_bank_accounts", "path": "modules/vendor/controller.py", "summary": "Method VendorController._list_vendor_bank_accounts.", "tags": null, "range": {"lines": [135, 146], "bytes": [5943, 6461]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._open_purchases_for_vendor", "kind": "function", "name": "VendorController._open_purchases_for_vendor", "path": "modules/vendor/controller.py", "summary": "Returns purchases with positive remaining balance: balance = total_amount - paid_amount - advance_payment_applied", "tags": null, "range": {"lines": [148, 166], "bytes": [6462, 7404]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._list_open_purchases_for_vendor", "kind": "function", "name": "VendorController._list_open_purchases_for_vendor", "path": "modules/vendor/controller.py", "summary": "Adapter for dialog: normalize keys to {purchase_id, doc_no, date, total, paid}", "tags": null, "range": {"lines": [168, 187], "bytes": [7405, 8187]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.list_open_purchases", "kind": "function", "name": "VendorController.list_open_purchases", "path": "modules/vendor/controller.py", "summary": "Method VendorController.list_open_purchases.", "tags": null, "range": {"lines": [190, 195], "bytes": [8257, 8505]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._purchase_belongs_to_vendor", "kind": "function", "name": "VendorController._purchase_belongs_to_vendor", "path": "modules/vendor/controller.py", "summary": "Method VendorController._purchase_belongs_to_vendor.", "tags": null, "range": {"lines": [198, 203], "bytes": [8542, 8846]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._remaining_due_for_purchase", "kind": "function", "name": "VendorController._remaining_due_for_purchase", "path": "modules/vendor/controller.py", "summary": "Compute remaining due using header numbers that (per schema) reflect trigger math:   remaining = total_amount - paid_amount - advance_payment_applied", "tags": null, "range": {"lines": [205, 227], "bytes": [8847, 9783]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._vendor_credit_balance", "kind": "function", "name": "VendorController._vendor_credit_balance", "path": "modules/vendor/controller.py", "summary": "Method VendorController._vendor_credit_balance.", "tags": null, "range": {"lines": [229, 233], "bytes": [9784, 9968]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_record_payment", "kind": "function", "name": "VendorController._on_record_payment", "path": "modules/vendor/controller.py", "summary": "Open vendor money dialog in 'payment' mode, then persist via PurchasePaymentsRepo. Orchestration update:   - Pre-check remaining due to avoid obvious overpay.   - Catch domain errors (if exposed) and surface DB integrity errors.", "tags": null, "range": {"lines": [237, 320], "bytes": [10059, 13662]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_record_advance_dialog", "kind": "function", "name": "VendorController._on_record_advance_dialog", "path": "modules/vendor/controller.py", "summary": "Open vendor money dialog in 'advance' mode, then persist via VendorAdvancesRepo.", "tags": null, "range": {"lines": [322, 363], "bytes": [13663, 15113]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_apply_advance_dialog", "kind": "function", "name": "VendorController._on_apply_advance_dialog", "path": "modules/vendor/controller.py", "summary": "Open vendor money dialog in 'apply_advance' mode, then persist via VendorAdvancesRepo. Orchestration update:   - Pre-check both vendor credit balance and purchase remaining due.   - Catch domain errors (e.g., OverapplyVendorAdvanceError) plus DB integrity errors.", "tags": null, "range": {"lines": [365, 438], "bytes": [15114, 18109]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_update_clearing", "kind": "function", "name": "VendorController._on_update_clearing", "path": "modules/vendor/controller.py", "summary": "Prompt for a payment_id, clearing_state, optional cleared_date & notes, and call PurchasePaymentsRepo.update_clearing_state(...).", "tags": null, "range": {"lines": [441, 526], "bytes": [18160, 21510]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_list_vendor_payments", "kind": "function", "name": "VendorController._on_list_vendor_payments", "path": "modules/vendor/controller.py", "summary": "Method VendorController._on_list_vendor_payments.", "tags": null, "range": {"lines": [529, 536], "bytes": [21555, 21993]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_list_purchase_payments", "kind": "function", "name": "VendorController._on_list_purchase_payments", "path": "modules/vendor/controller.py", "summary": "Method VendorController._on_list_purchase_payments.", "tags": null, "range": {"lines": [538, 548], "bytes": [21994, 22456]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._on_list_pending_instruments", "kind": "function", "name": "VendorController._on_list_pending_instruments", "path": "modules/vendor/controller.py", "summary": "Method VendorController._on_list_pending_instruments.", "tags": null, "range": {"lines": [550, 556], "bytes": [22457, 22780]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._prompt_text", "kind": "function", "name": "VendorController._prompt_text", "path": "modules/vendor/controller.py", "summary": "Method VendorController._prompt_text.", "tags": null, "range": {"lines": [558, 585], "bytes": [22781, 23826]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.build_vendor_statement", "kind": "function", "name": "VendorController.build_vendor_statement", "path": "modules/vendor/controller.py", "summary": "Build a vendor statement over a date range. Notes: - Purchase headers already reflect CLEARED-ONLY cash rollups (paid_amount). - Here, we also include ONLY payments whose clearing_state='cleared' so   the statement reconciles with headers/aging.", "tags": null, "range": {"lines": [588, 733], "bytes": [23879, 30343]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.list_bank_accounts", "kind": "function", "name": "VendorController.list_bank_accounts", "path": "modules/vendor/controller.py", "summary": "List bank accounts for the currently selected vendor.", "tags": null, "range": {"lines": [739, 745], "bytes": [30467, 30817]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.create_bank_account", "kind": "function", "name": "VendorController.create_bank_account", "path": "modules/vendor/controller.py", "summary": "Create a bank account for the selected vendor.", "tags": null, "range": {"lines": [747, 757], "bytes": [30818, 31330]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.update_bank_account", "kind": "function", "name": "VendorController.update_bank_account", "path": "modules/vendor/controller.py", "summary": "Update a vendor bank account.", "tags": null, "range": {"lines": [759, 765], "bytes": [31331, 31697]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.deactivate_bank_account", "kind": "function", "name": "VendorController.deactivate_bank_account", "path": "modules/vendor/controller.py", "summary": "Deactivate (or delete if unreferenced) a vendor bank account.", "tags": null, "range": {"lines": [767, 773], "bytes": [31698, 32064]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.set_primary_bank_account", "kind": "function", "name": "VendorController.set_primary_bank_account", "path": "modules/vendor/controller.py", "summary": "Mark an account as primary for the selected vendor.", "tags": null, "range": {"lines": [775, 785], "bytes": [32065, 32600]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.get_primary_vendor_bank_account", "kind": "function", "name": "VendorController.get_primary_vendor_bank_account", "path": "modules/vendor/controller.py", "summary": "Return the default/primary bank account dict for a vendor (None if not present). Useful to pre-populate the purchase payment flow with a vendor's receiving account.", "tags": null, "range": {"lines": [788, 800], "bytes": [32664, 33245]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController.get_primary_vendor_bank_account_id", "kind": "function", "name": "VendorController.get_primary_vendor_bank_account_id", "path": "modules/vendor/controller.py", "summary": "Return the vendor_bank_account_id of the primary account (or None).", "tags": null, "range": {"lines": [802, 807], "bytes": [33246, 33625]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._add", "kind": "function", "name": "VendorController._add", "path": "modules/vendor/controller.py", "summary": "Method VendorController._add.", "tags": null, "range": {"lines": [810, 822], "bytes": [33637, 34188]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._edit", "kind": "function", "name": "VendorController._edit", "path": "modules/vendor/controller.py", "summary": "Method VendorController._edit.", "tags": null, "range": {"lines": [824, 841], "bytes": [34189, 34934]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._delete", "kind": "function", "name": "VendorController._delete", "path": "modules/vendor/controller.py", "summary": "Method VendorController._delete.", "tags": null, "range": {"lines": [843, 850], "bytes": [34935, 35221]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._open_vendor_bank_accounts_dialog", "kind": "function", "name": "VendorController._open_vendor_bank_accounts_dialog", "path": "modules/vendor/controller.py", "summary": "Open the vendor bank accounts dialog (lazy import to keep dependencies optional).", "tags": null, "range": {"lines": [853, 872], "bytes": [35266, 36310]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:VendorController._open_grant_credit_dialog", "kind": "function", "name": "VendorController._open_grant_credit_dialog", "path": "modules/vendor/controller.py", "summary": "Tiny inline dialog to grant vendor credit.", "tags": null, "range": {"lines": [874, 935], "bytes": [36311, 38807]}, "parent": "sym:modules/vendor/controller.py:VendorController"}
{"id": "sym:modules/vendor/controller.py:ClearingDialog", "kind": "class", "name": "ClearingDialog", "path": "modules/vendor/controller.py", "summary": "Class ClearingDialog.", "tags": null, "range": {"lines": [452, 502], "bytes": [18580, 20737]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "sym:modules/vendor/controller.py:ClearingDialog.__init__", "kind": "function", "name": "ClearingDialog.__init__", "path": "modules/vendor/controller.py", "summary": "Method ClearingDialog.__init__.", "tags": null, "range": {"lines": [453, 481], "bytes": [18619, 19962]}, "parent": "sym:modules/vendor/controller.py:ClearingDialog"}
{"id": "sym:modules/vendor/controller.py:ClearingDialog._on_ok", "kind": "function", "name": "ClearingDialog._on_ok", "path": "modules/vendor/controller.py", "summary": "Method ClearingDialog._on_ok.", "tags": null, "range": {"lines": [483, 499], "bytes": [19963, 20668]}, "parent": "sym:modules/vendor/controller.py:ClearingDialog"}
{"id": "sym:modules/vendor/controller.py:ClearingDialog.payload", "kind": "function", "name": "ClearingDialog.payload", "path": "modules/vendor/controller.py", "summary": "Method ClearingDialog.payload.", "tags": null, "range": {"lines": [501, 502], "bytes": [20669, 20737]}, "parent": "sym:modules/vendor/controller.py:ClearingDialog"}
{"id": "sym:modules/vendor/controller.py:_Prompt", "kind": "class", "name": "_Prompt", "path": "modules/vendor/controller.py", "summary": "Class _Prompt.", "tags": null, "range": {"lines": [560, 580], "bytes": [22883, 23701]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "sym:modules/vendor/controller.py:_Prompt.__init__", "kind": "function", "name": "_Prompt.__init__", "path": "modules/vendor/controller.py", "summary": "Method _Prompt.__init__.", "tags": null, "range": {"lines": [561, 573], "bytes": [22915, 23524]}, "parent": "sym:modules/vendor/controller.py:_Prompt"}
{"id": "sym:modules/vendor/controller.py:_Prompt._on_ok", "kind": "function", "name": "_Prompt._on_ok", "path": "modules/vendor/controller.py", "summary": "Method _Prompt._on_ok.", "tags": null, "range": {"lines": [575, 577], "bytes": [23525, 23638]}, "parent": "sym:modules/vendor/controller.py:_Prompt"}
{"id": "sym:modules/vendor/controller.py:_Prompt.value", "kind": "function", "name": "_Prompt.value", "path": "modules/vendor/controller.py", "summary": "Method _Prompt.value.", "tags": null, "range": {"lines": [579, 580], "bytes": [23639, 23701]}, "parent": "sym:modules/vendor/controller.py:_Prompt"}
{"id": "sym:modules/vendor/controller.py:GrantCreditDialog", "kind": "class", "name": "GrantCreditDialog", "path": "modules/vendor/controller.py", "summary": "Class GrantCreditDialog.", "tags": null, "range": {"lines": [876, 914], "bytes": [36425, 38072]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "sym:modules/vendor/controller.py:GrantCreditDialog.__init__", "kind": "function", "name": "GrantCreditDialog.__init__", "path": "modules/vendor/controller.py", "summary": "Method GrantCreditDialog.__init__.", "tags": null, "range": {"lines": [877, 897], "bytes": [36467, 37516]}, "parent": "sym:modules/vendor/controller.py:GrantCreditDialog"}
{"id": "sym:modules/vendor/controller.py:GrantCreditDialog._on_ok", "kind": "function", "name": "GrantCreditDialog._on_ok", "path": "modules/vendor/controller.py", "summary": "Method GrantCreditDialog._on_ok.", "tags": null, "range": {"lines": [899, 911], "bytes": [37517, 38003]}, "parent": "sym:modules/vendor/controller.py:GrantCreditDialog"}
{"id": "sym:modules/vendor/controller.py:GrantCreditDialog.payload", "kind": "function", "name": "GrantCreditDialog.payload", "path": "modules/vendor/controller.py", "summary": "Method GrantCreditDialog.payload.", "tags": null, "range": {"lines": [913, 914], "bytes": [38004, 38072]}, "parent": "sym:modules/vendor/controller.py:GrantCreditDialog"}
{"id": "sym:modules/vendor/controller.py:info", "kind": "function", "name": "info", "path": "modules/vendor/controller.py", "summary": "Function info.", "tags": null, "range": {"lines": [36, 37], "bytes": [1762, 1844]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "sym:modules/vendor/controller.py:tie_value", "kind": "function", "name": "tie_value", "path": "modules/vendor/controller.py", "summary": "Function tie_value.", "tags": null, "range": {"lines": [698, 700], "bytes": [28766, 28931]}, "parent": "mod:modules/vendor/controller.py"}
{"id": "pkg:payment_dialog", "kind": "pkg", "name": "payment_dialog", "path": null, "summary": "External package 'payment_dialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bank_accounts_dialog", "kind": "pkg", "name": "bank_accounts_dialog", "path": null, "summary": "External package 'bank_accounts_dialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorView", "kind": "pkg", "name": "VendorView", "path": null, "summary": "External package 'VendorView' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorsTableModel", "kind": "pkg", "name": "VendorsTableModel", "path": null, "summary": "External package 'VendorsTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ClearingDialog", "kind": "pkg", "name": "ClearingDialog", "path": null, "summary": "External package 'ClearingDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_Prompt", "kind": "pkg", "name": "_Prompt", "path": null, "summary": "External package '_Prompt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:prep", "kind": "pkg", "name": "prep", "path": null, "summary": "External package 'prep' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:credit_note_rows_to_enrich", "kind": "pkg", "name": "credit_note_rows_to_enrich", "path": null, "summary": "External package 'credit_note_rows_to_enrich' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:out_rows", "kind": "pkg", "name": "out_rows", "path": null, "summary": "External package 'out_rows' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorForm", "kind": "pkg", "name": "VendorForm", "path": null, "summary": "External package 'VendorForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorBankAccountsDialog", "kind": "pkg", "name": "VendorBankAccountsDialog", "path": null, "summary": "External package 'VendorBankAccountsDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:GrantCreditDialog", "kind": "pkg", "name": "GrantCreditDialog", "path": null, "summary": "External package 'GrantCreditDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/details.py", "kind": "module", "name": "modules.vendor.details", "path": "modules/vendor/details.py", "summary": "Module modules.vendor.details.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/details.py:VendorDetails", "kind": "class", "name": "VendorDetails", "path": "modules/vendor/details.py", "summary": "Class VendorDetails.", "tags": null, "range": {"lines": [3, 33], "bytes": [84, 1182]}, "parent": "mod:modules/vendor/details.py"}
{"id": "sym:modules/vendor/details.py:VendorDetails.__init__", "kind": "function", "name": "VendorDetails.__init__", "path": "modules/vendor/details.py", "summary": "Method VendorDetails.__init__.", "tags": null, "range": {"lines": [4, 19], "bytes": [114, 683]}, "parent": "sym:modules/vendor/details.py:VendorDetails"}
{"id": "sym:modules/vendor/details.py:VendorDetails.clear", "kind": "function", "name": "VendorDetails.clear", "path": "modules/vendor/details.py", "summary": "Method VendorDetails.clear.", "tags": null, "range": {"lines": [21, 25], "bytes": [684, 849]}, "parent": "sym:modules/vendor/details.py:VendorDetails"}
{"id": "sym:modules/vendor/details.py:VendorDetails.set_data", "kind": "function", "name": "VendorDetails.set_data", "path": "modules/vendor/details.py", "summary": "Method VendorDetails.set_data.", "tags": null, "range": {"lines": [27, 33], "bytes": [850, 1182]}, "parent": "sym:modules/vendor/details.py:VendorDetails"}
{"id": "mod:modules/vendor/form.py", "kind": "module", "name": "modules.vendor.form", "path": "modules/vendor/form.py", "summary": "Module modules.vendor.form.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/form.py:VendorForm", "kind": "class", "name": "VendorForm", "path": "modules/vendor/form.py", "summary": "Class VendorForm.", "tags": null, "range": {"lines": [9, 98], "bytes": [233, 3607]}, "parent": "mod:modules/vendor/form.py"}
{"id": "sym:modules/vendor/form.py:VendorForm.__init__", "kind": "function", "name": "VendorForm.__init__", "path": "modules/vendor/form.py", "summary": "Method VendorForm.__init__.", "tags": null, "range": {"lines": [15, 71], "bytes": [465, 2690]}, "parent": "sym:modules/vendor/form.py:VendorForm"}
{"id": "sym:modules/vendor/form.py:VendorForm.set_vendor_id", "kind": "function", "name": "VendorForm.set_vendor_id", "path": "modules/vendor/form.py", "summary": "Enable operational actions once a vendor record exists (optional helper).", "tags": null, "range": {"lines": [73, 77], "bytes": [2691, 2970]}, "parent": "sym:modules/vendor/form.py:VendorForm"}
{"id": "sym:modules/vendor/form.py:VendorForm.get_payload", "kind": "function", "name": "VendorForm.get_payload", "path": "modules/vendor/form.py", "summary": "Method VendorForm.get_payload.", "tags": null, "range": {"lines": [79, 88], "bytes": [2971, 3408]}, "parent": "sym:modules/vendor/form.py:VendorForm"}
{"id": "sym:modules/vendor/form.py:VendorForm.accept", "kind": "function", "name": "VendorForm.accept", "path": "modules/vendor/form.py", "summary": "Method VendorForm.accept.", "tags": null, "range": {"lines": [90, 95], "bytes": [3409, 3554]}, "parent": "sym:modules/vendor/form.py:VendorForm"}
{"id": "sym:modules/vendor/form.py:VendorForm.payload", "kind": "function", "name": "VendorForm.payload", "path": "modules/vendor/form.py", "summary": "Method VendorForm.payload.", "tags": null, "range": {"lines": [97, 98], "bytes": [3555, 3607]}, "parent": "sym:modules/vendor/form.py:VendorForm"}
{"id": "pkg:ops_bar", "kind": "pkg", "name": "ops_bar", "path": null, "summary": "External package 'ops_bar' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/grant_credit_dialog.py", "kind": "module", "name": "modules.vendor.grant_credit_dialog", "path": "modules/vendor/grant_credit_dialog.py", "summary": "Module modules.vendor.grant_credit_dialog.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog", "kind": "class", "name": "GrantVendorCreditDialog", "path": "modules/vendor/grant_credit_dialog.py", "summary": "A tiny dialog to grant vendor credit (manual deposit/adjustment). Writes vendor_advances with source_type='deposit'.", "tags": null, "range": {"lines": [16, 91], "bytes": [419, 3133]}, "parent": "mod:modules/vendor/grant_credit_dialog.py"}
{"id": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog.__init__", "kind": "function", "name": "GrantVendorCreditDialog.__init__", "path": "modules/vendor/grant_credit_dialog.py", "summary": "Method GrantVendorCreditDialog.__init__.", "tags": null, "range": {"lines": [21, 60], "bytes": [600, 1992]}, "parent": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog"}
{"id": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog.accept", "kind": "function", "name": "GrantVendorCreditDialog.accept", "path": "modules/vendor/grant_credit_dialog.py", "summary": "Method GrantVendorCreditDialog.accept.", "tags": null, "range": {"lines": [62, 88], "bytes": [1993, 3062]}, "parent": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog"}
{"id": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog.payload", "kind": "function", "name": "GrantVendorCreditDialog.payload", "path": "modules/vendor/grant_credit_dialog.py", "summary": "Method GrantVendorCreditDialog.payload.", "tags": null, "range": {"lines": [90, 91], "bytes": [3063, 3133]}, "parent": "sym:modules/vendor/grant_credit_dialog.py:GrantVendorCreditDialog"}
{"id": "mod:modules/vendor/model.py", "kind": "module", "name": "modules.vendor.model", "path": "modules/vendor/model.py", "summary": "Module modules.vendor.model.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/model.py:VendorsTableModel", "kind": "class", "name": "VendorsTableModel", "path": "modules/vendor/model.py", "summary": "Class VendorsTableModel.", "tags": null, "range": {"lines": [26, 66], "bytes": [748, 2140]}, "parent": "mod:modules/vendor/model.py"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.__init__", "kind": "function", "name": "VendorsTableModel.__init__", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.__init__.", "tags": null, "range": {"lines": [29, 31], "bytes": [846, 941]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.rowCount", "kind": "function", "name": "VendorsTableModel.rowCount", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.rowCount.", "tags": null, "range": {"lines": [33, 34], "bytes": [942, 1033]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.columnCount", "kind": "function", "name": "VendorsTableModel.columnCount", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.columnCount.", "tags": null, "range": {"lines": [36, 37], "bytes": [1034, 1130]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.data", "kind": "function", "name": "VendorsTableModel.data", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.data.", "tags": null, "range": {"lines": [39, 52], "bytes": [1131, 1622]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.headerData", "kind": "function", "name": "VendorsTableModel.headerData", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.headerData.", "tags": null, "range": {"lines": [54, 57], "bytes": [1623, 1877]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.at", "kind": "function", "name": "VendorsTableModel.at", "path": "modules/vendor/model.py", "summary": "Return the underlying row object (Vendor dataclass or dict).", "tags": null, "range": {"lines": [59, 61], "bytes": [1878, 2012]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorsTableModel.replace", "kind": "function", "name": "VendorsTableModel.replace", "path": "modules/vendor/model.py", "summary": "Method VendorsTableModel.replace.", "tags": null, "range": {"lines": [63, 66], "bytes": [2013, 2140]}, "parent": "sym:modules/vendor/model.py:VendorsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel", "kind": "class", "name": "VendorBankAccountsTableModel", "path": "modules/vendor/model.py", "summary": "Mirrors rows returned by VendorBankAccountsRepo.list(vendor_id, active_only=True).  Expected fields per row:   vendor_bank_account_id, bank_name, branch, account_number, ifsc_swift,   account_type, is_primary, is_active", "tags": null, "range": {"lines": [69, 122], "bytes": [2142, 4174]}, "parent": "mod:modules/vendor/model.py"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.__init__", "kind": "function", "name": "VendorBankAccountsTableModel.__init__", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.__init__.", "tags": null, "range": {"lines": [79, 81], "bytes": [2547, 2642]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.rowCount", "kind": "function", "name": "VendorBankAccountsTableModel.rowCount", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.rowCount.", "tags": null, "range": {"lines": [83, 84], "bytes": [2643, 2734]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.columnCount", "kind": "function", "name": "VendorBankAccountsTableModel.columnCount", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.columnCount.", "tags": null, "range": {"lines": [86, 87], "bytes": [2735, 2831]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.data", "kind": "function", "name": "VendorBankAccountsTableModel.data", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.data.", "tags": null, "range": {"lines": [89, 108], "bytes": [2832, 3645]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.headerData", "kind": "function", "name": "VendorBankAccountsTableModel.headerData", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.headerData.", "tags": null, "range": {"lines": [110, 113], "bytes": [3646, 3900]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.at", "kind": "function", "name": "VendorBankAccountsTableModel.at", "path": "modules/vendor/model.py", "summary": "Return the underlying row dict/sqlite3.Row for the given index.", "tags": null, "range": {"lines": [115, 117], "bytes": [3901, 4046]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:VendorBankAccountsTableModel.replace", "kind": "function", "name": "VendorBankAccountsTableModel.replace", "path": "modules/vendor/model.py", "summary": "Method VendorBankAccountsTableModel.replace.", "tags": null, "range": {"lines": [119, 122], "bytes": [4047, 4174]}, "parent": "sym:modules/vendor/model.py:VendorBankAccountsTableModel"}
{"id": "sym:modules/vendor/model.py:_get", "kind": "function", "name": "_get", "path": "modules/vendor/model.py", "summary": "Support both dataclass-like attrs and dict/sqlite3.Row access.", "tags": null, "range": {"lines": [10, 23], "bytes": [291, 746]}, "parent": "mod:modules/vendor/model.py"}
{"id": "mod:modules/vendor/payment_dialog.py", "kind": "module", "name": "modules.vendor.payment_dialog", "path": "modules/vendor/payment_dialog.py", "summary": "Module modules.vendor.payment_dialog.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog", "kind": "class", "name": "_VendorMoneyDialog", "path": "modules/vendor/payment_dialog.py", "summary": "One dialog with three pages:   - Payment (enforces bank/instrument/clearing rules)   - Record Advance   - Apply Advance Produces repo-shaped payloads.  Optional submit callbacks (from defaults):   - submit_payment(payload)   - submit_advance(payload)   - submit_apply(payload)", "tags": null, "range": {"lines": [124, 988], "bytes": [3229, 40185]}, "parent": "mod:modules/vendor/payment_dialog.py"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog.__init__", "kind": "function", "name": "_VendorMoneyDialog.__init__", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog.__init__.", "tags": null, "range": {"lines": [142, 201], "bytes": [3656, 6929]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_ui", "kind": "function", "name": "_VendorMoneyDialog._build_ui", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_ui.", "tags": null, "range": {"lines": [204, 251], "bytes": [6965, 8818]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_payment_page", "kind": "function", "name": "_VendorMoneyDialog._build_payment_page", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_payment_page.", "tags": null, "range": {"lines": [254, 372], "bytes": [8860, 13886]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_advance_page", "kind": "function", "name": "_VendorMoneyDialog._build_advance_page", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_advance_page.", "tags": null, "range": {"lines": [375, 407], "bytes": [13935, 15265]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_apply_page", "kind": "function", "name": "_VendorMoneyDialog._build_apply_page", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_apply_page.", "tags": null, "range": {"lines": [410, 450], "bytes": [15313, 17089]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._on_tab_changed", "kind": "function", "name": "_VendorMoneyDialog._on_tab_changed", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._on_tab_changed.", "tags": null, "range": {"lines": [453, 464], "bytes": [17129, 17617]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._sync_window_title", "kind": "function", "name": "_VendorMoneyDialog._sync_window_title", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._sync_window_title.", "tags": null, "range": {"lines": [466, 472], "bytes": [17618, 17969]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._load_purchases", "kind": "function", "name": "_VendorMoneyDialog._load_purchases", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._load_purchases.", "tags": null, "range": {"lines": [475, 509], "bytes": [18011, 19540]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._load_company_banks", "kind": "function", "name": "_VendorMoneyDialog._load_company_banks", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._load_company_banks.", "tags": null, "range": {"lines": [511, 530], "bytes": [19541, 20358]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._load_vendor_banks", "kind": "function", "name": "_VendorMoneyDialog._load_vendor_banks", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._load_vendor_banks.", "tags": null, "range": {"lines": [532, 556], "bytes": [20359, 21354]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._lock_purchase_if_needed", "kind": "function", "name": "_VendorMoneyDialog._lock_purchase_if_needed", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._lock_purchase_if_needed.", "tags": null, "range": {"lines": [558, 579], "bytes": [21355, 22519]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._apply_prefills_payment", "kind": "function", "name": "_VendorMoneyDialog._apply_prefills_payment", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._apply_prefills_payment.", "tags": null, "range": {"lines": [582, 615], "bytes": [22572, 24131]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._on_method_changed", "kind": "function", "name": "_VendorMoneyDialog._on_method_changed", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._on_method_changed.", "tags": null, "range": {"lines": [618, 653], "bytes": [24183, 25556]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._on_clearing_changed", "kind": "function", "name": "_VendorMoneyDialog._on_clearing_changed", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._on_clearing_changed.", "tags": null, "range": {"lines": [655, 661], "bytes": [25557, 25860]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._update_hint", "kind": "function", "name": "_VendorMoneyDialog._update_hint", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._update_hint.", "tags": null, "range": {"lines": [663, 682], "bytes": [25861, 27141]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._update_remaining", "kind": "function", "name": "_VendorMoneyDialog._update_remaining", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._update_remaining.", "tags": null, "range": {"lines": [684, 692], "bytes": [27142, 27540]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._update_apply_remaining", "kind": "function", "name": "_VendorMoneyDialog._update_apply_remaining", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._update_apply_remaining.", "tags": null, "range": {"lines": [695, 703], "bytes": [27588, 27975]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._remaining_from_data", "kind": "function", "name": "_VendorMoneyDialog._remaining_from_data", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._remaining_from_data.", "tags": null, "range": {"lines": [706, 715], "bytes": [28025, 28378]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._apply_payment_amount_limits", "kind": "function", "name": "_VendorMoneyDialog._apply_payment_amount_limits", "path": "modules/vendor/payment_dialog.py", "summary": "Limit payment amount to remaining due for non-Cash methods; allow refunds (negative) for Cash.", "tags": null, "range": {"lines": [717, 727], "bytes": [28379, 29000]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._apply_apply_amount_limits", "kind": "function", "name": "_VendorMoneyDialog._apply_apply_amount_limits", "path": "modules/vendor/payment_dialog.py", "summary": "Limit apply-advance amount to remaining due.", "tags": null, "range": {"lines": [729, 733], "bytes": [29001, 29280]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_live_payment", "kind": "function", "name": "_VendorMoneyDialog._validate_live_payment", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_live_payment.", "tags": null, "range": {"lines": [736, 741], "bytes": [29330, 29580]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_payment", "kind": "function", "name": "_VendorMoneyDialog._validate_payment", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_payment.", "tags": null, "range": {"lines": [743, 805], "bytes": [29581, 32551]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_live_advance", "kind": "function", "name": "_VendorMoneyDialog._validate_live_advance", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_live_advance.", "tags": null, "range": {"lines": [808, 813], "bytes": [32601, 32851]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_advance", "kind": "function", "name": "_VendorMoneyDialog._validate_advance", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_advance.", "tags": null, "range": {"lines": [815, 819], "bytes": [32852, 33078]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_live_apply", "kind": "function", "name": "_VendorMoneyDialog._validate_live_apply", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_live_apply.", "tags": null, "range": {"lines": [822, 827], "bytes": [33126, 33370]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._validate_apply", "kind": "function", "name": "_VendorMoneyDialog._validate_apply", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._validate_apply.", "tags": null, "range": {"lines": [829, 848], "bytes": [33371, 34210]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._on_save", "kind": "function", "name": "_VendorMoneyDialog._on_save", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._on_save.", "tags": null, "range": {"lines": [851, 886], "bytes": [34244, 35484]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog.payload", "kind": "function", "name": "_VendorMoneyDialog.payload", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog.payload.", "tags": null, "range": {"lines": [888, 889], "bytes": [35485, 35555]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._warn", "kind": "function", "name": "_VendorMoneyDialog._warn", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._warn.", "tags": null, "range": {"lines": [892, 894], "bytes": [35592, 35790]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._handle_submit_error", "kind": "function", "name": "_VendorMoneyDialog._handle_submit_error", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._handle_submit_error.", "tags": null, "range": {"lines": [896, 907], "bytes": [35791, 36579]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._current_company_bank_id", "kind": "function", "name": "_VendorMoneyDialog._current_company_bank_id", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._current_company_bank_id.", "tags": null, "range": {"lines": [909, 911], "bytes": [36580, 36748]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._current_vendor_bank_id", "kind": "function", "name": "_VendorMoneyDialog._current_vendor_bank_id", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._current_vendor_bank_id.", "tags": null, "range": {"lines": [913, 919], "bytes": [36749, 37027]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._set_required_label", "kind": "function", "name": "_VendorMoneyDialog._set_required_label", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._set_required_label.", "tags": null, "range": {"lines": [921, 926], "bytes": [37028, 37303]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._set_date_from_str", "kind": "function", "name": "_VendorMoneyDialog._set_date_from_str", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._set_date_from_str.", "tags": null, "range": {"lines": [928, 933], "bytes": [37304, 37513]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._has_date", "kind": "function", "name": "_VendorMoneyDialog._has_date", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._has_date.", "tags": null, "range": {"lines": [935, 936], "bytes": [37514, 37643]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._clear_date", "kind": "function", "name": "_VendorMoneyDialog._clear_date", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._clear_date.", "tags": null, "range": {"lines": [938, 939], "bytes": [37644, 37738]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_payload_payment", "kind": "function", "name": "_VendorMoneyDialog._build_payload_payment", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_payload_payment.", "tags": null, "range": {"lines": [942, 966], "bytes": [37782, 39154]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_payload_advance", "kind": "function", "name": "_VendorMoneyDialog._build_payload_advance", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_payload_advance.", "tags": null, "range": {"lines": [968, 976], "bytes": [39155, 39606]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog._build_payload_apply", "kind": "function", "name": "_VendorMoneyDialog._build_payload_apply", "path": "modules/vendor/payment_dialog.py", "summary": "Method _VendorMoneyDialog._build_payload_apply.", "tags": null, "range": {"lines": [978, 988], "bytes": [39607, 40185]}, "parent": "sym:modules/vendor/payment_dialog.py:_VendorMoneyDialog"}
{"id": "sym:modules/vendor/payment_dialog.py:_t", "kind": "function", "name": "_t", "path": "modules/vendor/payment_dialog.py", "summary": "Function _t.", "tags": null, "range": {"lines": [36, 37], "bytes": [793, 829]}, "parent": "mod:modules/vendor/payment_dialog.py"}
{"id": "sym:modules/vendor/payment_dialog.py:open_vendor_money_form", "kind": "function", "name": "open_vendor_money_form", "path": "modules/vendor/payment_dialog.py", "summary": "Unified money-out dialog for vendors with three modes:   - \"payment\": capture vendor payment/refund → payload for PurchasePaymentsRepo.record_payment(...)   - \"advance\": record vendor advance (prepayment) → payload for VendorAdvancesRepo.grant_credit(...)   - \"apply_advance\": apply advance to a purchase → payload for …", "tags": null, "range": {"lines": [87, 118], "bytes": [1807, 3139]}, "parent": "mod:modules/vendor/payment_dialog.py"}
{"id": "sym:modules/vendor/payment_dialog.py:date_or_none", "kind": "function", "name": "date_or_none", "path": "modules/vendor/payment_dialog.py", "summary": "Function date_or_none.", "tags": null, "range": {"lines": [945, 948], "bytes": [37885, 38060]}, "parent": "mod:modules/vendor/payment_dialog.py"}
{"id": "pkg:_VendorMoneyDialog", "kind": "pkg", "name": "_VendorMoneyDialog", "path": null, "summary": "External package '_VendorMoneyDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_purchase", "kind": "pkg", "name": "lbl_purchase", "path": null, "summary": "External package 'lbl_purchase' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_cbank", "kind": "pkg", "name": "lbl_cbank", "path": null, "summary": "External package 'lbl_cbank' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_vbank", "kind": "pkg", "name": "lbl_vbank", "path": null, "summary": "External package 'lbl_vbank' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_purchase2", "kind": "pkg", "name": "lbl_purchase2", "path": null, "summary": "External package 'lbl_purchase2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:cb", "kind": "pkg", "name": "cb", "path": null, "summary": "External package 'cb' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:message", "kind": "pkg", "name": "message", "path": null, "summary": "External package 'message' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:pdata", "kind": "pkg", "name": "pdata", "path": null, "summary": "External package 'pdata' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/payment_history_view.py", "kind": "module", "name": "modules.vendor.payment_history_view", "path": "modules/vendor/payment_history_view.py", "summary": "Module modules.vendor.payment_history_view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel", "kind": "class", "name": "_DictTableModel", "path": "modules/vendor/payment_history_view.py", "summary": "Simple model that takes a list[dict] and displays it as a table. Column order is determined by `columns` passed in; any missing values show as \"\".", "tags": null, "range": {"lines": [32, 80], "bytes": [678, 2457]}, "parent": "mod:modules/vendor/payment_history_view.py"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.__init__", "kind": "function", "name": "_DictTableModel.__init__", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.__init__.", "tags": null, "range": {"lines": [38, 41], "bytes": [894, 1088]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.rowCount", "kind": "function", "name": "_DictTableModel.rowCount", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.rowCount.", "tags": null, "range": {"lines": [44, 45], "bytes": [1108, 1260]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.columnCount", "kind": "function", "name": "_DictTableModel.columnCount", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.columnCount.", "tags": null, "range": {"lines": [47, 48], "bytes": [1261, 1416]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.headerData", "kind": "function", "name": "_DictTableModel.headerData", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.headerData.", "tags": null, "range": {"lines": [50, 55], "bytes": [1417, 1711]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.data", "kind": "function", "name": "_DictTableModel.data", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.data.", "tags": null, "range": {"lines": [57, 70], "bytes": [1712, 2235]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.at", "kind": "function", "name": "_DictTableModel.at", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.at.", "tags": null, "range": {"lines": [73, 74], "bytes": [2250, 2323]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.rows", "kind": "function", "name": "_DictTableModel.rows", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.rows.", "tags": null, "range": {"lines": [76, 77], "bytes": [2324, 2394]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_DictTableModel.columns", "kind": "function", "name": "_DictTableModel.columns", "path": "modules/vendor/payment_history_view.py", "summary": "Method _DictTableModel.columns.", "tags": null, "range": {"lines": [79, 80], "bytes": [2395, 2457]}, "parent": "sym:modules/vendor/payment_history_view.py:_DictTableModel"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog", "kind": "class", "name": "_VendorHistoryDialog", "path": "modules/vendor/payment_history_view.py", "summary": "Thin, read-only viewer for vendor payments/advances/statement rows.  Expected `history` shape (flexible):   - Preferred (statement-style, as produced by controller.build_vendor_statement):     {       \"vendor_id\": int,       \"period\": {\"from\": \"YYYY-MM-DD\"|None, \"to\": \"YYYY-MM-DD\"|None},       \"opening_credit\": float,…", "tags": null, "range": {"lines": [86, 308], "bytes": [2532, 11237]}, "parent": "mod:modules/vendor/payment_history_view.py"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog.__init__", "kind": "function", "name": "_VendorHistoryDialog.__init__", "path": "modules/vendor/payment_history_view.py", "summary": "Method _VendorHistoryDialog.__init__.", "tags": null, "range": {"lines": [116, 202], "bytes": [3591, 7028]}, "parent": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog._build_tx_rows", "kind": "function", "name": "_VendorHistoryDialog._build_tx_rows", "path": "modules/vendor/payment_history_view.py", "summary": "Method _VendorHistoryDialog._build_tx_rows.", "tags": null, "range": {"lines": [207, 266], "bytes": [7133, 9825]}, "parent": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog._choose_tx_columns", "kind": "function", "name": "_VendorHistoryDialog._choose_tx_columns", "path": "modules/vendor/payment_history_view.py", "summary": "Method _VendorHistoryDialog._choose_tx_columns.", "tags": null, "range": {"lines": [268, 290], "bytes": [9826, 10645]}, "parent": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog._flatten_reference", "kind": "function", "name": "_VendorHistoryDialog._flatten_reference", "path": "modules/vendor/payment_history_view.py", "summary": "Flatten nested `reference` dict into top-level displayable keys.", "tags": null, "range": {"lines": [292, 299], "bytes": [10646, 10972]}, "parent": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog"}
{"id": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog._safe_float", "kind": "function", "name": "_VendorHistoryDialog._safe_float", "path": "modules/vendor/payment_history_view.py", "summary": "Method _VendorHistoryDialog._safe_float.", "tags": null, "range": {"lines": [302, 308], "bytes": [10991, 11237]}, "parent": "sym:modules/vendor/payment_history_view.py:_VendorHistoryDialog"}
{"id": "sym:modules/vendor/payment_history_view.py:_t", "kind": "function", "name": "_t", "path": "modules/vendor/payment_history_view.py", "summary": "i18n shim.", "tags": null, "range": {"lines": [24, 26], "bytes": [521, 578]}, "parent": "mod:modules/vendor/payment_history_view.py"}
{"id": "sym:modules/vendor/payment_history_view.py:open_vendor_history", "kind": "function", "name": "open_vendor_history", "path": "modules/vendor/payment_history_view.py", "summary": "Open the vendor history window.  Usage:     payload = controller.build_vendor_statement(vendor_id, date_from, date_to)     open_vendor_history(vendor_id=vid, history=payload)", "tags": null, "range": {"lines": [314, 331], "bytes": [11316, 11836]}, "parent": "mod:modules/vendor/payment_history_view.py"}
{"id": "pkg:hbox", "kind": "pkg", "name": "hbox", "path": null, "summary": "External package 'hbox' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:period", "kind": "pkg", "name": "period", "path": null, "summary": "External package 'period' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_DictTableModel", "kind": "pkg", "name": "_DictTableModel", "path": null, "summary": "External package '_DictTableModel' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tx_table", "kind": "pkg", "name": "tx_table", "path": null, "summary": "External package 'tx_table' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tx_layout", "kind": "pkg", "name": "tx_layout", "path": null, "summary": "External package 'tx_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:tabs", "kind": "pkg", "name": "tabs", "path": null, "summary": "External package 'tabs' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:totals_table", "kind": "pkg", "name": "totals_table", "path": null, "summary": "External package 'totals_table' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:t_layout", "kind": "pkg", "name": "t_layout", "path": null, "summary": "External package 't_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:close_btn", "kind": "pkg", "name": "close_btn", "path": null, "summary": "External package 'close_btn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ref", "kind": "pkg", "name": "ref", "path": null, "summary": "External package 'ref' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_VendorHistoryDialog", "kind": "pkg", "name": "_VendorHistoryDialog", "path": null, "summary": "External package '_VendorHistoryDialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:modules/vendor/view.py", "kind": "module", "name": "modules.vendor.view", "path": "modules/vendor/view.py", "summary": "Module modules.vendor.view.", "tags": null, "range": null, "parent": null}
{"id": "sym:modules/vendor/view.py:VendorView", "kind": "class", "name": "VendorView", "path": "modules/vendor/view.py", "summary": "Class VendorView.", "tags": null, "range": {"lines": [9, 85], "bytes": [234, 2885]}, "parent": "mod:modules/vendor/view.py"}
{"id": "sym:modules/vendor/view.py:VendorView.__init__", "kind": "function", "name": "VendorView.__init__", "path": "modules/vendor/view.py", "summary": "Method VendorView.__init__.", "tags": null, "range": {"lines": [10, 85], "bytes": [261, 2885]}, "parent": "sym:modules/vendor/view.py:VendorView"}
{"id": "pkg:VendorDetails", "kind": "pkg", "name": "VendorDetails", "path": null, "summary": "External package 'VendorDetails' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:right", "kind": "pkg", "name": "right", "path": null, "summary": "External package 'right' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:lbl_accounts", "kind": "pkg", "name": "lbl_accounts", "path": null, "summary": "External package 'lbl_accounts' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:accounts_header", "kind": "pkg", "name": "accounts_header", "path": null, "summary": "External package 'accounts_header' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:accounts_layout", "kind": "pkg", "name": "accounts_layout", "path": null, "summary": "External package 'accounts_layout' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/__init__.py", "kind": "module", "name": "tests", "path": "tests/__init__.py", "summary": "Module tests.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/company.py", "kind": "module", "name": "tests.company", "path": "tests/company.py", "summary": "Module tests.company.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/conftest.py", "kind": "module", "name": "tests.conftest", "path": "tests/conftest.py", "summary": "Module tests.conftest.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/conftest.py:app", "kind": "function", "name": "app", "path": "tests/conftest.py", "summary": "Function app.", "tags": null, "range": {"lines": [34, 35], "bytes": [1159, 1243]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:_qt_offscreen_env", "kind": "function", "name": "_qt_offscreen_env", "path": "tests/conftest.py", "summary": "Ensure all tests run with an offscreen Qt platform plugin to avoid modal UI hangs and display dependency on CI.", "tags": null, "range": {"lines": [40, 48], "bytes": [1357, 1766]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:_silence_benign_qt", "kind": "function", "name": "_silence_benign_qt", "path": "tests/conftest.py", "summary": "Filter common harmless Qt messages during tests.", "tags": null, "range": {"lines": [59, 80], "bytes": [2063, 2776]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:handler", "kind": "function", "name": "handler", "path": "tests/conftest.py", "summary": "Function handler.", "tags": null, "range": {"lines": [64, 74], "bytes": [2254, 2648]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:_no_modal_dialogs", "kind": "function", "name": "_no_modal_dialogs", "path": "tests/conftest.py", "summary": "Prevent any QMessageBox.* call from opening a blocking modal dialog. Returns sensible defaults so code under test can proceed.", "tags": null, "range": {"lines": [85, 100], "bytes": [2881, 3545]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:_close_top_levels", "kind": "function", "name": "_close_top_levels", "path": "tests/conftest.py", "summary": "Ensure no straggler windows remain open, which can interfere with subsequent tests or hang the session teardown.", "tags": null, "range": {"lines": [105, 119], "bytes": [3655, 4070]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:_apply_common_seed", "kind": "function", "name": "_apply_common_seed", "path": "tests/conftest.py", "summary": "Run the idempotent seed once per test session against the shared DB. Assumes schema already exists in data/myshop.db.", "tags": null, "range": {"lines": [124, 143], "bytes": [4175, 4812]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:conn", "kind": "function", "name": "conn", "path": "tests/conftest.py", "summary": "Connect to the shared DB, start a transaction, and rollback after each test. Keeps tests isolated while reusing stable IDs/names.", "tags": null, "range": {"lines": [148, 161], "bytes": [4902, 5321]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:ids", "kind": "function", "name": "ids", "path": "tests/conftest.py", "summary": "Common IDs/names used throughout the UI tests.", "tags": null, "range": {"lines": [166, 190], "bytes": [5379, 6741]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:one", "kind": "function", "name": "one", "path": "tests/conftest.py", "summary": "Function one.", "tags": null, "range": {"lines": [168, 170], "bytes": [5479, 5645]}, "parent": "mod:tests/conftest.py"}
{"id": "sym:tests/conftest.py:current_user", "kind": "function", "name": "current_user", "path": "tests/conftest.py", "summary": "Function current_user.", "tags": null, "range": {"lines": [195, 198], "bytes": [6820, 6996]}, "parent": "mod:tests/conftest.py"}
{"id": "pkg:pytest", "kind": "pkg", "name": "pytest", "path": null, "summary": "External package 'pytest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QtCore", "kind": "pkg", "name": "QtCore", "path": null, "summary": "External package 'QtCore' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:monkeypatch", "kind": "pkg", "name": "monkeypatch", "path": null, "summary": "External package 'monkeypatch' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:FileNotFoundError", "kind": "pkg", "name": "FileNotFoundError", "path": null, "summary": "External package 'FileNotFoundError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SEED_SQL", "kind": "pkg", "name": "SEED_SQL", "path": null, "summary": "External package 'SEED_SQL' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ids", "kind": "pkg", "name": "ids", "path": null, "summary": "External package 'ids' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/customer.py", "kind": "module", "name": "tests.customer", "path": "tests/customer.py", "summary": "Tests for the customer module.  This suite exercises the table model, form validation, action helpers, controller flows, history service and repository logic for customers. The goal is to mirror the level of coverage provided for purchases and vendors.  Where possible the tests operate against in-memory or temporary S…", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/customer.py:_StubRepo", "kind": "class", "name": "_StubRepo", "path": "tests/customer.py", "summary": "Simple stub for SalePaymentsRepo used by receive_payment.", "tags": null, "range": {"lines": [251, 259], "bytes": [9616, 9906]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:_StubRepo.__init__", "kind": "function", "name": "_StubRepo.__init__", "path": "tests/customer.py", "summary": "Method _StubRepo.__init__.", "tags": null, "range": {"lines": [253, 254], "bytes": [9701, 9771]}, "parent": "sym:tests/customer.py:_StubRepo"}
{"id": "sym:tests/customer.py:_StubRepo.record_payment", "kind": "function", "name": "_StubRepo.record_payment", "path": "tests/customer.py", "summary": "Method _StubRepo.record_payment.", "tags": null, "range": {"lines": [256, 259], "bytes": [9772, 9906]}, "parent": "sym:tests/customer.py:_StubRepo"}
{"id": "sym:tests/customer.py:_StubAdvancesRepo", "kind": "class", "name": "_StubAdvancesRepo", "path": "tests/customer.py", "summary": "Stub for CustomerAdvancesRepo used in record/apply advance tests.", "tags": null, "range": {"lines": [327, 356], "bytes": [11926, 13122]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:_StubAdvancesRepo.__init__", "kind": "function", "name": "_StubAdvancesRepo.__init__", "path": "tests/customer.py", "summary": "Method _StubAdvancesRepo.__init__.", "tags": null, "range": {"lines": [329, 331], "bytes": [12027, 12147]}, "parent": "sym:tests/customer.py:_StubAdvancesRepo"}
{"id": "sym:tests/customer.py:_StubAdvancesRepo.grant_credit", "kind": "function", "name": "_StubAdvancesRepo.grant_credit", "path": "tests/customer.py", "summary": "Method _StubAdvancesRepo.grant_credit.", "tags": null, "range": {"lines": [333, 343], "bytes": [12148, 12599]}, "parent": "sym:tests/customer.py:_StubAdvancesRepo"}
{"id": "sym:tests/customer.py:_StubAdvancesRepo.apply_credit_to_sale", "kind": "function", "name": "_StubAdvancesRepo.apply_credit_to_sale", "path": "tests/customer.py", "summary": "Method _StubAdvancesRepo.apply_credit_to_sale.", "tags": null, "range": {"lines": [345, 356], "bytes": [12600, 13122]}, "parent": "sym:tests/customer.py:_StubAdvancesRepo"}
{"id": "sym:tests/customer.py:StubHistory", "kind": "class", "name": "StubHistory", "path": "tests/customer.py", "summary": "Class StubHistory.", "tags": null, "range": {"lines": [403, 407], "bytes": [14742, 14932]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:StubHistory.__init__", "kind": "function", "name": "StubHistory.__init__", "path": "tests/customer.py", "summary": "Method StubHistory.__init__.", "tags": null, "range": {"lines": [404, 405], "bytes": [14765, 14824]}, "parent": "sym:tests/customer.py:StubHistory"}
{"id": "sym:tests/customer.py:StubHistory.full_history", "kind": "function", "name": "StubHistory.full_history", "path": "tests/customer.py", "summary": "Method StubHistory.full_history.", "tags": null, "range": {"lines": [406, 407], "bytes": [14824, 14932]}, "parent": "sym:tests/customer.py:StubHistory"}
{"id": "sym:tests/customer.py:DummyController", "kind": "class", "name": "DummyController", "path": "tests/customer.py", "summary": "A lightweight stand-in for CustomerController for unit testing.", "tags": null, "range": {"lines": [438, 480], "bytes": [16326, 18045]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:DummyController.__init__", "kind": "function", "name": "DummyController.__init__", "path": "tests/customer.py", "summary": "Method DummyController.__init__.", "tags": null, "range": {"lines": [440, 446], "bytes": [16423, 16711]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._selected_id", "kind": "function", "name": "DummyController._selected_id", "path": "tests/customer.py", "summary": "Method DummyController._selected_id.", "tags": null, "range": {"lines": [457, 458], "bytes": [17127, 17251]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._fetch_is_active", "kind": "function", "name": "DummyController._fetch_is_active", "path": "tests/customer.py", "summary": "Method DummyController._fetch_is_active.", "tags": null, "range": {"lines": [460, 461], "bytes": [17252, 17318]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._ensure_db_path_or_toast", "kind": "function", "name": "DummyController._ensure_db_path_or_toast", "path": "tests/customer.py", "summary": "Method DummyController._ensure_db_path_or_toast.", "tags": null, "range": {"lines": [463, 464], "bytes": [17319, 17431]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._db_path_from_conn", "kind": "function", "name": "DummyController._db_path_from_conn", "path": "tests/customer.py", "summary": "Method DummyController._db_path_from_conn.", "tags": null, "range": {"lines": [466, 467], "bytes": [17432, 17538]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._lazy_attr", "kind": "function", "name": "DummyController._lazy_attr", "path": "tests/customer.py", "summary": "Method DummyController._lazy_attr.", "tags": null, "range": {"lines": [469, 470], "bytes": [17539, 17655]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._sale_belongs_to_customer_and_is_sale", "kind": "function", "name": "DummyController._sale_belongs_to_customer_and_is_sale", "path": "tests/customer.py", "summary": "Method DummyController._sale_belongs_to_customer_and_is_sale.", "tags": null, "range": {"lines": [472, 473], "bytes": [17656, 17799]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._reload", "kind": "function", "name": "DummyController._reload", "path": "tests/customer.py", "summary": "Method DummyController._reload.", "tags": null, "range": {"lines": [475, 476], "bytes": [17800, 17857]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:DummyController._capture_info", "kind": "function", "name": "DummyController._capture_info", "path": "tests/customer.py", "summary": "Method DummyController._capture_info.", "tags": null, "range": {"lines": [479, 480], "bytes": [17928, 18045]}, "parent": "sym:tests/customer.py:DummyController"}
{"id": "sym:tests/customer.py:FakeConn", "kind": "class", "name": "FakeConn", "path": "tests/customer.py", "summary": "Class FakeConn.", "tags": null, "range": {"lines": [518, 527], "bytes": [19644, 20184]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:FakeConn.execute", "kind": "function", "name": "FakeConn.execute", "path": "tests/customer.py", "summary": "Method FakeConn.execute.", "tags": null, "range": {"lines": [519, 527], "bytes": [19664, 20184]}, "parent": "sym:tests/customer.py:FakeConn"}
{"id": "sym:tests/customer.py:Cursor", "kind": "class", "name": "Cursor", "path": "tests/customer.py", "summary": "Class Cursor.", "tags": null, "range": {"lines": [520, 526], "bytes": [19716, 20156]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:Cursor.fetchall", "kind": "function", "name": "Cursor.fetchall", "path": "tests/customer.py", "summary": "Method Cursor.fetchall.", "tags": null, "range": {"lines": [521, 526], "bytes": [19742, 20156]}, "parent": "sym:tests/customer.py:Cursor"}
{"id": "sym:tests/customer.py:StubRepo", "kind": "class", "name": "StubRepo", "path": "tests/customer.py", "summary": "Class StubRepo.", "tags": null, "range": {"lines": [553, 558], "bytes": [21276, 21464]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:StubRepo.__init__", "kind": "function", "name": "StubRepo.__init__", "path": "tests/customer.py", "summary": "Method StubRepo.__init__.", "tags": null, "range": {"lines": [554, 555], "bytes": [21296, 21355]}, "parent": "sym:tests/customer.py:StubRepo"}
{"id": "sym:tests/customer.py:StubRepo.record_payment", "kind": "function", "name": "StubRepo.record_payment", "path": "tests/customer.py", "summary": "Method StubRepo.record_payment.", "tags": null, "range": {"lines": [556, 558], "bytes": [21355, 21464]}, "parent": "sym:tests/customer.py:StubRepo"}
{"id": "sym:tests/customer.py:StubAdvRepoFactory", "kind": "class", "name": "StubAdvRepoFactory", "path": "tests/customer.py", "summary": "Class StubAdvRepoFactory.", "tags": null, "range": {"lines": [649, 653], "bytes": [25556, 25754]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:StubAdvRepoFactory.__init__", "kind": "function", "name": "StubAdvRepoFactory.__init__", "path": "tests/customer.py", "summary": "Method StubAdvRepoFactory.__init__.", "tags": null, "range": {"lines": [650, 651], "bytes": [25586, 25645]}, "parent": "sym:tests/customer.py:StubAdvRepoFactory"}
{"id": "sym:tests/customer.py:StubAdvRepoFactory.grant_credit", "kind": "function", "name": "StubAdvRepoFactory.grant_credit", "path": "tests/customer.py", "summary": "Method StubAdvRepoFactory.grant_credit.", "tags": null, "range": {"lines": [609, 610], "bytes": [23691, 23784]}, "parent": "sym:tests/customer.py:StubAdvRepoFactory"}
{"id": "sym:tests/customer.py:StubErrRepoFactory", "kind": "class", "name": "StubErrRepoFactory", "path": "tests/customer.py", "summary": "Class StubErrRepoFactory.", "tags": null, "range": {"lines": [621, 625], "bytes": [24201, 24376]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:StubErrRepoFactory.__init__", "kind": "function", "name": "StubErrRepoFactory.__init__", "path": "tests/customer.py", "summary": "Method StubErrRepoFactory.__init__.", "tags": null, "range": {"lines": [622, 623], "bytes": [24231, 24290]}, "parent": "sym:tests/customer.py:StubErrRepoFactory"}
{"id": "sym:tests/customer.py:StubErrRepoFactory.grant_credit", "kind": "function", "name": "StubErrRepoFactory.grant_credit", "path": "tests/customer.py", "summary": "Method StubErrRepoFactory.grant_credit.", "tags": null, "range": {"lines": [624, 625], "bytes": [24290, 24376]}, "parent": "sym:tests/customer.py:StubErrRepoFactory"}
{"id": "sym:tests/customer.py:StubAdvRepoFactory.apply_credit_to_sale", "kind": "function", "name": "StubAdvRepoFactory.apply_credit_to_sale", "path": "tests/customer.py", "summary": "Method StubAdvRepoFactory.apply_credit_to_sale.", "tags": null, "range": {"lines": [652, 653], "bytes": [25645, 25754]}, "parent": "sym:tests/customer.py:StubAdvRepoFactory"}
{"id": "sym:tests/customer.py:StubHistSvc", "kind": "class", "name": "StubHistSvc", "path": "tests/customer.py", "summary": "Class StubHistSvc.", "tags": null, "range": {"lines": [691, 695], "bytes": [27286, 27445]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:StubHistSvc.__init__", "kind": "function", "name": "StubHistSvc.__init__", "path": "tests/customer.py", "summary": "Method StubHistSvc.__init__.", "tags": null, "range": {"lines": [692, 693], "bytes": [27309, 27368]}, "parent": "sym:tests/customer.py:StubHistSvc"}
{"id": "sym:tests/customer.py:StubHistSvc.full_history", "kind": "function", "name": "StubHistSvc.full_history", "path": "tests/customer.py", "summary": "Method StubHistSvc.full_history.", "tags": null, "range": {"lines": [694, 695], "bytes": [27368, 27445]}, "parent": "sym:tests/customer.py:StubHistSvc"}
{"id": "sym:tests/customer.py:test_a0_customers_table_model_basics", "kind": "function", "name": "test_a0_customers_table_model_basics", "path": "tests/customer.py", "summary": "A0: CustomersTableModel should expose rows/columns and active flags.", "tags": null, "range": {"lines": [44, 78], "bytes": [1513, 3126]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a1_customer_form_required_and_normalization", "kind": "function", "name": "test_a1_customer_form_required_and_normalization", "path": "tests/customer.py", "summary": "A1: CustomerForm should validate required fields and normalize inputs.", "tags": null, "range": {"lines": [81, 114], "bytes": [3128, 4602]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a2_customer_form_duplicate_name_warning", "kind": "function", "name": "test_a2_customer_form_duplicate_name_warning", "path": "tests/customer.py", "summary": "A2: The form should warn on duplicate names but still return the payload.", "tags": null, "range": {"lines": [117, 141], "bytes": [4604, 5536]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:fake_warning", "kind": "function", "name": "fake_warning", "path": "tests/customer.py", "summary": "Function fake_warning.", "tags": null, "range": {"lines": [209, 211], "bytes": [8090, 8193]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:dup_check", "kind": "function", "name": "dup_check", "path": "tests/customer.py", "summary": "Function dup_check.", "tags": null, "range": {"lines": [131, 132], "bytes": [5149, 5224]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a3_customer_form_initial_values", "kind": "function", "name": "test_a3_customer_form_initial_values", "path": "tests/customer.py", "summary": "A3: Initial values populate the form and payload returns normalized fields.", "tags": null, "range": {"lines": [146, 166], "bytes": [5621, 6550]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a4_customer_form_active_toggle", "kind": "function", "name": "test_a4_customer_form_active_toggle", "path": "tests/customer.py", "summary": "A4: The Active checkbox’s default state and its effect on the payload.", "tags": null, "range": {"lines": [169, 180], "bytes": [6552, 7119]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a5_customer_form_dup_check_no_warning", "kind": "function", "name": "test_a5_customer_form_dup_check_no_warning", "path": "tests/customer.py", "summary": "A5: When dup_check returns False, no warning should be shown and payload should be returned.", "tags": null, "range": {"lines": [183, 202], "bytes": [7121, 7856]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:no_dup", "kind": "function", "name": "no_dup", "path": "tests/customer.py", "summary": "Function no_dup.", "tags": null, "range": {"lines": [194, 195], "bytes": [7565, 7638]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a6_customer_form_dup_check_exception", "kind": "function", "name": "test_a6_customer_form_dup_check_exception", "path": "tests/customer.py", "summary": "A6: If dup_check raises an exception, get_payload should still return a payload and show no warning.", "tags": null, "range": {"lines": [205, 224], "bytes": [7858, 8656]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:bad_dup", "kind": "function", "name": "bad_dup", "path": "tests/customer.py", "summary": "Function bad_dup.", "tags": null, "range": {"lines": [216, 217], "bytes": [8293, 8393]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_a7_customer_form_accept_stores_payload", "kind": "function", "name": "test_a7_customer_form_accept_stores_payload", "path": "tests/customer.py", "summary": "A7: accept() stores the payload on valid input and leaves it None on invalid input.", "tags": null, "range": {"lines": [227, 244], "bytes": [8658, 9426]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b1_receive_payment_happy", "kind": "function", "name": "test_b1_receive_payment_happy", "path": "tests/customer.py", "summary": "B1: receive_payment should succeed when defaults are valid and with_ui=False.", "tags": null, "range": {"lines": [262, 281], "bytes": [9908, 10542]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:repo_factory", "kind": "function", "name": "repo_factory", "path": "tests/customer.py", "summary": "Function repo_factory.", "tags": null, "range": {"lines": [376, 377], "bytes": [13859, 13922]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b2_receive_payment_missing", "kind": "function", "name": "test_b2_receive_payment_missing", "path": "tests/customer.py", "summary": "B2: receive_payment should detect missing amount/method keys.", "tags": null, "range": {"lines": [288, 303], "bytes": [10670, 11213]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b3_receive_payment_ui_unavailable", "kind": "function", "name": "test_b3_receive_payment_ui_unavailable", "path": "tests/customer.py", "summary": "B3: with with_ui=True and missing UI module, receive_payment returns failure with message.", "tags": null, "range": {"lines": [306, 324], "bytes": [11215, 11924]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b4_record_advance", "kind": "function", "name": "test_b4_record_advance", "path": "tests/customer.py", "summary": "B4: record_advance should call grant_credit on repo and return success.", "tags": null, "range": {"lines": [359, 370], "bytes": [13124, 13705]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b5_apply_advance", "kind": "function", "name": "test_b5_apply_advance", "path": "tests/customer.py", "summary": "B5: apply_advance stores negative amounts and validates input.", "tags": null, "range": {"lines": [373, 396], "bytes": [13707, 14459]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_b6_open_payment_history", "kind": "function", "name": "test_b6_open_payment_history", "path": "tests/customer.py", "summary": "B6: open_payment_history returns payload when with_ui=False and falls back when UI missing.", "tags": null, "range": {"lines": [399, 424], "bytes": [14461, 15825]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c1_preflight", "kind": "function", "name": "test_c1_preflight", "path": "tests/customer.py", "summary": "C1: _preflight should enforce selection, active status and file DB presence.", "tags": null, "range": {"lines": [483, 512], "bytes": [18047, 19452]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:fake_information", "kind": "function", "name": "fake_information", "path": "tests/customer.py", "summary": "Function fake_information.", "tags": null, "range": {"lines": [685, 687], "bytes": [27005, 27145]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c2_eligible_sales_for_application", "kind": "function", "name": "test_c2_eligible_sales_for_application", "path": "tests/customer.py", "summary": "C2: _eligible_sales_for_application returns only rows with remaining_due>0.", "tags": null, "range": {"lines": [515, 540], "bytes": [19454, 20697]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c3_on_receive_payment", "kind": "function", "name": "test_c3_on_receive_payment", "path": "tests/customer.py", "summary": "C3: _on_receive_payment validates sale ownership and records payment.", "tags": null, "range": {"lines": [543, 591], "bytes": [20699, 22992]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_open_receipt_form", "kind": "function", "name": "stub_open_receipt_form", "path": "tests/customer.py", "summary": "Function stub_open_receipt_form.", "tags": null, "range": {"lines": [550, 552], "bytes": [21099, 21276]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_open_receipt_form2", "kind": "function", "name": "stub_open_receipt_form2", "path": "tests/customer.py", "summary": "Function stub_open_receipt_form2.", "tags": null, "range": {"lines": [584, 585], "bytes": [22570, 22663]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c4_on_record_advance", "kind": "function", "name": "test_c4_on_record_advance", "path": "tests/customer.py", "summary": "C4: _on_record_advance should call grant_credit and handle errors.", "tags": null, "range": {"lines": [594, 630], "bytes": [22994, 24685]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_open_form", "kind": "function", "name": "stub_open_form", "path": "tests/customer.py", "summary": "Function stub_open_form.", "tags": null, "range": {"lines": [604, 605], "bytes": [23471, 23586]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c5_on_apply_advance", "kind": "function", "name": "test_c5_on_apply_advance", "path": "tests/customer.py", "summary": "C5: _on_apply_advance applies credit when valid and blocks invalid cases.", "tags": null, "range": {"lines": [633, 678], "bytes": [24687, 26800]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_apply_form", "kind": "function", "name": "stub_apply_form", "path": "tests/customer.py", "summary": "Function stub_apply_form.", "tags": null, "range": {"lines": [647, 648], "bytes": [25414, 25556]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_apply_form2", "kind": "function", "name": "stub_apply_form2", "path": "tests/customer.py", "summary": "Function stub_apply_form2.", "tags": null, "range": {"lines": [672, 673], "bytes": [26452, 26529]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_c6_on_payment_history", "kind": "function", "name": "test_c6_on_payment_history", "path": "tests/customer.py", "summary": "C6: _on_payment_history opens history UI or falls back.", "tags": null, "range": {"lines": [681, 712], "bytes": [26802, 28138]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:stub_open_history", "kind": "function", "name": "stub_open_history", "path": "tests/customer.py", "summary": "Function stub_open_history.", "tags": null, "range": {"lines": [696, 697], "bytes": [27445, 27520]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:_build_history_db", "kind": "function", "name": "_build_history_db", "path": "tests/customer.py", "summary": "Create a temporary SQLite database with minimal schema and seed data for history tests.", "tags": null, "range": {"lines": [719, 844], "bytes": [28336, 33098]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_d1_sales_with_items_clamps_negative", "kind": "function", "name": "test_d1_sales_with_items_clamps_negative", "path": "tests/customer.py", "summary": "D1: sales_with_items should calculate remaining_due and clamp negatives to 0.", "tags": null, "range": {"lines": [847, 858], "bytes": [33100, 33736]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_d2_payments_and_advances_ledger", "kind": "function", "name": "test_d2_payments_and_advances_ledger", "path": "tests/customer.py", "summary": "D2: sale_payments and advances_ledger return chronological entries and balances.", "tags": null, "range": {"lines": [861, 873], "bytes": [33738, 34370]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_d3_timeline_sorting", "kind": "function", "name": "test_d3_timeline_sorting", "path": "tests/customer.py", "summary": "D3: timeline merges sale/payment/advances chronologically with priority rules.", "tags": null, "range": {"lines": [876, 886], "bytes": [34372, 35040]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_d4_overview_and_full_history", "kind": "function", "name": "test_d4_overview_and_full_history", "path": "tests/customer.py", "summary": "D4: overview computes summary fields and full_history aggregates all parts.", "tags": null, "range": {"lines": [889, 902], "bytes": [35042, 35764]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:_create_customers_repo_db", "kind": "function", "name": "_create_customers_repo_db", "path": "tests/customer.py", "summary": "Create an in-memory DB with customers table for repo tests.", "tags": null, "range": {"lines": [909, 922], "bytes": [35954, 36446]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_e1_customers_repo_crud_and_search", "kind": "function", "name": "test_e1_customers_repo_crud_and_search", "path": "tests/customer.py", "summary": "E1: CustomersRepo should validate, normalize, search and delete.", "tags": null, "range": {"lines": [925, 953], "bytes": [36448, 37935]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:_create_adv_repo_db", "kind": "function", "name": "_create_adv_repo_db", "path": "tests/customer.py", "summary": "Create a temporary SQLite file with tables for customer advances tests.", "tags": null, "range": {"lines": [960, 1003], "bytes": [38135, 39657]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_f1_customer_advances_repo_validation_and_apply", "kind": "function", "name": "test_f1_customer_advances_repo_validation_and_apply", "path": "tests/customer.py", "summary": "F1: CustomerAdvancesRepo should validate amounts and sale constraints.", "tags": null, "range": {"lines": [1006, 1042], "bytes": [39659, 41999]}, "parent": "mod:tests/customer.py"}
{"id": "sym:tests/customer.py:test_f2_customer_advances_balance_and_ledger", "kind": "function", "name": "test_f2_customer_advances_balance_and_ledger", "path": "tests/customer.py", "summary": "F2: get_balance and list_ledger reflect deposits and applications in order.", "tags": null, "range": {"lines": [1045, 1058], "bytes": [42001, 42818]}, "parent": "mod:tests/customer.py"}
{"id": "pkg:warnings", "kind": "pkg", "name": "warnings", "path": null, "summary": "External package 'warnings' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:form2", "kind": "pkg", "name": "form2", "path": null, "summary": "External package 'form2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_StubRepo", "kind": "pkg", "name": "_StubRepo", "path": null, "summary": "External package '_StubRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_StubAdvancesRepo", "kind": "pkg", "name": "_StubAdvancesRepo", "path": null, "summary": "External package '_StubAdvancesRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:StubHistory", "kind": "pkg", "name": "StubHistory", "path": null, "summary": "External package 'StubHistory' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:object", "kind": "pkg", "name": "object", "path": null, "summary": "External package 'object' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:DummyController", "kind": "pkg", "name": "DummyController", "path": null, "summary": "External package 'DummyController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dc", "kind": "pkg", "name": "dc", "path": null, "summary": "External package 'dc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:Cursor", "kind": "pkg", "name": "Cursor", "path": null, "summary": "External package 'Cursor' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:FakeConn", "kind": "pkg", "name": "FakeConn", "path": null, "summary": "External package 'FakeConn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:captured_payment", "kind": "pkg", "name": "captured_payment", "path": null, "summary": "External package 'captured_payment' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:called_history", "kind": "pkg", "name": "called_history", "path": null, "summary": "External package 'called_history' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:svc", "kind": "pkg", "name": "svc", "path": null, "summary": "External package 'svc' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:full", "kind": "pkg", "name": "full", "path": null, "summary": "External package 'full' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/dashboard.py", "kind": "module", "name": "tests.dashboard", "path": "tests/dashboard.py", "summary": "Module tests.dashboard.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/database.py", "kind": "module", "name": "tests.database", "path": "tests/database.py", "summary": "Module tests.database.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/database.py:run", "kind": "function", "name": "run", "path": "tests/database.py", "summary": "Function run.", "tags": null, "range": {"lines": [3, 7], "bytes": [39, 221]}, "parent": "mod:tests/database.py"}
{"id": "feat:MAIN:tests/database.py", "kind": "feature", "name": "MAIN:tests/database.py", "path": null, "summary": "Script entrypoint for tests/database.py.", "tags": ["script"], "range": null, "parent": null}
{"id": "mod:tests/expense.py", "kind": "module", "name": "tests.expense", "path": "tests/expense.py", "summary": "Module tests.expense.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/expense.py:_ensure_clean_tables", "kind": "function", "name": "_ensure_clean_tables", "path": "tests/expense.py", "summary": "Function _ensure_clean_tables.", "tags": null, "range": {"lines": [29, 37], "bytes": [918, 1247]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:_seed_categories", "kind": "function", "name": "_seed_categories", "path": "tests/expense.py", "summary": "Function _seed_categories.", "tags": null, "range": {"lines": [40, 45], "bytes": [1249, 1432]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:_seed_expenses", "kind": "function", "name": "_seed_expenses", "path": "tests/expense.py", "summary": "Function _seed_expenses.", "tags": null, "range": {"lines": [48, 58], "bytes": [1434, 1891]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_repo_category_crud_and_validation", "kind": "function", "name": "test_repo_category_crud_and_validation", "path": "tests/expense.py", "summary": "Function test_repo_category_crud_and_validation.", "tags": null, "range": {"lines": [65, 84], "bytes": [2057, 2667]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_repo_expense_crud_search_totals", "kind": "function", "name": "test_repo_expense_crud_search_totals", "path": "tests/expense.py", "summary": "Function test_repo_expense_crud_search_totals.", "tags": null, "range": {"lines": [87, 128], "bytes": [2669, 4169]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_form_defaults_and_validation", "kind": "function", "name": "test_form_defaults_and_validation", "path": "tests/expense.py", "summary": "Function test_form_defaults_and_validation.", "tags": null, "range": {"lines": [135, 159], "bytes": [4329, 5111]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_form_prefill", "kind": "function", "name": "test_form_prefill", "path": "tests/expense.py", "summary": "Function test_form_prefill.", "tags": null, "range": {"lines": [162, 181], "bytes": [5113, 5789]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_view_single_date_defaults_and_clear", "kind": "function", "name": "test_view_single_date_defaults_and_clear", "path": "tests/expense.py", "summary": "Function test_view_single_date_defaults_and_clear.", "tags": null, "range": {"lines": [188, 194], "bytes": [5949, 6172]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_view_advanced_filters_defaults", "kind": "function", "name": "test_view_advanced_filters_defaults", "path": "tests/expense.py", "summary": "Function test_view_advanced_filters_defaults.", "tags": null, "range": {"lines": [197, 203], "bytes": [6174, 6407]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_controller_reload_and_model", "kind": "function", "name": "test_controller_reload_and_model", "path": "tests/expense.py", "summary": "Function test_controller_reload_and_model.", "tags": null, "range": {"lines": [210, 224], "bytes": [6573, 7092]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_controller_advanced_filters_and_totals", "kind": "function", "name": "test_controller_advanced_filters_and_totals", "path": "tests/expense.py", "summary": "Function test_controller_advanced_filters_and_totals.", "tags": null, "range": {"lines": [227, 254], "bytes": [7094, 8100]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_controller_export_csv", "kind": "function", "name": "test_controller_export_csv", "path": "tests/expense.py", "summary": "Function test_controller_export_csv.", "tags": null, "range": {"lines": [257, 277], "bytes": [8102, 8770]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_controller_shortcuts_trigger_handlers", "kind": "function", "name": "test_controller_shortcuts_trigger_handlers", "path": "tests/expense.py", "summary": "Function test_controller_shortcuts_trigger_handlers.", "tags": null, "range": {"lines": [280, 326], "bytes": [8772, 10663]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_controller_add_edit_delete_flow", "kind": "function", "name": "test_controller_add_edit_delete_flow", "path": "tests/expense.py", "summary": "Function test_controller_add_edit_delete_flow.", "tags": null, "range": {"lines": [329, 361], "bytes": [10665, 11887]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_category_dialog_crud", "kind": "function", "name": "test_category_dialog_crud", "path": "tests/expense.py", "summary": "Function test_category_dialog_crud.", "tags": null, "range": {"lines": [368, 391], "bytes": [12058, 12722]}, "parent": "mod:tests/expense.py"}
{"id": "sym:tests/expense.py:test_expense_e2e_crud_filters_totals_export", "kind": "function", "name": "test_expense_e2e_crud_filters_totals_export", "path": "tests/expense.py", "summary": "Function test_expense_e2e_crud_filters_totals_export.", "tags": null, "range": {"lines": [398, 438], "bytes": [12882, 14232]}, "parent": "mod:tests/expense.py"}
{"id": "pkg:cat_map", "kind": "pkg", "name": "cat_map", "path": null, "summary": "External package 'cat_map' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:issubset", "kind": "pkg", "name": "issubset", "path": null, "summary": "External package 'issubset' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:qtbot", "kind": "pkg", "name": "qtbot", "path": null, "summary": "External package 'qtbot' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ExpenseController", "kind": "pkg", "name": "ExpenseController", "path": null, "summary": "External package 'ExpenseController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rowCount", "kind": "pkg", "name": "rowCount", "path": null, "summary": "External package 'rowCount' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QTest", "kind": "pkg", "name": "QTest", "path": null, "summary": "External package 'QTest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/inventory.py", "kind": "module", "name": "tests.inventory", "path": "tests/inventory.py", "summary": "Module tests.inventory.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/inventory.py:_table_exists", "kind": "function", "name": "_table_exists", "path": "tests/inventory.py", "summary": "Function _table_exists.", "tags": null, "range": {"lines": [23, 28], "bytes": [727, 942]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_has_column", "kind": "function", "name": "_has_column", "path": "tests/inventory.py", "summary": "Function _has_column.", "tags": null, "range": {"lines": [30, 32], "bytes": [943, 1105]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_mk_uom", "kind": "function", "name": "_mk_uom", "path": "tests/inventory.py", "summary": "Function _mk_uom.", "tags": null, "range": {"lines": [34, 39], "bytes": [1106, 1384]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_mk_product", "kind": "function", "name": "_mk_product", "path": "tests/inventory.py", "summary": "Insert a product using whatever column your schema actually has. Supports:   - products(name)   - products(name, uom_id)   - products(name, default_uom_id)  We try to set the product's *base/default* UoM to the provided uom_id so that product_uoms triggers that verify base/non-base consistency are satisfied.", "tags": null, "range": {"lines": [41, 74], "bytes": [1385, 2593]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_ensure_prod_uom", "kind": "function", "name": "_ensure_prod_uom", "path": "tests/inventory.py", "summary": "Ensure a Product↔UoM mapping exists in product_uoms that satisfies common base-UoM triggers:    - factor_to_base = 1.0  (or conversion_factor/factor = 1.0)   - is_base = 1           (or is_default / is_primary = 1)  If the table doesn't exist, nothing is done.", "tags": null, "range": {"lines": [76, 128], "bytes": [2594, 4286]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_seed_txn", "kind": "function", "name": "_seed_txn", "path": "tests/inventory.py", "summary": "Insert into inventory_transactions using the columns we saw:   quantity, transaction_type, date (+ product_id/uom_id). Ensure product↔uom mapping exists first (if product_uoms table exists).", "tags": null, "range": {"lines": [130, 163], "bytes": [4287, 5372]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:_today", "kind": "function", "name": "_today", "path": "tests/inventory.py", "summary": "Function _today.", "tags": null, "range": {"lines": [165, 166], "bytes": [5373, 5457]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_repo_recent_transactions_order_and_columns", "kind": "function", "name": "test_repo_recent_transactions_order_and_columns", "path": "tests/inventory.py", "summary": "Function test_repo_recent_transactions_order_and_columns.", "tags": null, "range": {"lines": [173, 193], "bytes": [5627, 6466]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_repo_recent_transactions_limit_guard", "kind": "function", "name": "test_repo_recent_transactions_limit_guard", "path": "tests/inventory.py", "summary": "Function test_repo_recent_transactions_limit_guard.", "tags": null, "range": {"lines": [195, 204], "bytes": [6467, 6910]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_repo_find_transactions_filters_matrix", "kind": "function", "name": "test_repo_find_transactions_filters_matrix", "path": "tests/inventory.py", "summary": "Function test_repo_find_transactions_filters_matrix.", "tags": null, "range": {"lines": [206, 233], "bytes": [6911, 8008]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_repo_stock_on_hand_complete_and_none", "kind": "function", "name": "test_repo_stock_on_hand_complete_and_none", "path": "tests/inventory.py", "summary": "Function test_repo_stock_on_hand_complete_and_none.", "tags": null, "range": {"lines": [236, 279], "bytes": [8010, 9610]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_model_renders_new_schema_and_legacy_keys", "kind": "function", "name": "test_model_renders_new_schema_and_legacy_keys", "path": "tests/inventory.py", "summary": "Function test_model_renders_new_schema_and_legacy_keys.", "tags": null, "range": {"lines": [286, 307], "bytes": [9790, 10655]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_model_replace_and_alignment", "kind": "function", "name": "test_model_replace_and_alignment", "path": "tests/inventory.py", "summary": "Function test_model_replace_and_alignment.", "tags": null, "range": {"lines": [309, 319], "bytes": [10656, 11229]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_inventory_controller_builds_three_tabs_and_recent_loads", "kind": "function", "name": "test_inventory_controller_builds_three_tabs_and_recent_loads", "path": "tests/inventory.py", "summary": "Function test_inventory_controller_builds_three_tabs_and_recent_loads.", "tags": null, "range": {"lines": [326, 348], "bytes": [11408, 12290]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_transactions_view_defaults_today_and_limit", "kind": "function", "name": "test_transactions_view_defaults_today_and_limit", "path": "tests/inventory.py", "summary": "Function test_transactions_view_defaults_today_and_limit.", "tags": null, "range": {"lines": [355, 362], "bytes": [12468, 12790]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_transactions_view_filters_and_reload", "kind": "function", "name": "test_transactions_view_filters_and_reload", "path": "tests/inventory.py", "summary": "Function test_transactions_view_filters_and_reload.", "tags": null, "range": {"lines": [364, 392], "bytes": [12791, 13920]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_transactions_view_export_csv", "kind": "function", "name": "test_transactions_view_export_csv", "path": "tests/inventory.py", "summary": "Function test_transactions_view_export_csv.", "tags": null, "range": {"lines": [394, 412], "bytes": [13921, 14675]}, "parent": "mod:tests/inventory.py"}
{"id": "sym:tests/inventory.py:test_stock_valuation_loads_products_and_snapshot", "kind": "function", "name": "test_stock_valuation_loads_products_and_snapshot", "path": "tests/inventory.py", "summary": "Function test_stock_valuation_loads_products_and_snapshot.", "tags": null, "range": {"lines": [419, 470], "bytes": [14855, 16596]}, "parent": "mod:tests/inventory.py"}
{"id": "pkg:vals", "kind": "pkg", "name": "vals", "path": null, "summary": "External package 'vals' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:m1", "kind": "pkg", "name": "m1", "path": null, "summary": "External package 'm1' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:InventoryController", "kind": "pkg", "name": "InventoryController", "path": null, "summary": "External package 'InventoryController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:addDays", "kind": "pkg", "name": "addDays", "path": null, "summary": "External package 'addDays' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:splitlines", "kind": "pkg", "name": "splitlines", "path": null, "summary": "External package 'splitlines' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/login.py", "kind": "module", "name": "tests.login", "path": "tests/login.py", "summary": "Module tests.login.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/payments.py", "kind": "module", "name": "tests.payments", "path": "tests/payments.py", "summary": "Module tests.payments.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/printing.py", "kind": "module", "name": "tests.printing", "path": "tests/printing.py", "summary": "Module tests.printing.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/product.py", "kind": "module", "name": "tests.product", "path": "tests/product.py", "summary": "Module tests.product.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/product.py:conn", "kind": "function", "name": "conn", "path": "tests/product.py", "summary": "Function conn.", "tags": null, "range": {"lines": [10, 24], "bytes": [218, 645]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_add_product_with_base_and_alt", "kind": "function", "name": "test_add_product_with_base_and_alt", "path": "tests/product.py", "summary": "Function test_add_product_with_base_and_alt.", "tags": null, "range": {"lines": [26, 44], "bytes": [646, 1257]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_duplicate_name_blocked", "kind": "function", "name": "test_duplicate_name_blocked", "path": "tests/product.py", "summary": "Function test_duplicate_name_blocked.", "tags": null, "range": {"lines": [46, 50], "bytes": [1258, 1483]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_alt_cannot_equal_base", "kind": "function", "name": "test_alt_cannot_equal_base", "path": "tests/product.py", "summary": "Function test_alt_cannot_equal_base.", "tags": null, "range": {"lines": [52, 55], "bytes": [1484, 1662]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_alt_factor_must_be_positive", "kind": "function", "name": "test_alt_factor_must_be_positive", "path": "tests/product.py", "summary": "Function test_alt_factor_must_be_positive.", "tags": null, "range": {"lines": [57, 60], "bytes": [1663, 1845]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_edit_delete_not_allowed", "kind": "function", "name": "test_edit_delete_not_allowed", "path": "tests/product.py", "summary": "Function test_edit_delete_not_allowed.", "tags": null, "range": {"lines": [62, 68], "bytes": [1846, 2117]}, "parent": "mod:tests/product.py"}
{"id": "sym:tests/product.py:test_schema_enforces_purchase_base_only", "kind": "function", "name": "test_schema_enforces_purchase_base_only", "path": "tests/product.py", "summary": "Proves current schema blocks purchase_items in a non-base UOM.", "tags": null, "range": {"lines": [70, 109], "bytes": [2118, 3749]}, "parent": "mod:tests/product.py"}
{"id": "pkg:init_schema", "kind": "pkg", "name": "init_schema", "path": null, "summary": "External package 'init_schema' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/purchase.py", "kind": "module", "name": "tests.purchase", "path": "tests/purchase.py", "summary": "Module tests.purchase.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/quotations.py", "kind": "module", "name": "tests.quotations", "path": "tests/quotations.py", "summary": "Module tests.quotations.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/sales.py", "kind": "module", "name": "tests.sales", "path": "tests/sales.py", "summary": "Tests for the sales module.  This suite covers the table models, repository operations, payment validations, and return form UI logic.  The goal is to provide equivalent coverage to the purchase/vendor test suites by exercising creation, editing, deletion, search and aggregation flows, as well as edge cases (quotation…", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/sales.py:StubRepo", "kind": "class", "name": "StubRepo", "path": "tests/sales.py", "summary": "Class StubRepo.", "tags": null, "range": {"lines": [935, 950], "bytes": [41869, 42547]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:StubRepo.__init__", "kind": "function", "name": "StubRepo.__init__", "path": "tests/sales.py", "summary": "Method StubRepo.__init__.", "tags": null, "range": {"lines": [671, 672], "bytes": [30850, 30915]}, "parent": "sym:tests/sales.py:StubRepo"}
{"id": "sym:tests/sales.py:StubRepo.search_sales", "kind": "function", "name": "StubRepo.search_sales", "path": "tests/sales.py", "summary": "Method StubRepo.search_sales.", "tags": null, "range": {"lines": [936, 936], "bytes": [41889, 41948]}, "parent": "sym:tests/sales.py:StubRepo"}
{"id": "sym:tests/sales.py:StubRepo.get_header", "kind": "function", "name": "StubRepo.get_header", "path": "tests/sales.py", "summary": "Method StubRepo.get_header.", "tags": null, "range": {"lines": [942, 950], "bytes": [42258, 42547]}, "parent": "sym:tests/sales.py:StubRepo"}
{"id": "sym:tests/sales.py:StubRepo.list_items", "kind": "function", "name": "StubRepo.list_items", "path": "tests/sales.py", "summary": "Method StubRepo.list_items.", "tags": null, "range": {"lines": [937, 940], "bytes": [41948, 42160]}, "parent": "sym:tests/sales.py:StubRepo"}
{"id": "sym:tests/sales.py:StubRepo.get_sale_totals", "kind": "function", "name": "StubRepo.get_sale_totals", "path": "tests/sales.py", "summary": "Method StubRepo.get_sale_totals.", "tags": null, "range": {"lines": [941, 941], "bytes": [42160, 42258]}, "parent": "sym:tests/sales.py:StubRepo"}
{"id": "sym:tests/sales.py:StubRepo2", "kind": "class", "name": "StubRepo2", "path": "tests/sales.py", "summary": "Class StubRepo2.", "tags": null, "range": {"lines": [873, 882], "bytes": [39460, 39780]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:StubRepo2.get_header", "kind": "function", "name": "StubRepo2.get_header", "path": "tests/sales.py", "summary": "Method StubRepo2.get_header.", "tags": null, "range": {"lines": [874, 882], "bytes": [39491, 39780]}, "parent": "sym:tests/sales.py:StubRepo2"}
{"id": "sym:tests/sales.py:_make_db", "kind": "function", "name": "_make_db", "path": "tests/sales.py", "summary": "Create an in-memory SQLite database and apply the provided schema. Returns a connection with row_factory set.", "tags": null, "range": {"lines": [46, 55], "bytes": [1491, 1842]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:_simple_schema", "kind": "function", "name": "_simple_schema", "path": "tests/sales.py", "summary": "Returns a minimal schema for sales, customers, items, products, uoms, inventory transactions, sale_detailed_totals and sale_payments.  Used by repo tests below.", "tags": null, "range": {"lines": [58, 140], "bytes": [1844, 3762]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_g1_sales_table_model_status_logic", "kind": "function", "name": "test_g1_sales_table_model_status_logic", "path": "tests/sales.py", "summary": "G1: SalesTableModel should derive statuses for non-quotation rows and use explicit statuses for quotations.  It should also compute paid_total = paid_amount + advance_payment_applied and format money.", "tags": null, "range": {"lines": [148, 230], "bytes": [3955, 6924]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:_get_display", "kind": "function", "name": "_get_display", "path": "tests/sales.py", "summary": "Function _get_display.", "tags": null, "range": {"lines": [217, 218], "bytes": [6353, 6459]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_g2_sale_items_model_line_total", "kind": "function", "name": "test_g2_sale_items_model_line_total", "path": "tests/sales.py", "summary": "G2: SaleItemsModel should compute line total = qty × (unit_price – item_discount) and format money correctly.", "tags": null, "range": {"lines": [233, 272], "bytes": [6926, 8160]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h1_list_and_search_sales", "kind": "function", "name": "test_h1_list_and_search_sales", "path": "tests/sales.py", "summary": "H1: list_sales() returns only real SALES; search_sales() filters by query, date and doc_type correctly.", "tags": null, "range": {"lines": [280, 307], "bytes": [8365, 9995]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h2_create_and_update_sale", "kind": "function", "name": "test_h2_create_and_update_sale", "path": "tests/sales.py", "summary": "H2: create_sale inserts header, items and inventory; update_sale rebuilds items and inventory and raises if editing a non-sale row.", "tags": null, "range": {"lines": [310, 360], "bytes": [9997, 12948]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h3_delete_sale", "kind": "function", "name": "test_h3_delete_sale", "path": "tests/sales.py", "summary": "H3: delete_sale removes sale header, items and inventory rows.", "tags": null, "range": {"lines": [363, 379], "bytes": [12950, 14177]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h4_quotation_crud_and_conversion", "kind": "function", "name": "test_h4_quotation_crud_and_conversion", "path": "tests/sales.py", "summary": "H4: create_quotation inserts quotation header and items with zeroed payment fields; update_quotation rebuilds items and keeps payment fields zero; convert_quotation_to_sale copies items, posts inventory, and marks quotation as accepted.", "tags": null, "range": {"lines": [382, 440], "bytes": [14179, 17868]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h5_sale_return_and_totals", "kind": "function", "name": "test_h5_sale_return_and_totals", "path": "tests/sales.py", "summary": "H5: record_return inserts sale_return inventory rows and sale_return_totals aggregates quantity and value correctly.", "tags": null, "range": {"lines": [443, 468], "bytes": [17870, 19444]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_h6_get_sale_totals", "kind": "function", "name": "test_h6_get_sale_totals", "path": "tests/sales.py", "summary": "H6: get_sale_totals returns subtotals from view or zeros when missing.", "tags": null, "range": {"lines": [471, 484], "bytes": [19446, 20080]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_i1_payment_method_validations", "kind": "function", "name": "test_i1_payment_method_validations", "path": "tests/sales.py", "summary": "I1: _normalize_and_validate enforces per-method rules.", "tags": null, "range": {"lines": [492, 553], "bytes": [20271, 24726]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_i2_record_payment_and_constraints", "kind": "function", "name": "test_i2_record_payment_and_constraints", "path": "tests/sales.py", "summary": "I2: record_payment inserts receipts and DB triggers should update paid_amount and payment_status. The repository accepts payments only for sales.  In this simplified test harness we verify that payments on a real sale update the header via a trigger.  We do not assert a failure on quotations because our temporary sche…", "tags": null, "range": {"lines": [556, 605], "bytes": [24728, 27670]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_i3_update_clearing_state_and_list", "kind": "function", "name": "test_i3_update_clearing_state_and_list", "path": "tests/sales.py", "summary": "I3: update_clearing_state should update clearing_state, dates and listing functions should order payments chronologically.", "tags": null, "range": {"lines": [608, 656], "bytes": [27672, 30404]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j1_search_and_quick_mode", "kind": "function", "name": "test_j1_search_and_quick_mode", "path": "tests/sales.py", "summary": "J1: _search() should return only real sales (not quotations) and quick mode hides search UI and primes the sale.", "tags": null, "range": {"lines": [664, 740], "bytes": [30593, 33604]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j2_return_amount_calculation_and_proration", "kind": "function", "name": "test_j2_return_amount_calculation_and_proration", "path": "tests/sales.py", "summary": "J2: Verify returned value computation after proration. returned_value = sum(qty_return * (unit_price - item_discount)) * (total_after_od / net_subtotal)", "tags": null, "range": {"lines": [743, 787], "bytes": [33606, 35961]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j3_overshoot_guard", "kind": "function", "name": "test_j3_overshoot_guard", "path": "tests/sales.py", "summary": "J3: Setting qty_return greater than sold should mark row as over and ignore it in totals.", "tags": null, "range": {"lines": [790, 822], "bytes": [35963, 37262]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j4_refund_logic_and_caps", "kind": "function", "name": "test_j4_refund_logic_and_caps", "path": "tests/sales.py", "summary": "J4: Refund checkbox enables spin and caps cash refund at min(returned_value, paid_amount). When paid_amount is zero, refund remains disabled and cash refund zero.", "tags": null, "range": {"lines": [825, 890], "bytes": [37264, 40100]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j5_return_all_toggle", "kind": "function", "name": "test_j5_return_all_toggle", "path": "tests/sales.py", "summary": "J5: Toggling return-all should populate qty_return equal to qty sold for all lines and update totals.", "tags": null, "range": {"lines": [893, 928], "bytes": [40102, 41727]}, "parent": "mod:tests/sales.py"}
{"id": "sym:tests/sales.py:test_j6_payload_shape", "kind": "function", "name": "test_j6_payload_shape", "path": "tests/sales.py", "summary": "J6: get_payload() after adjustments returns proper structure.", "tags": null, "range": {"lines": [931, 969], "bytes": [41729, 43311]}, "parent": "mod:tests/sales.py"}
{"id": "pkg:Row", "kind": "pkg", "name": "Row", "path": null, "summary": "External package 'Row' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:StubRepo", "kind": "pkg", "name": "StubRepo", "path": null, "summary": "External package 'StubRepo' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:red", "kind": "pkg", "name": "red", "path": null, "summary": "External package 'red' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:color", "kind": "pkg", "name": "color", "path": null, "summary": "External package 'color' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:background", "kind": "pkg", "name": "background", "path": null, "summary": "External package 'background' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:StubRepo2", "kind": "pkg", "name": "StubRepo2", "path": null, "summary": "External package 'StubRepo2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/system_logs.py", "kind": "module", "name": "tests.system_logs", "path": "tests/system_logs.py", "summary": "Module tests.system_logs.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_customer_form.py", "kind": "module", "name": "tests.test_customer_form", "path": "tests/test_customer_form.py", "summary": "Module tests.test_customer_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_customer_form.py:ensure_app", "kind": "function", "name": "ensure_app", "path": "tests/test_customer_form.py", "summary": "Ensure a QApplication instance exists; return it.", "tags": null, "range": {"lines": [14, 19], "bytes": [297, 475]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "sym:tests/test_customer_form.py:test_customer_form_get_payload_valid", "kind": "function", "name": "test_customer_form_get_payload_valid", "path": "tests/test_customer_form.py", "summary": "Valid input should return a normalized payload with collapsed spaces, stripped lines, and a numeric `is_active` flag.", "tags": null, "range": {"lines": [22, 43], "bytes": [477, 1430]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "sym:tests/test_customer_form.py:test_customer_form_get_payload_empty_name_invalid", "kind": "function", "name": "test_customer_form_get_payload_empty_name_invalid", "path": "tests/test_customer_form.py", "summary": "An empty name should cause get_payload to return None.", "tags": null, "range": {"lines": [46, 56], "bytes": [1432, 1811]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "sym:tests/test_customer_form.py:test_customer_form_get_payload_empty_contact_invalid", "kind": "function", "name": "test_customer_form_get_payload_empty_contact_invalid", "path": "tests/test_customer_form.py", "summary": "An empty contact info should cause get_payload to return None.", "tags": null, "range": {"lines": [59, 68], "bytes": [1813, 2122]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "sym:tests/test_customer_form.py:test_customer_form_dup_check_invoked", "kind": "function", "name": "test_customer_form_dup_check_invoked", "path": "tests/test_customer_form.py", "summary": "The duplicate-check callback should be invoked with the normalized name and current_id, but it does not block submission.", "tags": null, "range": {"lines": [71, 95], "bytes": [2124, 3124]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "sym:tests/test_customer_form.py:dup_check", "kind": "function", "name": "dup_check", "path": "tests/test_customer_form.py", "summary": "Function dup_check.", "tags": null, "range": {"lines": [79, 82], "bytes": [2347, 2532]}, "parent": "mod:tests/test_customer_form.py"}
{"id": "pkg:calls", "kind": "pkg", "name": "calls", "path": null, "summary": "External package 'calls' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_error_parity_ui.py", "kind": "module", "name": "tests.test_error_parity_ui", "path": "tests/test_error_parity_ui.py", "summary": "Module tests.test_error_parity_ui.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_error_parity_ui.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_error_parity_ui.py", "summary": "Function _new_purchase_id.", "tags": null, "range": {"lines": [20, 33], "bytes": [751, 1208]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "sym:tests/test_error_parity_ui.py:_make_purchase", "kind": "function", "name": "_make_purchase", "path": "tests/test_error_parity_ui.py", "summary": "Function _make_purchase.", "tags": null, "range": {"lines": [36, 60], "bytes": [1210, 2048]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "sym:tests/test_error_parity_ui.py:test_f1_payment_method_guards_ui_and_db", "kind": "function", "name": "test_f1_payment_method_guards_ui_and_db", "path": "tests/test_error_parity_ui.py", "summary": "Function test_f1_payment_method_guards_ui_and_db.", "tags": null, "range": {"lines": [67, 136], "bytes": [2302, 5790]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "sym:tests/test_error_parity_ui.py:test_f2_overapply_vendor_credit_controller_message", "kind": "function", "name": "test_f2_overapply_vendor_credit_controller_message", "path": "tests/test_error_parity_ui.py", "summary": "Function test_f2_overapply_vendor_credit_controller_message.", "tags": null, "range": {"lines": [143, 178], "bytes": [6058, 7577]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "sym:tests/test_error_parity_ui.py:_capture", "kind": "function", "name": "_capture", "path": "tests/test_error_parity_ui.py", "summary": "Function _capture.", "tags": null, "range": {"lines": [156, 157], "bytes": [6733, 6807]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "sym:tests/test_error_parity_ui.py:test_f3_non_base_uom_rejected_db", "kind": "function", "name": "test_f3_non_base_uom_rejected_db", "path": "tests/test_error_parity_ui.py", "summary": "The dialog enforces base UoM only. If a caller bypasses the UI and submits a non-base UoM to the repo, the DB must reject it.", "tags": null, "range": {"lines": [184, 220], "bytes": [7798, 9197]}, "parent": "mod:tests/test_error_parity_ui.py"}
{"id": "pkg:pr", "kind": "pkg", "name": "pr", "path": null, "summary": "External package 'pr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ppay", "kind": "pkg", "name": "ppay", "path": null, "summary": "External package 'ppay' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:msgs", "kind": "pkg", "name": "msgs", "path": null, "summary": "External package 'msgs' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:VendorController", "kind": "pkg", "name": "VendorController", "path": null, "summary": "External package 'VendorController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ctl", "kind": "pkg", "name": "ctl", "path": null, "summary": "External package 'ctl' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_purchase_controller_flows.py", "kind": "module", "name": "tests.test_purchase_controller_flows", "path": "tests/test_purchase_controller_flows.py", "summary": "Module tests.test_purchase_controller_flows.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_purchase_controller_flows.py:_StubForm", "kind": "class", "name": "_StubForm", "path": "tests/test_purchase_controller_flows.py", "summary": "Minimal stub for PurchaseForm used by controller._add().", "tags": null, "range": {"lines": [121, 133], "bytes": [3715, 4122]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_StubForm.__init__", "kind": "function", "name": "_StubForm.__init__", "path": "tests/test_purchase_controller_flows.py", "summary": "Method _StubForm.__init__.", "tags": null, "range": {"lines": [125, 126], "bytes": [3809, 3937]}, "parent": "sym:tests/test_purchase_controller_flows.py:_StubForm"}
{"id": "sym:tests/test_purchase_controller_flows.py:_StubForm.exec", "kind": "function", "name": "_StubForm.exec", "path": "tests/test_purchase_controller_flows.py", "summary": "Method _StubForm.exec.", "tags": null, "range": {"lines": [128, 130], "bytes": [3938, 4041]}, "parent": "sym:tests/test_purchase_controller_flows.py:_StubForm"}
{"id": "sym:tests/test_purchase_controller_flows.py:_StubForm.payload", "kind": "function", "name": "_StubForm.payload", "path": "tests/test_purchase_controller_flows.py", "summary": "Method _StubForm.payload.", "tags": null, "range": {"lines": [132, 133], "bytes": [4042, 4122]}, "parent": "sym:tests/test_purchase_controller_flows.py:_StubForm"}
{"id": "sym:tests/test_purchase_controller_flows.py:_prefix_for", "kind": "function", "name": "_prefix_for", "path": "tests/test_purchase_controller_flows.py", "summary": "Function _prefix_for.", "tags": null, "range": {"lines": [19, 21], "bytes": [563, 657]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_get_val", "kind": "function", "name": "_get_val", "path": "tests/test_purchase_controller_flows.py", "summary": "Safe getter that works for both sqlite3.Row and dict-like objects.", "tags": null, "range": {"lines": [24, 34], "bytes": [659, 968]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_select_purchase_in_controller", "kind": "function", "name": "_select_purchase_in_controller", "path": "tests/test_purchase_controller_flows.py", "summary": "Select the row for purchase_id in the controller's view so actions like mark_payment_cleared() see the correct 'current' purchase.", "tags": null, "range": {"lines": [37, 57], "bytes": [970, 1669]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_last_pid_for_date", "kind": "function", "name": "_last_pid_for_date", "path": "tests/test_purchase_controller_flows.py", "summary": "Grab the highest purchase_id for a specific date prefix (what controller generates).", "tags": null, "range": {"lines": [60, 67], "bytes": [1671, 2090]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_header", "kind": "function", "name": "_header", "path": "tests/test_purchase_controller_flows.py", "summary": "Function _header.", "tags": null, "range": {"lines": [70, 75], "bytes": [2092, 2364]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_payment_row", "kind": "function", "name": "_payment_row", "path": "tests/test_purchase_controller_flows.py", "summary": "Function _payment_row.", "tags": null, "range": {"lines": [78, 82], "bytes": [2366, 2573]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_ledger_ext_last", "kind": "function", "name": "_ledger_ext_last", "path": "tests/test_purchase_controller_flows.py", "summary": "Function _ledger_ext_last.", "tags": null, "range": {"lines": [85, 90], "bytes": [2575, 2831]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_base_uom", "kind": "function", "name": "_base_uom", "path": "tests/test_purchase_controller_flows.py", "summary": "Returns the base UoM id for a product. Tries repo.get_base_uom first, falls back to scanning product_uoms.", "tags": null, "range": {"lines": [93, 116], "bytes": [2833, 3648]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:test_d1_create_with_initial_bank_transfer_cleared", "kind": "function", "name": "test_d1_create_with_initial_bank_transfer_cleared", "path": "tests/test_purchase_controller_flows.py", "summary": "D1. Create + initial payment → paid (mirrors test_p2). - Initial method: Bank Transfer, cleared, valid instrument meta. - Assert header paid_amount==total and payment_status=='paid'. - Payment row contains the expected fields; ledger ext amount_out == amount.", "tags": null, "range": {"lines": [140, 216], "bytes": [4210, 7031]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:test_d2_create_with_pending_cheque_then_clear", "kind": "function", "name": "test_d2_create_with_pending_cheque_then_clear", "path": "tests/test_purchase_controller_flows.py", "summary": "D2. Create + pending Cheque → unpaid, then clear → partial (mirrors test_p3). - After create: header remains unpaid (cleared-only rollup). - Clear the payment; header shows partial; row shows clearing_state='cleared'.", "tags": null, "range": {"lines": [219, 304], "bytes": [7033, 10128]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:test_d3_apply_vendor_credit_overdraw_surface_error", "kind": "function", "name": "test_d3_apply_vendor_credit_overdraw_surface_error", "path": "tests/test_purchase_controller_flows.py", "summary": "D3. Apply vendor credit via controller (error surfaced, header unchanged). - Grant credit +200. - Create a purchase with due < 500. - Call controller.apply_vendor_credit(amount=500) -> IntegrityError caught and message shown. - Assert header.advance_payment_applied unchanged (still 0).", "tags": null, "range": {"lines": [307, 363], "bytes": [10130, 12324]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "sym:tests/test_purchase_controller_flows.py:_catch_info", "kind": "function", "name": "_catch_info", "path": "tests/test_purchase_controller_flows.py", "summary": "Function _catch_info.", "tags": null, "range": {"lines": [320, 321], "bytes": [10722, 10817]}, "parent": "mod:tests/test_purchase_controller_flows.py"}
{"id": "pkg:row_obj", "kind": "pkg", "name": "row_obj", "path": null, "summary": "External package 'row_obj' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:proxy", "kind": "pkg", "name": "proxy", "path": null, "summary": "External package 'proxy' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:base", "kind": "pkg", "name": "base", "path": null, "summary": "External package 'base' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:PurchaseController", "kind": "pkg", "name": "PurchaseController", "path": null, "summary": "External package 'PurchaseController' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:_StubForm", "kind": "pkg", "name": "_StubForm", "path": null, "summary": "External package '_StubForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:messages", "kind": "pkg", "name": "messages", "path": null, "summary": "External package 'messages' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_purchase_form_ui.py", "kind": "module", "name": "tests.test_purchase_form_ui", "path": "tests/test_purchase_form_ui.py", "summary": "Module tests.test_purchase_form_ui.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_purchase_form_ui.py:_money_to_float", "kind": "function", "name": "_money_to_float", "path": "tests/test_purchase_form_ui.py", "summary": "Function _money_to_float.", "tags": null, "range": {"lines": [26, 28], "bytes": [701, 851]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_purchase_form_ui.py", "summary": "Function _new_purchase_id.", "tags": null, "range": {"lines": [30, 43], "bytes": [852, 1309]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_row_widgets", "kind": "function", "name": "_row_widgets", "path": "tests/test_purchase_form_ui.py", "summary": "Function _row_widgets.", "tags": null, "range": {"lines": [45, 52], "bytes": [1310, 1682]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_set_row", "kind": "function", "name": "_set_row", "path": "tests/test_purchase_form_ui.py", "summary": "Function _set_row.", "tags": null, "range": {"lines": [54, 66], "bytes": [1683, 2208]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_select_combo_by_text", "kind": "function", "name": "_select_combo_by_text", "path": "tests/test_purchase_form_ui.py", "summary": "Function _select_combo_by_text.", "tags": null, "range": {"lines": [68, 71], "bytes": [2209, 2362]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_first_combo_data", "kind": "function", "name": "_first_combo_data", "path": "tests/test_purchase_form_ui.py", "summary": "Function _first_combo_data.", "tags": null, "range": {"lines": [73, 74], "bytes": [2363, 2420]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_get_header_row", "kind": "function", "name": "_get_header_row", "path": "tests/test_purchase_form_ui.py", "summary": "Function _get_header_row.", "tags": null, "range": {"lines": [76, 81], "bytes": [2421, 2675]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_ensure_vendor_accounts_loaded", "kind": "function", "name": "_ensure_vendor_accounts_loaded", "path": "tests/test_purchase_form_ui.py", "summary": "Make sure at least one vendor bank account is available in the combo. If none exist and a DB connection is provided, seed a primary account for the given vendor_id. Also ensures the form's repo uses the same `conn` (assigns `form.vendors.conn` when possible).", "tags": null, "range": {"lines": [84, 180], "bytes": [2766, 6515]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:_reload_and_has_rows", "kind": "function", "name": "_reload_and_has_rows", "path": "tests/test_purchase_form_ui.py", "summary": "Function _reload_and_has_rows.", "tags": null, "range": {"lines": [108, 115], "bytes": [3704, 4009]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:test_b0_smoke_header_rows_totals", "kind": "function", "name": "test_b0_smoke_header_rows_totals", "path": "tests/test_purchase_form_ui.py", "summary": "B0. Smoke: header + rows + totals. Two lines:   A: qty=10, buy=100, sale=120, disc=5  -> 10*(100-5)=950   B: qty=5,  buy=200, sale=240, disc=0 -> 5*(200-0)=1000   Subtotal=1950, order_discount=50 -> total=1900", "tags": null, "range": {"lines": [187, 267], "bytes": [6598, 9392]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:test_b1_initial_bank_transfer_cleared", "kind": "function", "name": "test_b1_initial_bank_transfer_cleared", "path": "tests/test_purchase_form_ui.py", "summary": "B1. Initial Bank Transfer (immediate effect when cleared). One-line purchase: qty=2, buy=100 -> total=200. Set initial payment amount=200. Ensure header paid_amount==200 and status=='paid'. Ledger ext shows amount_out=200.", "tags": null, "range": {"lines": [270, 366], "bytes": [9394, 13254]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:test_b2_initial_cheque_pending_then_clear", "kind": "function", "name": "test_b2_initial_cheque_pending_then_clear", "path": "tests/test_purchase_form_ui.py", "summary": "B2. Initial Cheque -> pending first (no header rollup), then clear -> partial. Make a 1000 total purchase (qty=5 * buy=200). Pay 300 by cheque, pending. Then clear it and assert header paid_amount=300, status='partial'.", "tags": null, "range": {"lines": [369, 454], "bytes": [13256, 16800]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:test_b3_method_guard_parity_ui_blocks", "kind": "function", "name": "test_b3_method_guard_parity_ui_blocks", "path": "tests/test_purchase_form_ui.py", "summary": "B3. UI blocks invalid initial payment combos (parity with DB triggers).", "tags": null, "range": {"lines": [457, 516], "bytes": [16802, 19146]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "sym:tests/test_purchase_form_ui.py:test_b4_payload_shape_compat", "kind": "function", "name": "test_b4_payload_shape_compat", "path": "tests/test_purchase_form_ui.py", "summary": "B4. Payload shape:   - items[] contain ONLY base uom_id.   - initial_payment nested dict present only when amount>0 with the expected fields.", "tags": null, "range": {"lines": [519, 594], "bytes": [19148, 22053]}, "parent": "mod:tests/test_purchase_form_ui.py"}
{"id": "pkg:disc_it", "kind": "pkg", "name": "disc_it", "path": null, "summary": "External package 'disc_it' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ip", "kind": "pkg", "name": "ip", "path": null, "summary": "External package 'ip' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:record_payment", "kind": "pkg", "name": "record_payment", "path": null, "summary": "External package 'record_payment' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ok_payload", "kind": "pkg", "name": "ok_payload", "path": null, "summary": "External package 'ok_payload' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:payload2", "kind": "pkg", "name": "payload2", "path": null, "summary": "External package 'payload2' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:expected_keys", "kind": "pkg", "name": "expected_keys", "path": null, "summary": "External package 'expected_keys' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_purchase_item_form.py", "kind": "module", "name": "tests.test_purchase_item_form", "path": "tests/test_purchase_item_form.py", "summary": "Module tests.test_purchase_item_form.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_purchase_item_form.py:_select_product", "kind": "function", "name": "_select_product", "path": "tests/test_purchase_item_form.py", "summary": "Helper to select a product by id and wait for the base-UoM to load.", "tags": null, "range": {"lines": [10, 20], "bytes": [274, 751]}, "parent": "mod:tests/test_purchase_item_form.py"}
{"id": "sym:tests/test_purchase_item_form.py:_uom_loaded", "kind": "function", "name": "_uom_loaded", "path": "tests/test_purchase_item_form.py", "summary": "Function _uom_loaded.", "tags": null, "range": {"lines": [17, 18], "bytes": [605, 703]}, "parent": "mod:tests/test_purchase_item_form.py"}
{"id": "sym:tests/test_purchase_item_form.py:form", "kind": "function", "name": "form", "path": "tests/test_purchase_item_form.py", "summary": "Fresh PurchaseItemForm with ProductsRepo wired to the shared DB.", "tags": null, "range": {"lines": [24, 31], "bytes": [771, 1059]}, "parent": "mod:tests/test_purchase_item_form.py"}
{"id": "sym:tests/test_purchase_item_form.py:test_a1_base_uom_enforcement", "kind": "function", "name": "test_a1_base_uom_enforcement", "path": "tests/test_purchase_item_form.py", "summary": "A1. Base-UoM enforcement: - Selecting a product locks UoM to its base (read-only & disabled). - Changing product updates UoM to the new base. - Payload always returns base UoM (even if initial tried to pass non-base).", "tags": null, "range": {"lines": [38, 69], "bytes": [1157, 2641]}, "parent": "mod:tests/test_purchase_item_form.py"}
{"id": "sym:tests/test_purchase_item_form.py:test_a2_pricing_rules_and_line_total_logic", "kind": "function", "name": "test_a2_pricing_rules_and_line_total_logic", "path": "tests/test_purchase_item_form.py", "summary": "A2. Pricing rules: - qty > 0, buy > 0 - 0 ≤ discount < buy - sale may be < buy (allowed) - net line total logic: qty * (buy - discount)", "tags": null, "range": {"lines": [72, 131], "bytes": [2643, 4617]}, "parent": "mod:tests/test_purchase_item_form.py"}
{"id": "pkg:PurchaseItemForm", "kind": "pkg", "name": "PurchaseItemForm", "path": null, "summary": "External package 'PurchaseItemForm' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_purchase_module.py", "kind": "module", "name": "tests.test_purchase_module", "path": "tests/test_purchase_module.py", "summary": "Module tests.test_purchase_module.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_purchase_module.py:apply_common_seed", "kind": "function", "name": "apply_common_seed", "path": "tests/test_purchase_module.py", "summary": "Run the idempotent seed once per test session.", "tags": null, "range": {"lines": [27, 35], "bytes": [730, 1005]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:conn", "kind": "function", "name": "conn", "path": "tests/test_purchase_module.py", "summary": "Connection with FK on and row access by name; each test rolled back.", "tags": null, "range": {"lines": [39, 50], "bytes": [1025, 1400]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:ids", "kind": "function", "name": "ids", "path": "tests/test_purchase_module.py", "summary": "Common lookups.", "tags": null, "range": {"lines": [54, 78], "bytes": [1420, 2737]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:one", "kind": "function", "name": "one", "path": "tests/test_purchase_module.py", "summary": "Function one.", "tags": null, "range": {"lines": [56, 58], "bytes": [1461, 1622]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:new_purchase_id", "kind": "function", "name": "new_purchase_id", "path": "tests/test_purchase_module.py", "summary": "PO IDs as POYYYYMMDD-#### with daily sequence.", "tags": null, "range": {"lines": [81, 95], "bytes": [2739, 3251]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:build_header", "kind": "function", "name": "build_header", "path": "tests/test_purchase_module.py", "summary": "Function build_header.", "tags": null, "range": {"lines": [98, 110], "bytes": [3253, 3725]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p1_create_purchase_no_payments", "kind": "function", "name": "test_p1_create_purchase_no_payments", "path": "tests/test_purchase_module.py", "summary": "Function test_p1_create_purchase_no_payments.", "tags": null, "range": {"lines": [116, 189], "bytes": [3852, 7184]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p2_purchase_with_initial_payment", "kind": "function", "name": "test_p2_purchase_with_initial_payment", "path": "tests/test_purchase_module.py", "summary": "Function test_p2_purchase_with_initial_payment.", "tags": null, "range": {"lines": [195, 250], "bytes": [7375, 9549]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p3_cheque_payment_then_clear", "kind": "function", "name": "test_p3_cheque_payment_then_clear", "path": "tests/test_purchase_module.py", "summary": "Function test_p3_cheque_payment_then_clear.", "tags": null, "range": {"lines": [256, 310], "bytes": [9717, 11825]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p4_return_with_refund_now", "kind": "function", "name": "test_p4_return_with_refund_now", "path": "tests/test_purchase_module.py", "summary": "Function test_p4_return_with_refund_now.", "tags": null, "range": {"lines": [316, 385], "bytes": [12027, 14900]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p5_return_with_credit_note", "kind": "function", "name": "test_p5_return_with_credit_note", "path": "tests/test_purchase_module.py", "summary": "Function test_p5_return_with_credit_note.", "tags": null, "range": {"lines": [391, 438], "bytes": [15061, 16840]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p6_apply_vendor_credit", "kind": "function", "name": "test_p6_apply_vendor_credit", "path": "tests/test_purchase_module.py", "summary": "Function test_p6_apply_vendor_credit.", "tags": null, "range": {"lines": [444, 482], "bytes": [17007, 18657]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p7_over_return_fails", "kind": "function", "name": "test_p7_over_return_fails", "path": "tests/test_purchase_module.py", "summary": "Function test_p7_over_return_fails.", "tags": null, "range": {"lines": [488, 521], "bytes": [18790, 20033]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p8_non_base_uom_rejected", "kind": "function", "name": "test_p8_non_base_uom_rejected", "path": "tests/test_purchase_module.py", "summary": "Function test_p8_non_base_uom_rejected.", "tags": null, "range": {"lines": [527, 551], "bytes": [20249, 21575]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p9_update_purchase_keeps_returns", "kind": "function", "name": "test_p9_update_purchase_keeps_returns", "path": "tests/test_purchase_module.py", "summary": "Function test_p9_update_purchase_keeps_returns.", "tags": null, "range": {"lines": [556, 604], "bytes": [21800, 23955]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p10_backdated_marks_dirty", "kind": "function", "name": "test_p10_backdated_marks_dirty", "path": "tests/test_purchase_module.py", "summary": "Function test_p10_backdated_marks_dirty.", "tags": null, "range": {"lines": [610, 632], "bytes": [24159, 25288]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "sym:tests/test_purchase_module.py:test_p11_overapply_credit_beyond_due_fails", "kind": "function", "name": "test_p11_overapply_credit_beyond_due_fails", "path": "tests/test_purchase_module.py", "summary": "Function test_p11_overapply_credit_beyond_due_fails.", "tags": null, "range": {"lines": [638, 668], "bytes": [25501, 26792]}, "parent": "mod:tests/test_purchase_module.py"}
{"id": "pkg:payr", "kind": "pkg", "name": "payr", "path": null, "summary": "External package 'payr' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:vad", "kind": "pkg", "name": "vad", "path": null, "summary": "External package 'vad' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_purchase_return_form_ui.py", "kind": "module", "name": "tests.test_purchase_return_form_ui", "path": "tests/test_purchase_return_form_ui.py", "summary": "Module tests.test_purchase_return_form_ui.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_purchase_return_form_ui.py:_money_to_float", "kind": "function", "name": "_money_to_float", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _money_to_float.", "tags": null, "range": {"lines": [23, 24], "bytes": [852, 950]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _new_purchase_id.", "tags": null, "range": {"lines": [26, 36], "bytes": [951, 1383]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_returnable_map", "kind": "function", "name": "_returnable_map", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _returnable_map.", "tags": null, "range": {"lines": [38, 55], "bytes": [1384, 2053]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_table", "kind": "function", "name": "_table", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _table.", "tags": null, "range": {"lines": [57, 60], "bytes": [2054, 2265]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_find_col", "kind": "function", "name": "_find_col", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _find_col.", "tags": null, "range": {"lines": [62, 70], "bytes": [2266, 2689]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_set_return_qty", "kind": "function", "name": "_set_return_qty", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _set_return_qty.", "tags": null, "range": {"lines": [72, 79], "bytes": [2690, 3011]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_find_combo_with_items", "kind": "function", "name": "_find_combo_with_items", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _find_combo_with_items.", "tags": null, "range": {"lines": [81, 86], "bytes": [3012, 3359]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_select_text", "kind": "function", "name": "_select_text", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _select_text.", "tags": null, "range": {"lines": [88, 91], "bytes": [3360, 3516]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_find_lineedit_with_placeholder", "kind": "function", "name": "_find_lineedit_with_placeholder", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _find_lineedit_with_placeholder.", "tags": null, "range": {"lines": [93, 98], "bytes": [3517, 3830]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_ok_button", "kind": "function", "name": "_ok_button", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _ok_button.", "tags": null, "range": {"lines": [100, 104], "bytes": [3831, 4053]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_purchase_header", "kind": "function", "name": "_purchase_header", "path": "tests/test_purchase_return_form_ui.py", "summary": "Function _purchase_header.", "tags": null, "range": {"lines": [106, 110], "bytes": [4054, 4285]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:_make_purchase", "kind": "function", "name": "_make_purchase", "path": "tests/test_purchase_return_form_ui.py", "summary": "lines: [{product_id, qty, buy, sale, disc}]", "tags": null, "range": {"lines": [115, 136], "bytes": [4366, 5206]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:test_c1_credit_note_settlement_creates_vendor_credit", "kind": "function", "name": "test_c1_credit_note_settlement_creates_vendor_credit", "path": "tests/test_purchase_return_form_ui.py", "summary": "C1. Credit Note settlement (no purchase_payments row; vendor credit increases by return value).", "tags": null, "range": {"lines": [143, 225], "bytes": [5339, 8501]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:test_c2_refund_now_bank_transfer_incoming", "kind": "function", "name": "test_c2_refund_now_bank_transfer_incoming", "path": "tests/test_purchase_return_form_ui.py", "summary": "C2. Refund Now (Bank Transfer, incoming negative payment). - Return 3 of A at net=95 -> 285 incoming. - Header paid_amount clamped at >= 0. - Ledger shows amount_in=285.", "tags": null, "range": {"lines": [228, 324], "bytes": [8503, 12568]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:test_c3_max_returnable_guard", "kind": "function", "name": "test_c3_max_returnable_guard", "path": "tests/test_purchase_return_form_ui.py", "summary": "C3. UI should block over-return; allow up to max returnable. Scenario: qty=10 purchased, first return 2 (credit note), second dialog must allow max=8.", "tags": null, "range": {"lines": [327, 390], "bytes": [12570, 15027]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "sym:tests/test_purchase_return_form_ui.py:test_c4_running_totals_preview_and_db_value", "kind": "function", "name": "test_c4_running_totals_preview_and_db_value", "path": "tests/test_purchase_return_form_ui.py", "summary": "C4. Dialog \"Total Return Value\" preview equals Σ qty*(buy-disc), and matches repo valuation after submit.", "tags": null, "range": {"lines": [393, 459], "bytes": [15029, 18046]}, "parent": "mod:tests/test_purchase_return_form_ui.py"}
{"id": "pkg:dialog", "kind": "pkg", "name": "dialog", "path": null, "summary": "External package 'dialog' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:QtWidgets", "kind": "pkg", "name": "QtWidgets", "path": null, "summary": "External package 'QtWidgets' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:le", "kind": "pkg", "name": "le", "path": null, "summary": "External package 'le' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:get_base_uom", "kind": "pkg", "name": "get_base_uom", "path": null, "summary": "External package 'get_base_uom' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:list_items", "kind": "pkg", "name": "list_items", "path": null, "summary": "External package 'list_items' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:setChecked", "kind": "pkg", "name": "setChecked", "path": null, "summary": "External package 'setChecked' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:st", "kind": "pkg", "name": "st", "path": null, "summary": "External package 'st' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:record_return", "kind": "pkg", "name": "record_return", "path": null, "summary": "External package 'record_return' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:instr_le", "kind": "pkg", "name": "instr_le", "path": null, "summary": "External package 'instr_le' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:ok_btn", "kind": "pkg", "name": "ok_btn", "path": null, "summary": "External package 'ok_btn' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:list_return_values_by_purchase", "kind": "pkg", "name": "list_return_values_by_purchase", "path": null, "summary": "External package 'list_return_values_by_purchase' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_reporting_aging.py", "kind": "module", "name": "tests.test_reporting_aging", "path": "tests/test_reporting_aging.py", "summary": "Module tests.test_reporting_aging.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_reporting_aging.py:apply_common_seed", "kind": "function", "name": "apply_common_seed", "path": "tests/test_reporting_aging.py", "summary": "Function apply_common_seed.", "tags": null, "range": {"lines": [23, 30], "bytes": [711, 929]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:conn", "kind": "function", "name": "conn", "path": "tests/test_reporting_aging.py", "summary": "Function conn.", "tags": null, "range": {"lines": [33, 42], "bytes": [948, 1181]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_reporting_aging.py", "summary": "Function _new_purchase_id.", "tags": null, "range": {"lines": [44, 57], "bytes": [1182, 1638]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:_build_header", "kind": "function", "name": "_build_header", "path": "tests/test_reporting_aging.py", "summary": "Function _build_header.", "tags": null, "range": {"lines": [59, 71], "bytes": [1639, 2098]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:_ids", "kind": "function", "name": "_ids", "path": "tests/test_reporting_aging.py", "summary": "Function _ids.", "tags": null, "range": {"lines": [73, 93], "bytes": [2099, 3141]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:one", "kind": "function", "name": "one", "path": "tests/test_reporting_aging.py", "summary": "Function one.", "tags": null, "range": {"lines": [74, 76], "bytes": [2135, 2296]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:test_r1_compute_aging_snapshot", "kind": "function", "name": "test_r1_compute_aging_snapshot", "path": "tests/test_reporting_aging.py", "summary": "Function test_r1_compute_aging_snapshot.", "tags": null, "range": {"lines": [96, 195], "bytes": [3236, 7933]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "sym:tests/test_reporting_aging.py:make_po", "kind": "function", "name": "make_po", "path": "tests/test_reporting_aging.py", "summary": "Function make_po.", "tags": null, "range": {"lines": [103, 108], "bytes": [3453, 3865]}, "parent": "mod:tests/test_reporting_aging.py"}
{"id": "pkg:VendorAgingReports", "kind": "pkg", "name": "VendorAgingReports", "path": null, "summary": "External package 'VendorAgingReports' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:values", "kind": "pkg", "name": "values", "path": null, "summary": "External package 'values' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_suite_f_error_parity.py", "kind": "module", "name": "tests.test_suite_f_error_parity", "path": "tests/test_suite_f_error_parity.py", "summary": "Module tests.test_suite_f_error_parity.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_suite_f_error_parity.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_suite_f_error_parity.py", "summary": "Function _new_purchase_id.", "tags": null, "range": {"lines": [20, 33], "bytes": [756, 1213]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "sym:tests/test_suite_f_error_parity.py:_make_purchase", "kind": "function", "name": "_make_purchase", "path": "tests/test_suite_f_error_parity.py", "summary": "Function _make_purchase.", "tags": null, "range": {"lines": [36, 60], "bytes": [1215, 2053]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "sym:tests/test_suite_f_error_parity.py:test_f1_payment_method_guards_ui_and_db", "kind": "function", "name": "test_f1_payment_method_guards_ui_and_db", "path": "tests/test_suite_f_error_parity.py", "summary": "Function test_f1_payment_method_guards_ui_and_db.", "tags": null, "range": {"lines": [67, 147], "bytes": [2347, 5957]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "sym:tests/test_suite_f_error_parity.py:test_f2_overapply_vendor_credit_controller_message", "kind": "function", "name": "test_f2_overapply_vendor_credit_controller_message", "path": "tests/test_suite_f_error_parity.py", "summary": "Function test_f2_overapply_vendor_credit_controller_message.", "tags": null, "range": {"lines": [154, 193], "bytes": [6227, 7783]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "sym:tests/test_suite_f_error_parity.py:_capture", "kind": "function", "name": "_capture", "path": "tests/test_suite_f_error_parity.py", "summary": "Function _capture.", "tags": null, "range": {"lines": [166, 167], "bytes": [6823, 6901]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "sym:tests/test_suite_f_error_parity.py:test_f3_non_base_uom_rejected_db", "kind": "function", "name": "test_f3_non_base_uom_rejected_db", "path": "tests/test_suite_f_error_parity.py", "summary": "The item dialog enforces base-UoM only. If someone bypasses it and tries to save a non-base UoM line, the DB must reject it.", "tags": null, "range": {"lines": [199, 235], "bytes": [8004, 9393]}, "parent": "mod:tests/test_suite_f_error_parity.py"}
{"id": "mod:tests/test_vendor_module.py", "kind": "module", "name": "tests.test_vendor_module", "path": "tests/test_vendor_module.py", "summary": "Module tests.test_vendor_module.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_vendor_module.py:apply_common_seed", "kind": "function", "name": "apply_common_seed", "path": "tests/test_vendor_module.py", "summary": "Run the idempotent seed once per test session.", "tags": null, "range": {"lines": [39, 47], "bytes": [1148, 1423]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:conn", "kind": "function", "name": "conn", "path": "tests/test_vendor_module.py", "summary": "Connection with FK on and row access by name; each test rolled back.", "tags": null, "range": {"lines": [50, 61], "bytes": [1442, 1817]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:ids", "kind": "function", "name": "ids", "path": "tests/test_vendor_module.py", "summary": "Common lookups.", "tags": null, "range": {"lines": [64, 84], "bytes": [1836, 2964]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:one", "kind": "function", "name": "one", "path": "tests/test_vendor_module.py", "summary": "Function one.", "tags": null, "range": {"lines": [66, 68], "bytes": [1877, 2038]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:new_purchase_id", "kind": "function", "name": "new_purchase_id", "path": "tests/test_vendor_module.py", "summary": "Function new_purchase_id.", "tags": null, "range": {"lines": [86, 99], "bytes": [2965, 3420]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:make_purchase", "kind": "function", "name": "make_purchase", "path": "tests/test_vendor_module.py", "summary": "Create a purchase via PurchasesRepo so inventory rows/txn_seq are correct. items_spec: list of dicts with keys (product_id, uom_id, quantity, purchase_price, sale_price, item_discount) Returns purchase_id.", "tags": null, "range": {"lines": [101, 131], "bytes": [3421, 4515]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v1_vendor_bank_accounts_crud", "kind": "function", "name": "test_v1_vendor_bank_accounts_crud", "path": "tests/test_vendor_module.py", "summary": "Function test_v1_vendor_bank_accounts_crud.", "tags": null, "range": {"lines": [137, 203], "bytes": [4603, 7146]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v2_vendor_advances_basic", "kind": "function", "name": "test_v2_vendor_advances_basic", "path": "tests/test_vendor_module.py", "summary": "Function test_v2_vendor_advances_basic.", "tags": null, "range": {"lines": [209, 246], "bytes": [7260, 8988]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v3_payment_method_rules", "kind": "function", "name": "test_v3_payment_method_rules", "path": "tests/test_vendor_module.py", "summary": "Function test_v3_payment_method_rules.", "tags": null, "range": {"lines": [252, 302], "bytes": [9133, 11852]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v4_refunds_negative_amounts", "kind": "function", "name": "test_v4_refunds_negative_amounts", "path": "tests/test_vendor_module.py", "summary": "Function test_v4_refunds_negative_amounts.", "tags": null, "range": {"lines": [308, 351], "bytes": [11987, 13887]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v5_pending_and_clearing", "kind": "function", "name": "test_v5_pending_and_clearing", "path": "tests/test_vendor_module.py", "summary": "Function test_v5_pending_and_clearing.", "tags": null, "range": {"lines": [357, 406], "bytes": [14035, 16240]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "sym:tests/test_vendor_module.py:test_v6_vendor_statement_composition", "kind": "function", "name": "test_v6_vendor_statement_composition", "path": "tests/test_vendor_module.py", "summary": "This assumes you implemented VendorController.build_vendor_statement(...) as specified. We create a small period with purchases/cash/credit to verify the normalized structure.", "tags": null, "range": {"lines": [413, 481], "bytes": [16508, 19681]}, "parent": "mod:tests/test_vendor_module.py"}
{"id": "pkg:keys", "kind": "pkg", "name": "keys", "path": null, "summary": "External package 'keys' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/test_vendor_statement_ui.py", "kind": "module", "name": "tests.test_vendor_statement_ui", "path": "tests/test_vendor_statement_ui.py", "summary": "Module tests.test_vendor_statement_ui.", "tags": null, "range": null, "parent": null}
{"id": "sym:tests/test_vendor_statement_ui.py:_new_purchase_id", "kind": "function", "name": "_new_purchase_id", "path": "tests/test_vendor_statement_ui.py", "summary": "Match controller’s ID scheme: POYYYYMMDD-#### (max+1 within day).", "tags": null, "range": {"lines": [19, 33], "bytes": [533, 1069]}, "parent": "mod:tests/test_vendor_statement_ui.py"}
{"id": "sym:tests/test_vendor_statement_ui.py:test_e_vendor_statement_composition_ui", "kind": "function", "name": "test_e_vendor_statement_composition_ui", "path": "tests/test_vendor_statement_ui.py", "summary": "Suite E — Vendor Controller statement (UI composition test)  Flows:   - Opening credit before period   - One in-period purchase (300)   - Cleared bank transfer (80)   - Credit applied (50) Expectations:   totals.purchases ≈ 300   totals.cash_paid = 80   totals.credit_applied = 50   opening_credit ≈ 120", "tags": null, "range": {"lines": [37, 135], "bytes": [1140, 4634]}, "parent": "mod:tests/test_vendor_statement_ui.py"}
{"id": "mod:tests/users.py", "kind": "module", "name": "tests.users", "path": "tests/users.py", "summary": "Module tests.users.", "tags": null, "range": null, "parent": null}
{"id": "mod:tests/vendor.py", "kind": "module", "name": "tests.vendor", "path": "tests/vendor.py", "summary": "Module tests.vendor.", "tags": null, "range": null, "parent": null}
{"id": "mod:utils/__init__.py", "kind": "module", "name": "utils", "path": "utils/__init__.py", "summary": "Module utils.", "tags": null, "range": null, "parent": null}
{"id": "mod:utils/auth.py", "kind": "module", "name": "utils.auth", "path": "utils/auth.py", "summary": "Module utils.auth.", "tags": null, "range": null, "parent": null}
{"id": "sym:utils/auth.py:SecurityPolicyError", "kind": "class", "name": "SecurityPolicyError", "path": "utils/auth.py", "summary": "Raised when authentication succeeds but policy requires stricter storage.", "tags": null, "range": {"lines": [26, 27], "bytes": [744, 866]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:_hash_pbkdf2", "kind": "function", "name": "_hash_pbkdf2", "path": "utils/auth.py", "summary": "Function _hash_pbkdf2.", "tags": null, "range": {"lines": [32, 43], "bytes": [942, 1466]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:_verify_pbkdf2", "kind": "function", "name": "_verify_pbkdf2", "path": "utils/auth.py", "summary": "Function _verify_pbkdf2.", "tags": null, "range": {"lines": [45, 58], "bytes": [1467, 2095]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:_hash_bcrypt", "kind": "function", "name": "_hash_bcrypt", "path": "utils/auth.py", "summary": "Function _hash_bcrypt.", "tags": null, "range": {"lines": [63, 74], "bytes": [2173, 2695]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:_verify_bcrypt", "kind": "function", "name": "_verify_bcrypt", "path": "utils/auth.py", "summary": "Function _verify_bcrypt.", "tags": null, "range": {"lines": [76, 83], "bytes": [2696, 3018]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:_parse_bcrypt_cost", "kind": "function", "name": "_parse_bcrypt_cost", "path": "utils/auth.py", "summary": "Extract the cost from a bcrypt hash: $2b$12$... Returns None if not parseable.", "tags": null, "range": {"lines": [85, 97], "bytes": [3019, 3380]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:hash_password", "kind": "function", "name": "hash_password", "path": "utils/auth.py", "summary": "Hash `password` using the chosen scheme.  - scheme=\"bcrypt\" (default) if bcrypt is available, else PBKDF2 fallback.   You can override cost with `bcrypt_rounds` (default 12). We clamp to a   minimum of _BCRYPT_MIN_ACCEPTABLE_ROUNDS. - scheme=\"pbkdf2\" to force the legacy format, with `pbkdf2_iterations`.   We clamp to …", "tags": null, "range": {"lines": [102, 129], "bytes": [3460, 4545]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:verify_password", "kind": "function", "name": "verify_password", "path": "utils/auth.py", "summary": "Verify `password` against `stored_hash`. Supports:   - PBKDF2: 'pbkdf2_sha256$...'   - bcrypt: $2a$ / $2b$ / $2y$...", "tags": null, "range": {"lines": [131, 159], "bytes": [4546, 5405]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:needs_rehash", "kind": "function", "name": "needs_rehash", "path": "utils/auth.py", "summary": "Policy hook: return True if the given stored hash should be upgraded.  Defaults:   - Prefer migrating PBKDF2 → bcrypt when possible.   - If hash is bcrypt but cost < bcrypt_min_rounds, rehash.   - If hash is PBKDF2 with iterations < pbkdf2_min_iterations, rehash.   - Unknown/malformed hashes → True (rotate to current …", "tags": null, "range": {"lines": [161, 207], "bytes": [5406, 6955]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:is_hash_strong_enough", "kind": "function", "name": "is_hash_strong_enough", "path": "utils/auth.py", "summary": "Return True if `stored_hash` meets current minimums. Unlike needs_rehash(), this does NOT force PBKDF2→bcrypt migration; it only checks minimum strength.", "tags": null, "range": {"lines": [212, 246], "bytes": [7037, 8194]}, "parent": "mod:utils/auth.py"}
{"id": "sym:utils/auth.py:verify_and_maybe_upgrade", "kind": "function", "name": "verify_and_maybe_upgrade", "path": "utils/auth.py", "summary": "Verify the password and, if policy recommends, produce an upgraded hash.  Returns: (ok, new_hash_or_None, did_rehash)  - If verification fails → (False, None, False) - If verification succeeds and rehash is recommended → (True, new_hash, True)   and calls on_rehash(new_hash) if provided. - If verification succeeds and…", "tags": null, "range": {"lines": [249, 321], "bytes": [8196, 10979]}, "parent": "mod:utils/auth.py"}
{"id": "pkg:hmac", "kind": "pkg", "name": "hmac", "path": null, "summary": "External package 'hmac' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bcrypt", "kind": "pkg", "name": "bcrypt", "path": null, "summary": "External package 'bcrypt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:password", "kind": "pkg", "name": "password", "path": null, "summary": "External package 'password' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:salt", "kind": "pkg", "name": "salt", "path": null, "summary": "External package 'salt' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:dk", "kind": "pkg", "name": "dk", "path": null, "summary": "External package 'dk' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:encoded", "kind": "pkg", "name": "encoded", "path": null, "summary": "External package 'encoded' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:iters_salt_dk", "kind": "pkg", "name": "iters_salt_dk", "path": null, "summary": "External package 'iters_salt_dk' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:bytes", "kind": "pkg", "name": "bytes", "path": null, "summary": "External package 'bytes' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:decode", "kind": "pkg", "name": "decode", "path": null, "summary": "External package 'decode' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:hash_str", "kind": "pkg", "name": "hash_str", "path": null, "summary": "External package 'hash_str' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:stored_hash", "kind": "pkg", "name": "stored_hash", "path": null, "summary": "External package 'stored_hash' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:rest", "kind": "pkg", "name": "rest", "path": null, "summary": "External package 'rest' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:on_rehash", "kind": "pkg", "name": "on_rehash", "path": null, "summary": "External package 'on_rehash' (stub).", "tags": null, "range": null, "parent": null}
{"id": "pkg:SecurityPolicyError", "kind": "pkg", "name": "SecurityPolicyError", "path": null, "summary": "External package 'SecurityPolicyError' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:utils/helpers.py", "kind": "module", "name": "utils.helpers", "path": "utils/helpers.py", "summary": "Module utils.helpers.", "tags": null, "range": null, "parent": null}
{"id": "sym:utils/helpers.py:today_str", "kind": "function", "name": "today_str", "path": "utils/helpers.py", "summary": "Return today's date as ISO string (YYYY-MM-DD).", "tags": null, "range": {"lines": [11, 13], "bytes": [170, 288]}, "parent": "mod:utils/helpers.py"}
{"id": "sym:utils/helpers.py:fmt_money", "kind": "function", "name": "fmt_money", "path": "utils/helpers.py", "summary": "Format a number as money with thousands separators and a fixed number of decimals.  Behavior on parse failure:   - By default (strict=False, sentinel=None), preserves legacy behavior and returns str(v).   - If `sentinel` is provided (e.g., \"N/A\"), returns that sentinel instead.   - If `strict=True`, raises ValueError …", "tags": null, "range": {"lines": [16, 48], "bytes": [290, 1525]}, "parent": "mod:utils/helpers.py"}
{"id": "pkg:_log", "kind": "pkg", "name": "_log", "path": null, "summary": "External package '_log' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:utils/loggers.py", "kind": "module", "name": "utils.loggers", "path": "utils/loggers.py", "summary": "Module utils.loggers.", "tags": null, "range": null, "parent": null}
{"id": "sym:utils/loggers.py:get_logger", "kind": "function", "name": "get_logger", "path": "utils/loggers.py", "summary": "Function get_logger.", "tags": null, "range": {"lines": [3, 10], "bytes": [16, 334]}, "parent": "mod:utils/loggers.py"}
{"id": "pkg:ch", "kind": "pkg", "name": "ch", "path": null, "summary": "External package 'ch' (stub).", "tags": null, "range": null, "parent": null}
{"id": "mod:utils/ui_helpers.py", "kind": "module", "name": "utils.ui_helpers", "path": "utils/ui_helpers.py", "summary": "Module utils.ui_helpers.", "tags": null, "range": null, "parent": null}
{"id": "sym:utils/ui_helpers.py:wrap_center", "kind": "function", "name": "wrap_center", "path": "utils/ui_helpers.py", "summary": "Function wrap_center.", "tags": null, "range": {"lines": [4, 10], "bytes": [95, 284]}, "parent": "mod:utils/ui_helpers.py"}
{"id": "sym:utils/ui_helpers.py:info", "kind": "function", "name": "info", "path": "utils/ui_helpers.py", "summary": "Function info.", "tags": null, "range": {"lines": [12, 13], "bytes": [285, 384]}, "parent": "mod:utils/ui_helpers.py"}
{"id": "sym:utils/ui_helpers.py:error", "kind": "function", "name": "error", "path": "utils/ui_helpers.py", "summary": "Function error.", "tags": null, "range": {"lines": [15, 16], "bytes": [385, 482]}, "parent": "mod:utils/ui_helpers.py"}
{"id": "mod:utils/validators.py", "kind": "module", "name": "utils.validators", "path": "utils/validators.py", "summary": "Module utils.validators.", "tags": null, "range": null, "parent": null}
{"id": "sym:utils/validators.py:non_empty", "kind": "function", "name": "non_empty", "path": "utils/validators.py", "summary": "True if `text` is not None/empty after stripping whitespace.", "tags": null, "range": {"lines": [3, 7], "bytes": [23, 182]}, "parent": "mod:utils/validators.py"}
{"id": "sym:utils/validators.py:try_parse_float", "kind": "function", "name": "try_parse_float", "path": "utils/validators.py", "summary": "Best-effort parse to float.  Returns:     (ok: bool, value: float|None)  ok == False means parsing failed and value is None.", "tags": null, "range": {"lines": [12, 24], "bytes": [226, 495]}, "parent": "mod:utils/validators.py"}
{"id": "sym:utils/validators.py:parse_float", "kind": "function", "name": "parse_float", "path": "utils/validators.py", "summary": "Strict parse to float; raises ValueError with a clear message on failure. Useful when callers want to *surface* parse errors rather than silently treating them as invalid.", "tags": null, "range": {"lines": [27, 36], "bytes": [497, 883]}, "parent": "mod:utils/validators.py"}
{"id": "sym:utils/validators.py:is_non_negative_number", "kind": "function", "name": "is_non_negative_number", "path": "utils/validators.py", "summary": "True iff x parses to a float and value >= 0.", "tags": null, "range": {"lines": [39, 44], "bytes": [885, 1075]}, "parent": "mod:utils/validators.py"}
{"id": "sym:utils/validators.py:is_strictly_positive_number", "kind": "function", "name": "is_strictly_positive_number", "path": "utils/validators.py", "summary": "True iff x parses to a float and value > 0.", "tags": null, "range": {"lines": [47, 52], "bytes": [1077, 1270]}, "parent": "mod:utils/validators.py"}
{"id": "sym:utils/validators.py:is_positive_number", "kind": "function", "name": "is_positive_number", "path": "utils/validators.py", "summary": "Deprecated: prefer is_strictly_positive_number() or is_non_negative_number().  Historically, this returned True for 0 as well (>= 0). To avoid breaking callers, we keep that behavior here. Update call sites to the clearer helpers above where appropriate.", "tags": null, "range": {"lines": [57, 65], "bytes": [1308, 1667]}, "parent": "mod:utils/validators.py"}
{"id": "mod:widgets/__init__.py", "kind": "module", "name": "widgets", "path": "widgets/__init__.py", "summary": "Module widgets.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/allocation_widget.py", "kind": "module", "name": "widgets.allocation_widget", "path": "widgets/allocation_widget.py", "summary": "Module widgets.allocation_widget.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/date_edit.py", "kind": "module", "name": "widgets.date_edit", "path": "widgets/date_edit.py", "summary": "Module widgets.date_edit.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/invoice_preview.py", "kind": "module", "name": "widgets.invoice_preview", "path": "widgets/invoice_preview.py", "summary": "Module widgets.invoice_preview.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/numeric_input.py", "kind": "module", "name": "widgets.numeric_input", "path": "widgets/numeric_input.py", "summary": "Module widgets.numeric_input.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/payment_status_widget.py", "kind": "module", "name": "widgets.payment_status_widget", "path": "widgets/payment_status_widget.py", "summary": "Module widgets.payment_status_widget.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/report_preview.py", "kind": "module", "name": "widgets.report_preview", "path": "widgets/report_preview.py", "summary": "Module widgets.report_preview.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/searchable_combo.py", "kind": "module", "name": "widgets.searchable_combo", "path": "widgets/searchable_combo.py", "summary": "Module widgets.searchable_combo.", "tags": null, "range": null, "parent": null}
{"id": "mod:widgets/table_view.py", "kind": "module", "name": "widgets.table_view", "path": "widgets/table_view.py", "summary": "Module widgets.table_view.", "tags": null, "range": null, "parent": null}
{"id": "sym:widgets/table_view.py:TableView", "kind": "class", "name": "TableView", "path": "widgets/table_view.py", "summary": "Class TableView.", "tags": null, "range": {"lines": [3, 10], "bytes": [42, 396]}, "parent": "mod:widgets/table_view.py"}
{"id": "sym:widgets/table_view.py:TableView.__init__", "kind": "function", "name": "TableView.__init__", "path": "widgets/table_view.py", "summary": "Method TableView.__init__.", "tags": null, "range": {"lines": [4, 10], "bytes": [71, 396]}, "parent": "sym:widgets/table_view.py:TableView"}
